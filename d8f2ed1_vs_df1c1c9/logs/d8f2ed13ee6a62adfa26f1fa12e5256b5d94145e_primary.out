cset: moving following pidspec: 17340
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.918345374 seconds)
loading group "string"... done (took 0.54347355 seconds)
loading group "linalg"... done (took 8.839701409 seconds)
loading group "parallel"... done (took 0.169013416 seconds)
loading group "find"... done (took 1.44189968 seconds)
loading group "tuple"... done (took 2.061242698 seconds)
loading group "dates"... done (took 1.355901753 seconds)
loading group "micro"... done (took 0.216614872 seconds)
loading group "io"... done (took 0.62228079 seconds)
loading group "scalar"... done (took 42.552823137 seconds)
loading group "sparse"... done (took 13.273759994 seconds)
loading group "broadcast"... done (took 1.065788274 seconds)
loading group "union"... done (took 14.94232 seconds)
loading group "simd"... done (took 5.027939383 seconds)
loading group "random"... done (took 10.050990772 seconds)
loading group "problem"... done (took 2.1499751 seconds)
loading group "array"... done (took 25.488444422 seconds)
loading group "misc"... done (took 1.085804497 seconds)
loading group "sort"... done (took 3.647762088 seconds)
loading group "collection"... done (took 21.560944219 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.655853643 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135702561 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150026953 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.196398228 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207518114 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154368698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167216189 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.563192046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015699641 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215788752 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14744521 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.54906603 seconds)
done (took 5.889943045 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241562369 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.437740467 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129378815 seconds)
  done (took 1.243643312 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076949988 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180384944 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094498065 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111043265 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111812275 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11069266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109855468 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095190573 seconds)
  done (took 1.493059398 seconds)
done (took 3.743405397 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.483480286 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.889831703 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.527748185 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.132293764 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158290623 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150735018 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316518129 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165181677 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120438308 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11312124 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171438489 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.347749739 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.486867051 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.939796079 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097469605 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128565167 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.103341842 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68872493 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080701248 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134286534 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530971254 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11287601 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122901814 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141880429 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204551859 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116641755 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179719779 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111742683 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672204799 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102443135 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186071724 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098715601 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163303953 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.253684691 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096194435 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093593372 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683593318 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189485935 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113739862 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096182482 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681452716 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080648857 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191783653 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108281078 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113718843 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191182544 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115203096 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07927608 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102820097 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10191739 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161495856 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450215865 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106812359 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14598809 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109224526 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690972401 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096843364 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156487716 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14111635 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097571614 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097006006 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112428858 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160507788 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111049378 seconds)
  done (took 19.696934195 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118902561 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14058505 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094689658 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139730569 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140380002 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097234398 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083687443 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094931916 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126054061 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18659462 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138607611 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127386447 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092705195 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079806331 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118175962 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249777541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120421928 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105264728 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097756561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090143158 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139952309 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111591243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092961557 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110719324 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170256545 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206475893 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124195867 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123533787 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.079103821 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114923993 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142881923 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161373186 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076078732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093856589 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182356318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120841899 seconds)
  done (took 5.187154258 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114764759 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199028321 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115552075 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191486153 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178201034 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146901629 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166637909 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132965507 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252051761 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18905539 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134573054 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181102415 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114353327 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111488216 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093965621 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081429824 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07728763 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.714053329 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179472558 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147940363 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108055357 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104982289 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097374711 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37336549 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084754103 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097522931 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085319825 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089237089 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177565676 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102075634 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.421450811 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.08361364 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115879722 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105382752 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130445432 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115038001 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140556826 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101938999 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084358561 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.231109294 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091884209 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095291146 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107534952 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134692017 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131380868 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099171992 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109984142 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225691017 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09875326 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118500507 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.075424972 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197947636 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095030659 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09704608 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.349928984 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116784901 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086006329 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099123843 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289835037 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132615546 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081727966 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094630671 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086754448 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095586407 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.409359726 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089996871 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.140437057 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09526827 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156649624 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09972622 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105499723 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0858193 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102043516 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101533189 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097765057 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077649896 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096122421 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077571321 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100517687 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113986628 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082111136 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100783879 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078865645 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163572421 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116077424 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102404259 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125212618 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099961357 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078873662 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128526031 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097369628 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083678604 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14422649 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103290222 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081734662 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115319813 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10068324 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12706326 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096580593 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182477434 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082419459 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124155917 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099374987 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112754584 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117909987 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095733186 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083356465 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094859695 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07996528 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160972087 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079817833 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095599654 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082020049 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111263133 seconds)
  done (took 23.904688645 seconds)
done (took 49.464993923 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.464489674 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09491257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11333386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113035647 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111897973 seconds)
  done (took 1.652036166 seconds)
done (took 2.379525262 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.352966281 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175740202 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119467509 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17757917 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103975135 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184786622 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166176684 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117784408 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196465894 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10041466 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177021047 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100825226 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105190859 seconds)
  done (took 2.834504227 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094576358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118372304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080663928 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109220765 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075208694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109209411 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091162665 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129387068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091843927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101716318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075663979 seconds)
  done (took 1.798629319 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089855738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113159105 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07998735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106440669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074887196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105432169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088538435 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116093991 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089657644 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103160173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074970054 seconds)
  done (took 1.766751439 seconds)
done (took 7.116104358 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.041861191 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.357149216 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118088899 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165280537 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.339027458 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210208002 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.525326049 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131913118 seconds)
  done (took 11.80237838 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112641836 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09603752 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078861421 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113780961 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098712723 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081524405 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094988746 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081956532 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097157142 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082023214 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098237343 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079618388 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095167019 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082147243 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095416607 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081766375 seconds)
  done (took 2.257571364 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116430748 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115662775 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101955632 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107068821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083877976 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10134652 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086105413 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101558647 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083090342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099623456 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.1059023 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08915142 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104036864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097748486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086513609 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106819763 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083010354 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102414967 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101850649 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087649985 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106128997 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084449461 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104340273 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105264272 seconds)
  done (took 3.196309045 seconds)
done (took 17.982095786 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169210868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085267121 seconds)
  done (took 0.984651697 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10169469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117384669 seconds)
  done (took 0.953944384 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105875692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095917419 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134424625 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113449789 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081673837 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095902159 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12911329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080783781 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095935259 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080980033 seconds)
  done (took 1.748281633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085132902 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100630057 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08959087 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118173977 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107451811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082892155 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102258685 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085526308 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102563757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079615458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103716086 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115714133 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086627653 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116877156 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102097316 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086918085 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105909339 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100595369 seconds)
  done (took 2.509565545 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080754951 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082797661 seconds)
  done (took 0.898898336 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083962824 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093767208 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083097763 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09779121 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079186561 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09484975 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078509273 seconds)
  done (took 1.349112054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521730323 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236629651 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332688317 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115099426 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.135177366 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366261471 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.272788324 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.094885227 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.11200013 seconds)
  done (took 2.965871377 seconds)
done (took 12.142511364 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092816708 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.1935122 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.546066942 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119050155 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078373452 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159008572 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.260438241 seconds)
done (took 2.187753844 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353235678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123709841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087633995 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078721644 seconds)
  done (took 1.37902534 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081091539 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102181311 seconds)
  done (took 0.926310055 seconds)
done (took 3.051965556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080487615 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077804928 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091672659 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077764506 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111191501 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092767616 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075603363 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095562923 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078531272 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077492153 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09608651 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078308771 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.093771106 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078586263 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091845184 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075979863 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092092949 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078264143 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091898854 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076059175 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075514193 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09566695 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075342356 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091358463 seconds)
  done (took 2.845232074 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100610833 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096523521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083955808 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10020924 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099570743 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084507567 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100055004 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079270039 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101719374 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081281579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098538368 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.099068035 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08161163 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098782267 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081596415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099929599 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084435822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096319226 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080515256 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098325257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101811039 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080144011 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099341794 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084336787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098835364 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082996041 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0982208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079283933 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101057182 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099022597 seconds)
  done (took 3.516361968 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088139564 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074998986 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093465139 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10300206 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075710144 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079499565 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093079504 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075970998 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094467691 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07579604 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094789672 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076157754 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093262859 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07708853 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093875544 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08289514 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110201601 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07615096 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092895022 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077065242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09848287 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075688546 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095730933 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076036533 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076918687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092882896 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076109533 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092506062 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07720243 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092151716 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08142783 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099251986 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075934008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106067962 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083427676 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092180049 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086141382 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092835718 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077005609 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09322221 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075586978 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092875663 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076524023 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104486498 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07927107 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093505466 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076840471 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077560634 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093844701 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078665744 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093760073 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076193907 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094802936 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078048711 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098857296 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07720649 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094160241 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076155591 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093602799 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07597356 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092094573 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076013687 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098642311 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077117533 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116522954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08790673 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092659253 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07875619 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097334464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084700184 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095781543 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095449024 seconds)
  done (took 7.01865193 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082615243 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104826571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078686575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095010244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07538817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09388856 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084112704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093768478 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078721705 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113072627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076912591 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095664033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078865722 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097855397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076830569 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095561368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086850978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092166826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076962215 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0973242 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077474782 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101435606 seconds)
  done (took 2.709347418 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224499256 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102861419 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143288372 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114045407 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096630805 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111895402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101419052 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085890976 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101282113 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08693739 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103258081 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101161018 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096150317 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104710253 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103991505 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08816706 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100473236 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105315872 seconds)
  done (took 2.725584054 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093914684 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096999476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107600769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096836336 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078939135 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100142862 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10338514 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096179677 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099629799 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079935147 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107562212 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081786489 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099308239 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079788136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09939924 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079626446 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099137682 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097621728 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090874315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104023918 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08677952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107853665 seconds)
  done (took 2.842358521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097836728 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09965051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110049556 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101712382 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093545947 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078969072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104684593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080084783 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105220758 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081585129 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096835491 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078285589 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.103644229 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079684002 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10348228 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079952025 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098987102 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079926851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099393251 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075652763 seconds)
  done (took 2.607995417 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123694506 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113827071 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09626463 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124900191 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114087662 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095763946 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123291632 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113523669 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096379116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127418647 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114123449 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096102903 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124454337 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12008407 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096612776 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124690577 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125304734 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107635724 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114224372 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113335088 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110429626 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113862248 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12589223 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096470118 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116011457 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096210255 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114771502 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120742043 seconds)
  done (took 3.918211645 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080691749 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078528082 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094500054 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076423962 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094546316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076870565 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094605872 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077683319 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096122674 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07720055 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079350498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097046423 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079443783 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096928792 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079692187 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097320067 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079665312 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094400861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077577445 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094062869 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079609741 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078801477 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096640474 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076911942 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095247172 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079879962 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095089408 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076782944 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09683823 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077632247 seconds)
  done (took 3.3336718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089522327 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103470067 seconds)
  done (took 0.955322129 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079351559 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115270752 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077746243 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101614422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08623656 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099576249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090050053 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10376559 seconds)
  done (took 1.514119143 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106990223 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118612451 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087302173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110140772 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099504505 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118506424 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165927175 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103930308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087741557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099657912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099093508 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098291962 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090570638 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104633097 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08895468 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113529282 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078590805 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108384439 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088355054 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101099946 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086558936 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114997764 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108952714 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.088237059 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101467858 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09197946 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112756475 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110401149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086202888 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110922741 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088427288 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092177229 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085832045 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103622169 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079032025 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116380403 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097842574 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10472253 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107711031 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086073325 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107949681 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075513346 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109506555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088465149 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111684398 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086766299 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104535447 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076094299 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09969816 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0846378 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094030529 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084983692 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09306133 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090437565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107975503 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118482816 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083228688 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104229881 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08516725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102645561 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088876201 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10344695 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091818696 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102720592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090745232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108779044 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106404419 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077068112 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093435384 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080021415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109178166 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105990806 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110371439 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086457991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105121685 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078237335 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104221406 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088236219 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10714143 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110711317 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085870765 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107091741 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091012102 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102448131 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084362451 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10638776 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082782605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10228406 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081600092 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119836625 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100895438 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079381887 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099621892 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093110482 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104087762 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084714166 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099265186 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090407945 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092541662 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087044045 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104552372 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087767921 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111144066 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08679781 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106644634 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10777211 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092994885 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104600352 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085013487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096336391 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086333849 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101972202 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089635344 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092139705 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087509419 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103023361 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086928664 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110447986 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083037891 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103477716 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091500179 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111000218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082801572 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095882457 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085566611 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103344693 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108492746 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092817197 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101891261 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076752491 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094864227 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089980439 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103505973 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087470272 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104717373 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086331718 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093743348 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080165049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114600898 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091564987 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102951071 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105620447 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091039273 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10592537 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084195832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110058229 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084474607 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099774158 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09014711 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104419316 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076684251 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109249632 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085248472 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101863129 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086163136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108449543 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104129577 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086293514 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102643024 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086944179 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105059645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081299839 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10438704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084056513 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112718057 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085757383 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095449302 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078248314 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106206403 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08162338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10406388 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081398237 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104377107 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08691405 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0978961 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084443145 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103461805 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098342662 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112813617 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087184202 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107563846 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11086257 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085661664 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106217203 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085540617 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105741811 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086750529 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109461091 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088249907 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105631379 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.0851625 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096731781 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088408588 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110570021 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081670054 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097671936 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082340728 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10394559 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093942011 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104000481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105355469 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084383853 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106802399 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09132021 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104460658 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085861172 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100019138 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086473509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109779507 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087168329 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106046748 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093914649 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105802296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077362328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110314148 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083605114 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108660164 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076999765 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10122821 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082311422 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106202194 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084067442 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104047798 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075389765 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109924274 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092004317 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105599895 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100623525 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087005086 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114368003 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084102402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108070123 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085826644 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10802446 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1191139 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081689069 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104363193 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094841379 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104981012 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07582888 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108772069 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084133684 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099065588 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084429833 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102206305 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087246336 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107852019 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087563653 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095056172 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085598367 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102753795 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082025134 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096257318 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092162074 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106033363 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08589583 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113572065 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088472562 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105110546 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106165036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086392943 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106628706 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08782381 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107963889 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087392893 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103098839 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081656331 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105187241 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081469114 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0984401 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084388664 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104910849 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086628667 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106741728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085924825 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110668971 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086783267 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106525068 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12372596 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083737526 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101171049 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087299015 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10695587 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103627625 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085631018 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077007046 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110619564 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104389826 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09284558 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103751102 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078853109 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106112723 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086247344 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106980219 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087647821 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106339686 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085147029 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104577861 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086302713 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114600663 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082810703 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113142605 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10748051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088629153 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104682224 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08764774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103526022 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082286782 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105459711 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087520977 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106006995 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085280013 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108643321 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087572129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105111226 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084943054 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108272728 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087350078 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109061643 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076295148 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100906706 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082407992 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105369274 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109041973 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088227503 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103573966 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086186094 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106983567 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085643873 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078562191 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110452462 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107774588 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088124695 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114091258 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082703263 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105653896 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096845394 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094897116 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084324259 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09915578 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083249423 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111306551 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087434982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111116503 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087084588 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101920093 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079093017 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107258589 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084894351 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096297028 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081515819 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109482567 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084729448 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104335938 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087341637 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108031475 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087851631 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109555894 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104509009 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086577654 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105524351 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079468594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101909558 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082886508 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105223815 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088448286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102337963 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079869859 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10512086 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087567535 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105876173 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086338336 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10473007 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092425891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105481354 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086777636 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11043513 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076716745 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107051879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086641102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105104122 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082306605 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107828931 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088242375 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107084601 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111210253 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08650368 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107860456 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086601568 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100225019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086582748 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106224165 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087584011 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101944837 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088899658 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112730636 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080654758 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106495555 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087980116 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102976408 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088685039 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10784415 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087360497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110575461 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087929688 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106113043 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091287389 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106445912 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106881395 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088751652 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105024317 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092052831 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101952329 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094280809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106738643 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088359946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104479791 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08423914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104911658 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086447115 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104867379 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092873612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107714309 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083217335 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102617655 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080948912 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106541134 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111376509 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093573693 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106752207 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088480055 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097112373 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080435211 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108033259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083567259 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105925445 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090652192 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110853138 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087953206 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103928221 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0862098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111693133 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092139718 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110016454 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102508743 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090665469 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106954253 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087485822 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104266061 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086412207 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10919479 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089815227 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104947523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083721342 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116265781 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092400452 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108637461 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105365566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09002816 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10657854 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078497109 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107690264 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087854461 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109971099 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087636136 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106623357 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097963744 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101879908 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086296994 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112100061 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086754042 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112458851 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097323552 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088460844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108242064 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088724 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098851768 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084243995 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103103399 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088404198 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102661047 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078756493 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117307412 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093098912 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10818209 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085673248 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104934064 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078764941 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097830863 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083439224 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108701089 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08700795 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114930792 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083604533 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102283876 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07891518 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107165456 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08903708 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109999835 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080330748 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097928007 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084043457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107383707 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115351267 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085526958 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107562354 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089911586 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106633345 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082172396 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111418826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079450566 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107875114 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099745775 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108264021 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090401143 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110717934 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112839552 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088464746 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098862097 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088502632 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107446737 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089159179 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107920003 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090432116 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122430465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088300323 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102966343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086227833 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108258707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083790876 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115508356 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108842103 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089540346 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109508986 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086285193 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109689417 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094789156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109346897 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088505459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108705945 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085959473 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10750909 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08509329 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105806013 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089989056 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108955856 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086976099 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109899657 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103114806 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098867235 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114451221 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090501803 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09999965 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084264119 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10299403 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079331316 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108355663 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082475368 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105107507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085952975 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105238478 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090839753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109242904 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088446564 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108591427 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087461135 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097243893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091077043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108393448 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0913558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102383203 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088944953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108477198 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09207555 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11261287 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105431971 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088476621 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106300883 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090852246 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098192441 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091535885 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106095148 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087350903 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102771627 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088439501 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109737311 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090720619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109259038 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09077659 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108733036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092884071 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110806317 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081278437 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10042092 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091709565 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101828227 seconds)
  done (took 58.593235552 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152876072 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086403897 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099283808 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080031473 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125564074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079791888 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098689658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080866685 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099287889 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113046789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079458974 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098663809 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101576844 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127220852 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12311851 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113013083 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079163676 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099905541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078793525 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10012251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119255797 seconds)
  done (took 2.945515771 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105884681 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117810456 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115918237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101300721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110610837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117675252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116190057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09784525 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120550994 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111507427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100411768 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117285375 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11142125 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092402895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111946528 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114863543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120428703 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090993684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117885729 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115152727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094883179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115345949 seconds)
  done (took 3.223418791 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09388338 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086566514 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112975645 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.08134479 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106943679 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081406156 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112156987 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083998287 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112456324 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.106909361 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.08490486 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087857297 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111972919 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080974044 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105326017 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083925379 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11221094 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087727269 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108564125 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081658195 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129033161 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101240848 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082296487 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10471018 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096757988 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108478628 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087171728 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106955117 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.084545719 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107300815 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083372929 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.1095088 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090885042 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104882768 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.084417479 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106491298 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088167355 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101392675 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.084790298 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110740084 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082467244 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108497537 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093863552 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104607192 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083432188 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10963755 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08713922 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101918207 seconds)
  done (took 5.477532704 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12352867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156894814 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09236234 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1551752 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125967907 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123021342 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091383294 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147246586 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106116588 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086691127 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125232478 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122826035 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089227329 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116953628 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111727229 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088510791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111554091 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093189 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115957119 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112394439 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.096542886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110769076 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12209408 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099659108 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113232188 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106719834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087583337 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116031512 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119995658 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095172885 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113136005 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096688316 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129181767 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.116389785 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090584309 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110791165 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124345933 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088605199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111417751 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105584433 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09100392 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117591051 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091927294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12532637 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109377723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090439095 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110312449 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090250425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126137873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113737099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098447332 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123235922 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112140654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088050859 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114487151 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125880249 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088943019 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107776783 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112106254 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09998925 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108080233 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098840955 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129099597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11267878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117055721 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102694461 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110555972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113192042 seconds)
  done (took 8.442050077 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097342494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13318165 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125183721 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105372056 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114967757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113664429 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093423388 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113226081 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093683061 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122020932 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11383706 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164667667 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08772794 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120286251 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114869635 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093202015 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114182732 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094212484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114437456 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113911852 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094279041 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125784948 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114086075 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104948735 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127919424 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107200507 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093628771 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11461789 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125466598 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09368852 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128674703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114115615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113654544 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105359136 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127661681 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114856367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084828591 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113399413 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093669682 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1148764 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107818528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104714171 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114554338 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107388721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094985366 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113979975 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125251852 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106363122 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120936751 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120188539 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093866444 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126137834 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114395274 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094265462 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125855315 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134297954 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125138759 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125477601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094606583 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125918894 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125663682 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132934878 seconds)
  done (took 7.810452483 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086709056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084515961 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103273458 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082070598 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105512686 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082370852 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105852124 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085475996 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105588707 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084916416 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1047429 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083362106 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08255867 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105778817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08313022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102951179 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082829452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102533155 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085165216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102996586 seconds)
  done (took 2.684578712 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095603788 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127083364 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085733471 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11338895 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088654374 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114719997 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107535165 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089217828 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106034303 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088381508 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11890469 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118114866 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086840301 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113416504 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097148183 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114137628 seconds)
  done (took 2.487514431 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108950282 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119362227 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132012425 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09043768 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104571709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093266851 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105204474 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08210497 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102536526 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094021737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111905516 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096596055 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106335483 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083363655 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106515231 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091431136 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102379131 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089371417 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106002237 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131021538 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.090449721 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109073176 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086786031 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108135587 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087756272 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114950948 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112621225 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083596379 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104471703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086140088 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109768385 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094270567 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10322938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.090901168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104852435 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083011824 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105875102 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08656868 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113007379 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085175662 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105050038 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107476089 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085677211 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10795081 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082392454 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106421335 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081697089 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112756564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088432604 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109458801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086148677 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114454481 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093518132 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118912559 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116643464 seconds)
  done (took 6.365662566 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103290133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110284496 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09031285 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104011251 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089189756 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114844176 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089778426 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108034771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087149255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104117718 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088040095 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110202527 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088369337 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111845876 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108696022 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090145068 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100888926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087445957 seconds)
  done (took 2.615283597 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093804078 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106551093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093475802 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106223083 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086077746 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108962218 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082106576 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104513645 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084533371 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105922006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086302647 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10857958 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084630964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087582612 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106972315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085572345 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108638876 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083456818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107382012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081758221 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109532096 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083684986 seconds)
  done (took 2.93789908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105709648 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139560197 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100207353 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150263373 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111832807 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089668495 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122582144 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111590089 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.108826055 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109895966 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089809615 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110310545 seconds)
  done (took 2.182280264 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114884863 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145446513 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083804005 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110299961 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12045316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091755941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112526923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090815059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125752783 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125116648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112476835 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103731616 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124206346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122302843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119957523 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099210985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112077218 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091384914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108448497 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134259643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111673623 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10347756 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11202935 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090831472 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113396905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12258666 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123750805 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104975286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11310529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124602177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099262248 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113410674 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123516015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126044962 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089059887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123942919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112351157 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11372449 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122108901 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122361751 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088844795 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121568457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124241177 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119260445 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104680571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112416398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119251405 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092085416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112331199 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140453015 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119896883 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102905324 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119197376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124214268 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124326736 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139320667 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105405553 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124124536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119979349 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126512126 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123462406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100415866 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12372732 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125581892 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119487953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103143261 seconds)
  done (took 8.389328349 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129622086 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106031481 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112658743 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10551739 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124425478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112017866 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09145889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112241173 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112278174 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088964279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160313057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112248003 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102111053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124024663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112585784 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092586978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114006091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123006497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088517943 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139846753 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114280391 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123607039 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123798033 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103069449 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126415382 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12003666 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112543758 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092774517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113222975 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09251337 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119903713 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112905387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10245629 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105593698 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123016096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092684303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113498938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119461768 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092724453 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119871691 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124600327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133396637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092597636 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111714854 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127069558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092733527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112351805 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088530333 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113151879 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109014813 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105761209 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126755016 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126361504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124366327 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091574444 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113212051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112676507 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092223193 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112051252 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098989482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123469038 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112532868 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141503774 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112468575 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092548512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123845403 seconds)
  done (took 8.246862456 seconds)
done (took 157.128694365 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106306604 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143887753 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100712434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171364747 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086937627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143519619 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119541132 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123629448 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085557822 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109446921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086286945 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111532322 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152382977 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108576725 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086491207 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111979637 seconds)
  done (took 2.686852646 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183838528 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292798843 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105393642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113894826 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092885613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111937351 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113754502 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093424639 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108947458 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100089867 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110274817 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089798459 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120814186 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090156421 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110575374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08859642 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122026596 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109757441 seconds)
  done (took 3.004372858 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122441422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152685263 seconds)
  done (took 1.121744413 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126490107 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187829111 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314948176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165755204 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117740078 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130999231 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165398069 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128828741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197096918 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131126354 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13086248 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095211291 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13914151 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120817116 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098473635 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114109338 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120918004 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117075731 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094378085 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116303647 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139081351 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.095244253 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12065736 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116798408 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186551814 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.108232966 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116730385 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115298738 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095872946 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116529594 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099842266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129544742 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130218254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.172783431 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121765732 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168540648 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124653558 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113188304 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096334125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113866208 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097657458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119937355 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130094489 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093746642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115766299 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.363459974 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096288099 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115404513 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10159641 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12381745 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12224698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100398472 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191291388 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123365868 seconds)
  done (took 8.030289423 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858930612 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133160171 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114755742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.963524967 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121692196 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130568448 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.831442914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138762676 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243186589 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.856222552 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131527219 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127722559 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214080672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.280734211 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151270156 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344020844 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.71224252 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128537616 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120220229 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155594158 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121081349 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142817982 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133361883 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423942843 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092260856 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114191077 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096830444 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126074724 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167208206 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113322976 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0948644 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210491969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270767206 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20880358 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092147047 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112564773 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089922539 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196467108 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275544912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20116182 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177044988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109678909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090074008 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127099304 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134058677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088013327 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192248658 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181679998 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180468377 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117277265 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125491677 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100802487 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125875595 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168348291 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110706908 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343057759 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325015413 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112985992 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121930667 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111195303 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275629203 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113689921 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231730609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119060522 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222320484 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112576535 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783228328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.194980901 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092159679 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123114144 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099239539 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119374976 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125312398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173078763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383042775 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106525845 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118038557 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112072582 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221581968 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113243921 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091123039 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171917212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116154821 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12194035 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108542709 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127276569 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177152613 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278020503 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106953896 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122278159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118154291 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104984767 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115207419 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219519027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226701164 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165250705 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240456428 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106076343 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194222266 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173597773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125682258 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179451096 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121386467 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110067707 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126528429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222500523 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148127197 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091913955 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118852494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121115418 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152351162 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095018329 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120426002 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176795814 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454559131 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.197004292 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088901881 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118083453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101220821 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192055999 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099081301 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271241402 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123349267 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175695368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121118324 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08916225 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122375789 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172773769 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128116511 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101250831 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127404153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122427045 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257918578 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229383836 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12901487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220812342 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181912602 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123770999 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18083864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122894597 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176969691 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124043789 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103493352 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116664459 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819251126 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104530169 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121772704 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119349996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198217785 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091774231 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114860918 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091618972 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11060288 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792070288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117039774 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.089231881 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.115802698 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100830673 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122192063 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120080765 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097217051 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191488379 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239843185 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104888166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121808078 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091966864 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190781578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094861184 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114719518 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092467348 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114676135 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101675399 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118449903 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093635823 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202299882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167280126 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226836504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.51678615 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11402262 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091385576 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237359387 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114352619 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311294504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099915332 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234355738 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19647428 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089438987 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344007704 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.177595565 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197210752 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117700965 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180377519 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088389148 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122289139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167859371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114440548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12121083 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166400562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131102121 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106735523 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.156664576 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113727657 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236416551 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089040744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.200065181 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094985675 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126758009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315520378 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091461964 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134788536 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168281609 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118845466 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092066807 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.626266274 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091984656 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126161616 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124336753 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229666272 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174322458 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121469436 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100895496 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127743979 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170665432 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239826957 seconds)
  done (took 45.259778338 seconds)
done (took 60.946797476 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308815381 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270442165 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311222367 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223761536 seconds)
  done (took 2.065468555 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185370549 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156735318 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150720797 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089515591 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159261575 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111186009 seconds)
  done (took 1.721880471 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492489659 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.405890324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348405184 seconds)
  done (took 2.118114032 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267132254 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.285423115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367233089 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418216604 seconds)
  done (took 2.31685485 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207942414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130108675 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143432263 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175909355 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180395024 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147202488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156375036 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133644183 seconds)
  done (took 2.300361551 seconds)
done (took 11.3961263 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.134694266 seconds)
    (2/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.301511938 seconds)
    (3/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.22654704 seconds)
    (4/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.277682421 seconds)
    (5/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.172257073 seconds)
    (6/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.237196086 seconds)
    (7/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.129005842 seconds)
    (8/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10540805 seconds)
    (9/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.283120439 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 0.209967262 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.201840505 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110694777 seconds)
    (13/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.126078643 seconds)
    (14/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090571598 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.131750921 seconds)
    (16/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.214030102 seconds)
    (17/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.209707477 seconds)
    (18/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204310699 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096285707 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119218299 seconds)
    (21/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.193579376 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.263755192 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.183365953 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078001863 seconds)
    (25/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.134006301 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.130790994 seconds)
    (27/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.17437959 seconds)
    (28/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.135251274 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.146589894 seconds)
    (30/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078391546 seconds)
    (31/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.239575767 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.148429038 seconds)
    (33/286) benchmarking ("sort", Float64, false)...
    done (took 0.178218636 seconds)
    (34/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125770602 seconds)
    (35/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106856768 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118939871 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.12735097 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.206203004 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126324442 seconds)
    (40/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.241094795 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.162587912 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.146250161 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.078817106 seconds)
    (44/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137946571 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.13557279 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.13015392 seconds)
    (47/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.147950181 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21644574 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.121880269 seconds)
    (50/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.192487884 seconds)
    (51/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202502863 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128136393 seconds)
    (53/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117400623 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11057437 seconds)
    (55/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.225274808 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126668494 seconds)
    (57/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078023538 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.115246281 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093350198 seconds)
    (60/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.198755162 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113216206 seconds)
    (62/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.209880186 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097749473 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077272517 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.204186233 seconds)
    (66/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118844849 seconds)
    (67/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.158049269 seconds)
    (68/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.221304569 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097503489 seconds)
    (70/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.125232082 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 0.2184278 seconds)
    (72/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.157992354 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124648862 seconds)
    (74/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.188664876 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119609364 seconds)
    (76/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194829433 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206403734 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106878618 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.112962422 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.12274609 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207822029 seconds)
    (82/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.193755158 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119088207 seconds)
    (84/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108355684 seconds)
    (85/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.232931588 seconds)
    (86/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.199713055 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.159364333 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.206687803 seconds)
    (89/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.206752472 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098656884 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119714883 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097950772 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102158882 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119478104 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15037607 seconds)
    (96/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118507525 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110716077 seconds)
    (98/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117620459 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.18040748 seconds)
    (100/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143628497 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.143964544 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119270002 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107222587 seconds)
    (104/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.207623124 seconds)
    (105/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.156873328 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07912386 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144355834 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175712078 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10425199 seconds)
    (110/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.131973931 seconds)
    (111/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091366652 seconds)
    (112/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11878867 seconds)
    (113/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.094991915 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136275766 seconds)
    (115/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166548828 seconds)
    (116/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191317871 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097825526 seconds)
    (118/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.109613432 seconds)
    (119/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130847732 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120443822 seconds)
    (121/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.08771574 seconds)
    (122/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124592695 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.191819695 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.103706613 seconds)
    (125/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108725754 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097301255 seconds)
    (127/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.128522052 seconds)
    (128/286) benchmarking ("sort", Int8, true)...
    done (took 0.20643914 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145268078 seconds)
    (130/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077976564 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101532819 seconds)
    (132/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.08607423 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119453185 seconds)
    (134/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091120422 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121030682 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104118308 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101530198 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098098752 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.142495112 seconds)
    (140/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151755689 seconds)
    (141/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232401517 seconds)
    (142/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201074141 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105650555 seconds)
    (144/286) benchmarking ("sort", Float32, true)...
    done (took 0.210783154 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.126489081 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.206967817 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136630256 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102441282 seconds)
    (149/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.164485099 seconds)
    (150/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.104689345 seconds)
    (151/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120084305 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.194137724 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.10743728 seconds)
    (154/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.129062656 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091259335 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120902699 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.102923812 seconds)
    (158/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102585573 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091665098 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196617814 seconds)
    (161/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.100245514 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10493618 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116923367 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.121146079 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103076672 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096756603 seconds)
    (167/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.101318994 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.116968958 seconds)
    (169/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118707817 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100664198 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101258801 seconds)
    (172/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079194353 seconds)
    (173/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117977604 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096022218 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.11781782 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079027801 seconds)
    (177/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.101256922 seconds)
    (178/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090780156 seconds)
    (179/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.159240041 seconds)
    (180/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10618637 seconds)
    (181/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117312496 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120664216 seconds)
    (183/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.170409474 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119349081 seconds)
    (185/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077974369 seconds)
    (186/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119500542 seconds)
    (187/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07828189 seconds)
    (188/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.167420041 seconds)
    (189/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.129343611 seconds)
    (190/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07803004 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.128256123 seconds)
    (192/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095791603 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121007279 seconds)
    (194/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.078258975 seconds)
    (195/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119588566 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09835013 seconds)
    (197/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118019546 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108672915 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101926336 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 0.208828682 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.094442749 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121970701 seconds)
    (203/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.119687245 seconds)
    (204/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.219706831 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101568944 seconds)
    (206/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102765356 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.107411008 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130833702 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10685051 seconds)
    (210/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.10994721 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10506583 seconds)
    (212/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.128331121 seconds)
    (213/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07928481 seconds)
    (214/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.130189352 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 0.200570356 seconds)
    (216/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121458258 seconds)
    (217/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.086518963 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077276175 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119573358 seconds)
    (220/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078676774 seconds)
    (221/286) benchmarking ("sort", Float32, false)...
    done (took 0.180381828 seconds)
    (222/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109763094 seconds)
    (223/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07860201 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117855157 seconds)
    (225/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.103891821 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117291067 seconds)
    (227/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.087084754 seconds)
    (228/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.101417636 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.093479097 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118798843 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.114516423 seconds)
    (232/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102502391 seconds)
    (233/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078624641 seconds)
    (234/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114579995 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103024321 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12187004 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.100276627 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116689467 seconds)
    (239/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078882283 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122476045 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091785616 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114830535 seconds)
    (243/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087311285 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.10197236 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09638653 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143523182 seconds)
    (247/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079798555 seconds)
    (248/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11980976 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.106572064 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.101392679 seconds)
    (251/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097332862 seconds)
    (252/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.103055386 seconds)
    (253/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08004148 seconds)
    (254/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100896853 seconds)
    (255/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104242245 seconds)
    (256/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10225872 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.117535813 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124721758 seconds)
    (259/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078547739 seconds)
    (260/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101654737 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092034958 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118451113 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092853993 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121806646 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.106335359 seconds)
    (266/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121521037 seconds)
    (267/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079113436 seconds)
    (268/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120360266 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09862811 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119112689 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078886863 seconds)
    (272/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.101631373 seconds)
    (273/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096393518 seconds)
    (274/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.103668981 seconds)
    (275/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.164950893 seconds)
    (276/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.11200729 seconds)
    (277/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118903482 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103384349 seconds)
    (279/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101976173 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093990443 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.078335785 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123331233 seconds)
    (283/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118824496 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091810535 seconds)
    (285/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078107492 seconds)
    (286/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121715234 seconds)
  done (took 38.50977738 seconds)
done (took 39.391163965 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106935351 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156520109 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102695458 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145221044 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128353664 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107839572 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125300847 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103161266 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128979426 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130254677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106735776 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.10940005 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102198126 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126326767 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103239346 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147306843 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130293148 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.099032897 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119369759 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094916592 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118759822 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.096186119 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120528445 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.085174519 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127462929 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12390217 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098425648 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126532994 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.095983401 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116433804 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093679233 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122024637 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093134054 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.146009798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097652745 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119042957 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102896688 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125224419 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.096816068 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119091438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099280827 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119799708 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120943004 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100087905 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118480739 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094625839 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118534643 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105901886 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145860455 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096033834 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.123911991 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102481839 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128016223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.123298035 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093445135 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118232563 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095869896 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145618234 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094693434 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119191601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099539259 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.123615158 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093876572 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118639423 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09476581 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12996659 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125016816 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09491255 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125181833 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098254135 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113763038 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095028601 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117497009 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092493598 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.125639748 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102654894 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113403776 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09621619 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.12251936 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097222604 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119197944 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093998931 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121144258 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09731961 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116760484 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086572898 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117221101 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09782908 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119186285 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094732462 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.121663705 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098013307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121430287 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125989432 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095591026 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120015693 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095999543 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120283614 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097748054 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117405265 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091604822 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117083343 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100501229 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.116531441 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096324801 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.129077603 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093124563 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121489145 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094356904 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.119506186 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130782682 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102497661 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118952925 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096506976 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115641655 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099150167 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11704577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093388332 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117379853 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096030445 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119935642 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095900688 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118765049 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097627711 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128981252 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.115491074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093952013 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117426534 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.095754463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.121826953 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096663459 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.117162781 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094994245 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113435875 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094062117 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.117209382 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099268823 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117608311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09614357 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119736331 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095510332 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121100337 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096957845 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.121199747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093552062 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.113036088 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096602199 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117058843 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097650273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.120293506 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09551057 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.114749712 seconds)
done (took 17.772678172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105445706 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189789987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151935594 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155667382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153821209 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112732629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130351869 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151740142 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127896513 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124572066 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149436416 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141597824 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156261156 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103393911 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137589569 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126567768 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.102309437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136782348 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160459215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122607162 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151923325 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128464651 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149080178 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122548476 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125618427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14595558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104899272 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127375746 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128922433 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119609462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143690896 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129310106 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104300275 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138596797 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109527742 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125390707 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136182473 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098398869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.127561961 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12627326 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114676428 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137805738 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098949512 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135485158 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12617716 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105653876 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126009575 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124854671 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102370023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121015473 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107593271 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147398557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124763534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10462922 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.128182878 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126986293 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104748057 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12996349 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127864659 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.105971097 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126002589 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105379785 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13292819 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143172638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101883788 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130070725 seconds)
  done (took 9.352670362 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120893407 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15713041 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133756291 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110124057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130046792 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091005784 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116422851 seconds)
  done (took 1.797902704 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09516144 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147036504 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126420275 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150845828 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139486477 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.156983086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110431805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.119940651 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117015456 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130326732 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145629164 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148402172 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119902916 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128613305 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128681969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117339367 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.153344084 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092748714 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125365112 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.126128286 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123299402 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.140910588 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.106603603 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118885991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114675416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119606106 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185976611 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105308003 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117986292 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099921867 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12296168 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.191134304 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140589565 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103486072 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116182714 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145926851 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.115448215 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123676301 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.118619637 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123408433 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139290424 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100598557 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125290312 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.099855759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125266745 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108161939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130091522 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126343774 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099792279 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146722938 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104233567 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141043318 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119547732 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097821884 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129419053 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100153808 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133243694 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098236357 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147233725 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124884743 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120037673 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14565756 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139326972 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120622444 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136340787 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141005639 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.11543404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124733819 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101790408 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126315202 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145463691 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097486736 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129149204 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.109453674 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127674061 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120673816 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146255172 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123327477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106814963 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123879036 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096767301 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119131007 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109556241 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122335923 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096305521 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136247947 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13138904 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.099955716 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122881088 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141431554 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09839985 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131008666 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.105545802 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1223747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134242296 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122321688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129876725 seconds)
  done (took 12.977749703 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098685154 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.09461757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124910396 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120302824 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095131683 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120002621 seconds)
  done (took 1.600179007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128959738 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123275699 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110144986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127502702 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163243147 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117451844 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144949274 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128558877 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114927338 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134566241 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.1429972 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120075692 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150225985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101453368 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144357585 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126592597 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.118690182 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124079685 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109133412 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123811011 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13647732 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102669382 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122773799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.116976216 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127470213 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102101339 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1260322 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134399296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109488317 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12957757 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101813703 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127622793 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126407839 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.104000146 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143864279 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102117472 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123211406 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.104189071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129528998 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127320815 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119869796 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123561224 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107891798 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131525388 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129683243 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102824135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129082898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101080517 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14369535 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103943953 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.131154179 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126568917 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103118602 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128678774 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102269409 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129606031 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103656389 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144544999 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126457822 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10239738 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123916411 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102825067 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130485947 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127412562 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101559052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128811996 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.102082114 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123425036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098834926 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12711295 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104367631 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124400666 seconds)
  done (took 9.689717409 seconds)
done (took 36.345875058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692510391 seconds)
  done (took 1.639491903 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.861536771 seconds)
  done (took 1.813399715 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.081000606 seconds)
  done (took 19.063944343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.546322739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.637940002 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989236294 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170157061 seconds)
  done (took 3.295482005 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981034448 seconds)
  done (took 1.949954655 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.319069583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269217513 seconds)
  done (took 1.545165889 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.843754517 seconds)
  done (took 1.810025104 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.578578041 seconds)
  done (took 2.539336105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359847061 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205618609 seconds)
  done (took 1.541067188 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592710404 seconds)
  done (took 1.559079822 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.750991218 seconds)
  done (took 15.721038547 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242526958 seconds)
  done (took 1.217387422 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309716588 seconds)
  done (took 1.274103352 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.723901871 seconds)
  done (took 4.695009496 seconds)
done (took 60.61820142 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108361604 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133521418 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108459602 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130485576 seconds)
  done (took 1.445011564 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113230285 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128597311 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106956282 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127463136 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110171319 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128792682 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126071978 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108347292 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128197318 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104614361 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128707598 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102135718 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13095551 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126024328 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100715035 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129831099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10609474 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12922768 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102644747 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130592532 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126725978 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.104188479 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130715321 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.10292909 seconds)
  done (took 3.807548932 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108917918 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123847646 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102067048 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123963386 seconds)
  done (took 1.438966677 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112816967 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141542399 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114841077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134117442 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142444701 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116483363 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124672145 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098238585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126266614 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109143028 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126455139 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144620906 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116236814 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119241099 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110357228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117715262 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094611087 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142158976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134339182 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110639396 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124842148 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109417549 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132731453 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138440359 seconds)
  done (took 3.914690858 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.215875963 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112007778 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148283967 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1782555 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.124215993 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122349344 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.150157526 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.106289848 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129159673 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.097784594 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124181047 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.179229026 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107038652 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128720227 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124335959 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.105699409 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132243767 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.107378568 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.126906324 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136476545 seconds)
  done (took 3.634361382 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109347146 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124644856 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094830174 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123235561 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105235623 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125956835 seconds)
  done (took 1.660189432 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098142246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093829215 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.12063687 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092643265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.12401322 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09407514 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118233072 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.093579239 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.119394091 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093977813 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.118338343 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092347281 seconds)
  done (took 2.237513229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.556598529 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097267034 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127682936 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124039913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103944292 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.12221284 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.113455279 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123856792 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180556528 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098456039 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140846086 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178521073 seconds)
  done (took 2.950808969 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220171777 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103291422 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283077005 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384646167 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165412398 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174014523 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283060749 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173926097 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193205545 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144616134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212869143 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165268299 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161453701 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186399941 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120896748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192068959 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208529625 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20933152 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154692629 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222429993 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171282515 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174189796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198629302 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158909417 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144558032 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166803649 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098290888 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135330654 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180961839 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176214322 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181089404 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156112478 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14518626 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20777279 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248059136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186257961 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309059388 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140728246 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199061956 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19956271 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283434062 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146514639 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203391816 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160990328 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136826454 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187152989 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163394462 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188698369 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111416212 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148807908 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215021726 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182384191 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188065132 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143474097 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305184994 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154498272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.125473366 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186925312 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224961711 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206288933 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173465332 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129512169 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192438398 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198875184 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18765386 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151609481 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1751046 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130213797 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18441329 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211341005 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184594564 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174601349 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219319964 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139520892 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171295171 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185948782 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132736651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186223736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166891128 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128519816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156056032 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116643102 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135698942 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192054418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102850663 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246332616 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115353617 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.322403319 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213992432 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165789169 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168309215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172592646 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176012099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15307852 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098986 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1546029 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178771895 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16551816 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138874565 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137744798 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152722723 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133201375 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159702347 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103393676 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166605759 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141682787 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174659565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172238379 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107767409 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171598073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157270172 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165850804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176927077 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201719121 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14029312 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138358704 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210156434 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164419628 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.116101156 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192546608 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230187367 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180762505 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11622183 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204287406 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204132125 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121081379 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232538664 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149013542 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113495568 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158417287 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166062589 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164215582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162520803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108752673 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158977511 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236756555 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107515473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143900863 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182700475 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105989198 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135534565 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15193581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142220223 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121656078 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157915897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146077934 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162969845 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16636233 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133302066 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165331361 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149988974 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228085035 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112852137 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168171136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154825285 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097083495 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.212912973 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201807839 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108460849 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193211814 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.203072562 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203593671 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171525971 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137076185 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189484126 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109061246 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12686149 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173468801 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167905845 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169296542 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200249503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200707355 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17372542 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16026997 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156838214 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174475142 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191294888 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163501323 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153756662 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173633739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17523201 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128338236 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102535037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132739278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146897016 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111253538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139240687 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189198199 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171600399 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196520971 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167967848 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148518853 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199514833 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133051377 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172538569 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180721044 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145464553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201590382 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199459321 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174047956 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150249544 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179214517 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098976349 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13235607 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138966888 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173753722 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112792761 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14098488 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151793689 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200376945 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184116332 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157906839 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211957172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173899922 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237597195 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101765166 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170670067 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189106481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164828335 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193082099 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11497219 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167372468 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194699208 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151800034 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200398317 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169725766 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175848226 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238058155 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163131464 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109599799 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157758719 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175388737 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148050959 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179091616 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153782217 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114322341 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160691551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144731952 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132537455 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188631054 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149746303 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190011738 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174379869 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181509659 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13276725 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150843511 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139751829 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152781176 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124078017 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177660834 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204641392 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151676773 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166416204 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191932696 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136847959 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320890015 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206204538 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193421733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145481965 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149755543 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168302138 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176753439 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171713996 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191022936 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150143726 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188602448 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165115356 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.123658746 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142428598 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154684876 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129684463 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158906045 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139815927 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160376436 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149272374 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192704467 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15270802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165748001 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171402001 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127324578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163179838 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146698988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218912821 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16560102 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186580895 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163121006 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184200604 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196815674 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131430019 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10733573 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133535543 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191481178 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1105827 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16616686 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218360676 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206349119 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166736325 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178101936 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14538821 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103218629 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167625372 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156413771 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206360177 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149969759 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144623929 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209460343 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159312725 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108946793 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172586188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315491939 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124810843 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190751762 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130508074 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285769782 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132828637 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1113899 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1783798 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178979382 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139984097 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190458779 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174025474 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123766748 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178572473 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146317868 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19871809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244480842 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18044293 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183298449 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150822253 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165892895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169966874 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194418025 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149904127 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124448576 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172506024 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201704259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202110401 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141196251 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172104123 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171628123 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167406186 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182190328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142350512 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196127034 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137486024 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17473185 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119357358 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131571232 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164890208 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191377708 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140279042 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19230327 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165947575 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110377277 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135083081 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160931174 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166355039 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150732836 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.109357309 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1852956 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135544023 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170372517 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188251435 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109027888 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162139492 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154727147 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135950945 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122172633 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152198864 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142333698 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152194258 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223946434 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110182322 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19273991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208699575 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172086936 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16634573 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123119914 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670331374 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134358237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199245439 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125763751 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225496125 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127408777 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175845254 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169038293 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157472039 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176468069 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158490097 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229736772 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174162829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165437036 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110106015 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15308505 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153931156 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137603752 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129960401 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171404321 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148048539 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144232281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162723142 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125411692 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153903062 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146862475 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202213104 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155177577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191661712 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192846913 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146475137 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174362907 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183653947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136490203 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167863235 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180651033 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121317755 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159117513 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138360771 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14225347 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158862317 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13338046 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169335755 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16830699 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169833252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172442013 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113304737 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168130104 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150131322 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168086054 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132612218 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.134376425 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164529557 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139076285 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134538266 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133890415 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16435216 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166408294 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133589948 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154350706 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224385275 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105082495 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140415428 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291865046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166889127 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202370281 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161242844 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112613654 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152804594 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164598473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160176324 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168576897 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107386117 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140848045 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138801208 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188140093 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173051957 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1369027 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19251917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170999533 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225500108 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114134076 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274599734 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146508926 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133972507 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139558799 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136544999 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118182819 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14383762 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152861504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200182259 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187299221 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16310365 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152751586 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105866372 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135865945 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110273929 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180445407 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161261946 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166781105 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151356453 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125109619 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123632747 seconds)
  done (took 81.123108634 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157089934 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149650701 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157122085 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205038342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175486602 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264495102 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213647701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234950251 seconds)
  done (took 2.62616314 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110676955 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143801219 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148693259 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132056435 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131808804 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.358237984 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142939969 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104669002 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191279918 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143321744 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129414392 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.628358476 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129388118 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129981079 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118910807 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.10554447 seconds)
  done (took 3.904317252 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.460380404 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555356514 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.132204407 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.256751535 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236913143 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185293136 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764121211 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.17202325 seconds)
  done (took 12.830373586 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.1331953 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14735153 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146285637 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.17328527 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.158321432 seconds)
  done (took 1.833701711 seconds)
done (took 124.373524406 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105356146 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131114814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102722568 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132736169 seconds)
  done (took 1.53351286 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118823628 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086265869 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118454377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085580157 seconds)
  done (took 1.47486211 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439490543 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117720266 seconds)
  done (took 1.660040739 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129114602 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14406648 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125180804 seconds)
  done (took 1.475066064 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112629924 seconds)
  done (took 1.186474775 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11606557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.138465564 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121163486 seconds)
  done (took 1.451184257 seconds)
done (took 9.850776854 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119784902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.442647608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392021889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146268822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730897415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387304142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.086801133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165996642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174135059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097682796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145736791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677429554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038770462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351910791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024402348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378829763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681491703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126981196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105031387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127062102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027877146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124311879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099346346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127229953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679118697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431681456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097617389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393375132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096600578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132218157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415061216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098489835 seconds)
  done (took 17.189527367 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104125431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189707711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105350276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128980446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100884811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129561948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135243396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112094736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18879227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127062627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118203396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125960596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102713896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126842316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119680531 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126054655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099220282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12853772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104766149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129514391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145219158 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098059066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127018121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10109199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124809267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111775314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126624138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.111655479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126582107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103434686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132561014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098655738 seconds)
  done (took 4.992992614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150990649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200165168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13580632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13318047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17909195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128699547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213832444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166932589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191608797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098217066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145956889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098036047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164697562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098403496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150085022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098104105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130473448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127307856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105201665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12703641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118761318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124785883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099928517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128091675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098208387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140600991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098302716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140684037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099593453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132968395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131605259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099740878 seconds)
  done (took 5.34140087 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109599045 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13597621 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115793705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144233363 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100386681 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134613836 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105634915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129794544 seconds)
  done (took 2.061533794 seconds)
done (took 30.662258226 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119686721 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130740675 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.113185347 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139829966 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108529482 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.16073625 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096237515 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138246116 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.111702823 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.134364926 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114092338 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125442617 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099929105 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095484411 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139719717 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102195036 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142253062 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.135136968 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.12037207 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142589157 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099570089 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.138923878 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107947507 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14872467 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.119651985 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.148638681 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.144259294 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104475101 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127059667 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099147947 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.143927069 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.124204844 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130029994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.114016102 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13242963 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102372744 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128528228 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100117405 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142597918 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108677279 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133169521 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109258748 seconds)
  done (took 6.254587765 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.129614039 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.171366006 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.095429554 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.12568084 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095658829 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.167057218 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162819665 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.095141618 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.124595572 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123258055 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154154059 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.095203194 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.125028777 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095754436 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125195852 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.095537449 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.151520369 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.152592486 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.130197408 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.159749894 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.173402649 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130562991 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.163827367 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.152201311 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.141396757 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.164510401 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.149009781 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.13467718 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.157890926 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.124648445 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.12924629 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.160725075 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.09539323 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.125256965 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168142674 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.134860711 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155541885 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168262996 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.129813676 seconds)
  done (took 6.42486729 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111486059 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144619605 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124446102 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19878904 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.17019904 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.114293236 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141364332 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116816982 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158388876 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.127199053 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.11145951 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161230565 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115514718 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.140305763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10362261 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144269671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118932252 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131107702 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13585839 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11983888 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146889332 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.112288776 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144566953 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109051578 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.128509467 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107938002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135041566 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11270746 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135698729 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136446445 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103898475 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.13178182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102441727 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137655169 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102439153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.136122977 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12102146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137995754 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.111643894 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.164621121 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138185784 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.104452593 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150883235 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175144178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101615362 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136474419 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110832843 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137988861 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098222633 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147798818 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114202318 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128781778 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.116248215 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.128808898 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098428645 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136899816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.1001958 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1324102 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10861449 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132850248 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148764098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108621094 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136062046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102183773 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134620792 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09991264 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127541592 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.105417739 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154152039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105463841 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16258842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099994057 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135249873 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13656359 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.106601665 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147959027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098729843 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136036501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107708495 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.134848469 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108263707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.132471741 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.102892244 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.147924908 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142566461 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.108544396 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.134333038 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.105739019 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.131845944 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100809819 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142942507 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099885624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.133006506 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109790507 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130977086 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101379771 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135446018 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10359951 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127325489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119609181 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133609195 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099237286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147458861 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129842312 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10359447 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137874389 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112510485 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128119068 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105910965 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135174178 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099686379 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134632926 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103579955 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128313605 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112996498 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.141229075 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104110572 seconds)
  done (took 15.771000772 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253399964 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.229412669 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203080699 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316371642 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153279478 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.156422302 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.226294782 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.149698954 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130498626 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169836967 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185948312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197583686 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.186397721 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195992782 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188295747 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099485598 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.162377672 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.182662951 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.229564653 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.312501415 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.162521322 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.114058691 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170919636 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171363345 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.149392243 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145902037 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.12330935 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.151363778 seconds)
  done (took 6.224498806 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120741377 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170439009 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.136856504 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.129963719 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157012164 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130479616 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105443429 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100231353 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145196462 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147247473 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101176346 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13779105 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106226046 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140062655 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099546005 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139222962 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.109004511 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139652639 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103018346 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.13402605 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.1484923 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.118556351 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135186784 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.105677587 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147172763 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.135859365 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100802936 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152076001 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.14070354 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.129484986 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.128302353 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108610253 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144977983 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098262111 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137054797 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.102302802 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.134019615 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101228246 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.133677084 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096816056 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.130564165 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090671061 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136510245 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144906748 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108622688 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130856787 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105556147 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.1340623 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101737526 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126048951 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102947193 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102115154 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.135761005 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147396231 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103935935 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129916786 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.104545019 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102113759 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.14178927 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102843695 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127607846 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104841184 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13781985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13514791 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109400136 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137861748 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105197682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.132730911 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105115412 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13782654 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102869102 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14330829 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096799129 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.134004038 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111100846 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144506934 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103731717 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135892562 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137163526 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099976427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.089360839 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129538056 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086093359 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134993861 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098640641 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136755504 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.10214617 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136252176 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146309344 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109655565 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.138305875 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099972503 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137681443 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.10453283 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.127491303 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104024031 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148179828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149597422 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.099060549 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12703264 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122648015 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13162861 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098522164 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087795718 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.141101205 seconds)
  done (took 13.981564884 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131849199 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169390581 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100839242 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.151119969 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166455716 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.129638046 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.146242727 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109038633 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132196228 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121279296 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138481328 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108984732 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137423397 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145763105 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.130319481 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144807236 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101415774 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146573428 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105987897 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17321834 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149849653 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.127535048 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.16265217 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.142041108 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105960884 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155808888 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.132146853 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.145912926 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112579934 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.165043458 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144965959 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.132457951 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16517472 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.13716361 seconds)
  done (took 5.787005783 seconds)
done (took 55.524570785 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.218556022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422665302 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.180685395 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.181162467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.232921817 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.222248218 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.182404329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.377108177 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.929982005 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.1704072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.181553012 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.1832034 seconds)
done (took 27.592614843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.273341018 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.769216333 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492489089 seconds)
  done (took 4.364984115 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.174209816 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.175033539 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.423180429 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.176780209 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.197414273 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.194232487 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.174698574 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.17827836 seconds)
  done (took 15.626470988 seconds)
done (took 25.548126863 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.23793474 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.354156743 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.428693409 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.195126984 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.192128775 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.187397256 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.176961134 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.21045984 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.190472773 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.179634151 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.193316687 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.44135296 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.196655949 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.554251943 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.190638212 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.189324672 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.193221772 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.404877669 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.17824613 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.237241534 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.163692712 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.188601655 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196320661 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216327069 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.196812286 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.193648499 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.241931909 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.180786497 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.36401617 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.188393207 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.221364427 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.180006401 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.238241711 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.198677104 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.289189991 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.208353176 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.351095296 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.187407001 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.16951979 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.18395494 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.349309471 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605485742 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.180753019 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.179327861 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.187507487 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.244523163 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.167121456 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.916819869 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.181469986 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.185495346 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.193019263 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.547296442 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.185184436 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.182968715 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.189858082 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.403036397 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.179899556 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.222488468 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.204513797 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.189824497 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.188801032 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.183465459 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.192002985 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.181438367 seconds)
  done (took 142.038114354 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.181823774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.181404941 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.18016951 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.205440035 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.180762643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.180156585 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.180306068 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180980678 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.182910539 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.2039824 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.181334762 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.179233493 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.188757109 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.139109405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.182943842 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.198840851 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.182489527 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.196241645 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.183440886 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.18249399 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.200408123 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.18220223 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.197814746 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.182320137 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.218190552 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.279926559 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.201052895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.206456643 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.179621548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.181459038 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.226141492 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.200130281 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819296541 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038128823 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.187275578 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.200313777 seconds)
  done (took 79.482312715 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.183755668 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181319029 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.181694023 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181786232 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216789839 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182323778 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781537395 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784385792 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.919681565 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.271712671 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.186575871 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.555085585 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.458213169 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.184468101 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278504633 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.198090713 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.18842462 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199664301 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.212353774 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185202628 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183629135 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785045601 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201565705 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.353286274 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381810638 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201411238 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217850904 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582696787 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185101939 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217054545 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.659629641 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521095385 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236630537 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183548859 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550858219 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298991665 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186996588 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217980411 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185365777 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467925066 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185296069 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184911185 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189881702 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858245788 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.185716859 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.781917893 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188211195 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140017116 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.18639482 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185442599 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.17454258 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.837745475 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204474701 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187266705 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189046253 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.185936281 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186795247 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219948285 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.144785752 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.280791962 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.187592731 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.190042236 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21920224 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185228091 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.31660802 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205092036 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.594304788 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26614474 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.293477083 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787127034 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189659752 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285320853 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307504774 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187472576 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.186843801 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1859198 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187439059 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.297851781 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187233804 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621541602 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.18580574 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365605857 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.204877581 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.562084712 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286162352 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.187917628 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597047859 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190815675 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.187285269 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952538334 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285296405 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187802695 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189412153 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18755913 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187514603 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624053992 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788028266 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468248248 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.189737563 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.379005124 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19028976 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.633743727 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761965362 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876924287 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189203161 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303436869 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368075356 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.206758222 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18944611 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.560727158 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.188830997 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246587117 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190664706 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589584675 seconds)
  done (took 365.747759445 seconds)
done (took 588.37102435 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914398462 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866207436 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.994557026 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.890826517 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.860277293 seconds)
  done (took 10.641016341 seconds)
done (took 11.752313936 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.382324949 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.382606211 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250759646 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385963814 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221511253 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404736804 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366991551 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.210857325 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.29996731 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274545977 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294816416 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242883581 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226806546 seconds)
  done (took 18.059787778 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460766139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192150844 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271939792 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444527076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230949119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456934582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491106734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.191799488 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33246955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.203803107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203806771 seconds)
  done (took 17.597358457 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.503385989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.191768505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259368072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451242918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233317171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465406757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.499582727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.191860941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339815756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206747682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204905784 seconds)
  done (took 17.66376028 seconds)
done (took 54.433345011 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230709914 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360478373 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222276405 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20556054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202812115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201943128 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206266237 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201354742 seconds)
  done (took 10.949201073 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198113319 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196793122 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197274948 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200147743 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201377354 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198990592 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197015387 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200200824 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200783248 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.199943473 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200879226 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.197398858 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198320754 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200292416 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20004524 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202613019 seconds)
  done (took 20.309355208 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20028871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198982009 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198651106 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198493337 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.200479538 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.198268078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199989442 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.19768272 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19785737 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.197460743 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199059799 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198690386 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.19809962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.199050985 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.199426327 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200261732 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.199906257 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.198685175 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.205732956 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.200457296 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200067212 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.198155479 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.199899112 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199769361 seconds)
  done (took 29.907239001 seconds)
done (took 62.280585322 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.205872676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.198427284 seconds)
  done (took 5.523799508 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26235053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.265140964 seconds)
  done (took 3.649210572 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.20285194 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203201099 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203938286 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.20442531 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204012185 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203007876 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202761265 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201910166 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.203851263 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202649481 seconds)
  done (took 13.151917494 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.2025969 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203974277 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.202105556 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203588227 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203965021 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.201802661 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.202403341 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.202956369 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203405202 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201411318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.204126789 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201648105 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.204230556 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201812202 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203280797 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.200974997 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.202429932 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20248434 seconds)
  done (took 22.771610146 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218018934 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225084543 seconds)
  done (took 3.565144142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.3424187 seconds)
    (2/7) benchmarking "second"...
    done (took 1.242948874 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31965511 seconds)
    (4/7) benchmarking "year"...
    done (took 1.308793458 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24634496 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224885006 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243011276 seconds)
  done (took 10.051182177 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2054576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402977295 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.516620462 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.758441965 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20620615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209608515 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.04262535 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210411479 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.211405718 seconds)
  done (took 13.886600185 seconds)
done (took 73.714869111 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.196707336 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.214880462 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.211853286 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.211411702 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.540757713 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.23018666 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.202077796 seconds)
done (took 15.930043357 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.188770058 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.200436832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.202836346 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.202119825 seconds)
  done (took 9.917082203 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.198435911 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570980223 seconds)
  done (took 4.892798841 seconds)
done (took 15.92997069 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206861465 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206918091 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.203584637 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206395039 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.203659135 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.203929197 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.204633498 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208377725 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208163705 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206795633 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208392689 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.207879342 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.207806161 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20730323 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205637423 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203063774 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204227516 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208052707 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206148543 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205782625 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206910238 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207795882 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.203899418 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.205365634 seconds)
  done (took 30.070770551 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20887419 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206198288 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.207033855 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207865079 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206973891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207846423 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210172381 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206995507 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208068256 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208443707 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206934497 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206495126 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207767589 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.206752801 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209589211 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206215519 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209204284 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20727859 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210071621 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.206522755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208384128 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207188012 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.208742747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208809922 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208176615 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207261443 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211323438 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.208453883 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210012353 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.207180727 seconds)
  done (took 37.365832637 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21728954 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217684017 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211818228 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211787235 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209705704 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.211579288 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209877806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209604399 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.211079421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210745005 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21092628 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210549509 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209893606 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210086207 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211467929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.211094201 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.211876171 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210650467 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212000887 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210952112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211917438 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21276634 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.210803034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210944483 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210913008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.211534799 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211481908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211695359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.21204011 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212441848 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212515152 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.210675996 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212528239 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213856883 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212291385 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211878616 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217427389 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.217057043 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212178823 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211674609 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212417024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212441942 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.211957039 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213076261 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211716069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212253191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212476731 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.212363843 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214706596 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212371351 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.21307797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212876679 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213346284 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215337951 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213359135 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213540706 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213210642 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212615615 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213053401 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214185434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.212737579 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.213710644 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213845023 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21303054 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215018671 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212972005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214099691 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214598666 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.212956519 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214062748 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212996757 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214685115 seconds)
  done (took 88.434808116 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214460007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210354439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210792812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211267306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211440483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214952198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.211321441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215163589 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212629544 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215221236 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213879614 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21230304 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211841942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216669131 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213001878 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211666591 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214016365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212013033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.213643542 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215397628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214492643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.212204572 seconds)
  done (took 27.821829695 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2152566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216042756 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212678092 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218333814 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213991891 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21629135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215470969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215493172 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215925342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214851548 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213057855 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214506876 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215328415 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213029266 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213505023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.715127844 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216694902 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214640729 seconds)
  done (took 23.503541807 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215580958 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213755884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215949582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213298715 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215478514 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217232307 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214424901 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219542102 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.216831616 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.21495602 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217498752 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216874003 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218104122 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213894031 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2167959 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213197784 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.21692805 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215432817 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217149536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214309033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214221181 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217107703 seconds)
  done (took 27.883219638 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217303336 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217741433 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216179034 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216881115 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215543229 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218551847 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219225541 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215902673 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21943947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.218052798 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215828764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218008036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217973142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216448175 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215917142 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216044796 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218456872 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216158579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219849144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216525076 seconds)
  done (took 25.480353323 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219546141 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221643342 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22111445 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220806127 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221946596 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222655439 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221298079 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221594427 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220879343 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221064889 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220680942 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222314494 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219742675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22124648 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221003274 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22337194 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222500206 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221809417 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221356386 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222864212 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222894096 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22224171 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221834289 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22257668 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222201875 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223302772 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220314568 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221322673 seconds)
  done (took 35.342447232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221211505 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22121877 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.218433209 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218305369 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219836318 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218550927 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219608836 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219893493 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221163761 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221116405 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.22113785 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22137179 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219925455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222403023 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221759845 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221239092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222205409 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220046196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221498986 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219965963 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222594331 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222490805 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.221666254 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221801096 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220478595 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222517912 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219824654 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219822773 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223720761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220514665 seconds)
  done (took 37.765569133 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267681038 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267589619 seconds)
  done (took 3.67417039 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22125364 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22351847 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223931856 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219475601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219640068 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223369173 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224255545 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220770723 seconds)
  done (took 10.917312054 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224779238 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224177489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223821996 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224652539 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224433929 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222781974 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232721391 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244133445 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.223184462 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22594326 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233885587 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233199014 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.226650883 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224543005 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225826735 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22743431 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225116113 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22493416 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224731733 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226998006 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225875717 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227877766 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228369715 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223911298 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226297501 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.234358526 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.229350685 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227194251 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226064528 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229013264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225552605 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224006748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226232457 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226901536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224770544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226793188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235806599 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247274599 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231460842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226794262 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228264999 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223898938 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226535063 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.22665498 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228257922 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227689909 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227720077 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224893192 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225924156 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230297506 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.231920456 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225476468 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224083501 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230847106 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22784893 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232937523 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247734616 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229349869 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236477048 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236769766 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.238827516 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251895151 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228617736 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228739746 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239142665 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251490991 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234302823 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247350205 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225693727 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228205264 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235123794 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239458112 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254121407 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227651234 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227755106 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229177591 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22871801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230452437 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234740822 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252722554 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230601543 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230095479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238819839 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250941199 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230487169 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230442934 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229093114 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.230362822 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.230761788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23985763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.251169984 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.229716468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229865116 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229792857 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231068123 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230763777 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.228389151 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230958158 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229090683 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229415301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230580915 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234323254 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240452624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230344969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230925134 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236451703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231311542 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230025714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23595516 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.23117184 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232476285 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233012645 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236969119 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228972806 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23383813 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238673741 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233285951 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233100662 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23307258 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232209729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242906369 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258740695 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232923831 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233294606 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236754609 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243492468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233359018 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234012033 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2327037 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230327866 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229987887 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233728748 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233531956 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233304665 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233676281 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232626103 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230687495 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.232618173 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233841365 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233930622 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234950103 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.233475765 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234872664 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.234932677 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234503092 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233910326 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240299429 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.234048809 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23322381 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233531883 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231708538 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234996085 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235088735 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234354419 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234232108 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23596003 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235404582 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234734685 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234852027 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23453328 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235321826 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236640381 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24053458 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.235744491 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239298847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236600507 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232483475 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235847407 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236160231 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.233971338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234500015 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234312889 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239060749 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.244510476 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.235204548 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235974355 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.237847857 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237230234 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236284556 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235295178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239762955 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244365104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.235801952 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.241258179 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.235158714 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237400834 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237386187 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235254911 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235366146 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237447503 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240331321 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244711541 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248447644 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260752431 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237981597 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241233116 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239139389 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241859657 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.239679412 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237345976 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.237805671 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236488901 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237853005 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23844529 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.238251489 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237798125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236590499 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237568713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238778849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236873776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238483921 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238213521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238179337 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236065659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240293571 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239213836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237836165 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236499387 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23646989 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237597283 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238537638 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.238476673 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.242109914 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235057255 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238421255 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239348628 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238381381 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237495965 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239243126 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240271082 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.238437154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245554095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257484575 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239227841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245862703 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257715716 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.23879217 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.242906983 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239611358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238742332 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242972824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249532508 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240477908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241088792 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239520785 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240312626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241290922 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.24564798 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238947071 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24088477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241842021 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239945685 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238711681 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240005863 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241491181 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241582189 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242165414 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241039871 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241090668 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241668954 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241908491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.242005914 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241730912 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243544524 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249909309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245437562 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241711178 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242036131 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242749555 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245901841 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242564895 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241744751 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24182721 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253429612 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268050752 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246041034 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263438661 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241440858 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247504964 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.263828226 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246457317 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242634354 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242295612 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.241597314 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243277501 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239922798 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242229291 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.244364468 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242594578 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244693539 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248813355 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243471828 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243567559 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243759878 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242382456 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.243022398 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.241726522 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244057314 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245400563 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245964725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.24161473 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.243625068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249072193 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264744576 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.243638718 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244123225 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243348649 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244079042 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245803092 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.244317439 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24850274 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251132599 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24734923 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253157105 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246884052 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253546363 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.245600572 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249026373 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253601887 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244199595 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242978703 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24428333 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246368407 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252858659 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267070811 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248724967 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251448414 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246179796 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246029536 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246217736 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.246327373 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24744818 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24728371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254606351 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269855238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250206827 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248251694 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243341593 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247574866 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247553392 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246543691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250863499 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247611907 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24827977 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246177274 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24607142 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247301613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248507073 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.249571164 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245733323 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247062209 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253556206 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269656558 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253891491 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248438246 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253682027 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24968869 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254460576 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268232808 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248351512 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248573626 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248912181 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249183028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246568262 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248660605 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249014003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248439675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253550841 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248556561 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249147681 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.248363358 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.247837964 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248657934 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257887567 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273158012 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250511382 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255001596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246586384 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249266989 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.252760269 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250152622 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247076583 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252587366 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260249891 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258504953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248857609 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250249575 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25209224 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249996785 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249794209 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24996451 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250594301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.251170467 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.250334426 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250546205 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252800384 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249646613 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24824466 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251690168 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.251558365 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258653851 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.251406555 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251120412 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250981363 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251519069 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250446082 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251288491 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.2515928 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250335627 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253640219 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252965494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258395736 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.258377516 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254247448 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.251306078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248713068 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25233482 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252205479 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252780144 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250915811 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252969798 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251923852 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251718526 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253303373 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250555093 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252507404 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254296954 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253554689 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256280306 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259308699 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25267244 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.250113799 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253432908 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253360434 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251202067 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252442331 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259930759 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256191674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263479769 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261171386 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257582746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254470557 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258415963 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261256771 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252519902 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254111131 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253493229 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.253679986 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254761398 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256990119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255310687 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257343119 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255376977 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252337392 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262675257 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.276088483 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254652111 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.256493276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257988997 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.253410591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252375037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252595623 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253800818 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260119526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27591236 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2560137 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2560408 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254808235 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255428392 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259553431 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255324428 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256230095 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.252440955 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255314039 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25557414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254534053 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.25324047 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255112339 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255464745 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258981946 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260979944 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.253483587 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257392857 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254859367 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255841007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257277817 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256306055 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254615925 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.25393591 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255668441 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257445544 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255913338 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257558019 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256164726 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256694829 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.257472928 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256468509 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259253042 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.267540351 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265079582 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254687898 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256449213 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.256932086 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260006105 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256193094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256591137 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256629921 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257596196 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25865429 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256877421 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258433226 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260413653 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273678742 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279726549 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2585134 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.259046305 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260150676 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.258367423 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255758249 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261137701 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259078875 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262029689 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268227828 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25918859 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26476318 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278606065 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.259334159 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26375029 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.261475682 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266260248 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263676706 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257799749 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.259447214 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264460514 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274392719 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260260594 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269536616 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289562556 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281034748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261556547 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260108397 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258488376 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258788362 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259821639 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259584781 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258806276 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259644777 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259974276 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25996484 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26535479 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258855333 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.260931989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25847392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257518012 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260531583 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.257195957 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.260657335 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260916558 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256966231 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259269634 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259072989 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256805449 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269820139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285414207 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258864694 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.258721218 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256562767 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260696062 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261803139 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270229483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.267121342 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260801349 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.258265298 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259373836 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258474821 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.259003151 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257275967 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259671829 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258733714 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255355764 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.272078254 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284997878 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263974666 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259887542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261138335 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26140638 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259522464 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260700056 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260905549 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260368119 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.263252909 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263627676 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258382357 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.25918646 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262871541 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266577788 seconds)
  done (took 743.866241281 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257569255 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256982176 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255410321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255663382 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256639648 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256827253 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257088899 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257579854 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257745105 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256330484 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256863108 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256661191 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257761932 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256502413 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256740174 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25866628 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256195708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257170871 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.256916674 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255654094 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256300524 seconds)
  done (took 27.564357367 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.25968795 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.259880927 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257418248 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260282139 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257003732 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259429935 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256689853 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259254471 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259366492 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258128952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258187352 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260279526 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.257053853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.255865989 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25621237 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259122557 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260438992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258455615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259026479 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257256619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258302415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257891327 seconds)
  done (took 28.858438995 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260225434 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.259844949 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259270687 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.257927872 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260871249 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.258776456 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259413323 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.260312264 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.260182274 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.258602506 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.258603589 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.261200582 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.268316937 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.266033196 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.261212472 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.259356656 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260899528 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261191718 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260599535 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.257732615 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.265816257 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.279509627 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.25900172 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.261400136 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262146768 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.261430731 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.260675573 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.260236315 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.261230729 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.264606997 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.261515368 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.260880316 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.26196514 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.261150663 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.263160717 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265252641 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.260393341 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.259412716 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.261254258 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271056273 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.28181731 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.262332329 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.266949509 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.282506078 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.261725535 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265175346 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.270619733 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.259744191 seconds)
  done (took 61.796489927 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.876303831 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.880766083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.877027499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897502465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.888190594 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.883878588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.924999013 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890952385 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.877776939 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.878634324 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.887788369 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.878810754 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887475432 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.881112514 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.879793903 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.903433262 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.887389877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879021408 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.8873929 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89343538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.879022425 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.894112646 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.883784458 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.900599515 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.883566433 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.883298709 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.882763125 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.888095858 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.891062107 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87951728 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.885254597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.90333874 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.899159009 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.888064627 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884938015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.87909081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.882076227 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.88226759 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88155595 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.887997122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.921991257 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885720111 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.884719849 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.899366747 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.892242507 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.89630881 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883290469 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.896604632 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.875548541 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.880084208 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.897413459 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877493848 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.881477154 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.875806862 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891093991 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.885138194 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.919701109 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.890843252 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.883168302 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.880534244 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.893579176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895701106 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.900938366 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.907820467 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.919811771 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.895960315 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.914218237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884645537 seconds)
  done (took 129.668615317 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267503881 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268901363 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268322016 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267700299 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269499796 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.269032417 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268679523 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268299294 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268125482 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270002514 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27029035 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270235079 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.269218867 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27057445 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269925435 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269339407 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270218199 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271116231 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270561959 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268496828 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.270026057 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26909231 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268782582 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268685342 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269951004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269947156 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26934387 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269163868 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269134112 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26908202 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270575042 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268709024 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269042522 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270022477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270246728 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268907896 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268041795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271475863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.270071407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269666363 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268793406 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273878891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27145791 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271897866 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272982095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273281529 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272537392 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.272902221 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27478829 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27474967 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.272088931 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271938344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270007479 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270771807 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270056362 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271788261 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27748398 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276768671 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273081005 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275251982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277067556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27759326 seconds)
  done (took 79.971628613 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275208202 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277323696 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.26976162 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268905667 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272271514 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267496095 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271079187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274172868 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274222261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273710595 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274481269 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270191439 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270156392 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273282888 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271981303 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275217177 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269381899 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271673599 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273792082 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27030183 seconds)
  done (took 26.631221934 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.269822663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273616287 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271492976 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269829511 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27483115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270386562 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.274924679 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272121662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271161283 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27263053 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272217268 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27281763 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270531591 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269405859 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272586048 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268860667 seconds)
  done (took 21.530281596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.270149489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272691456 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.272473233 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272284556 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269800983 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270108182 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.272567197 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.271058196 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268454696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275173191 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.274097262 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273744426 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272031667 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27353149 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.27021369 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.273741341 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.269798783 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271031604 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27352648 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271981745 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270308079 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272788947 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.272354663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.270948821 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.271558149 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269519096 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.274624638 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268646449 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.26948524 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273179873 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.269064265 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270100177 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.269564478 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.26926886 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275349173 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268708715 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271145032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272062033 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273025517 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272417163 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.270948667 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270528939 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.274075367 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271858437 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270225759 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271868521 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270824706 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270978375 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269579498 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268430167 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274779941 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273561918 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.276545903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.275623402 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.275666551 seconds)
  done (took 71.132587265 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276788826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273708457 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272184417 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27700801 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277070965 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.276250416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276132042 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27507116 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27566304 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27719691 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277591209 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.277636129 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272770886 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276246396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271473343 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273428561 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274227937 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273899882 seconds)
  done (took 24.142467803 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273987901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272767973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276678337 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.274121949 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.275996991 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280312527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274074414 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274561771 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275047555 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274290108 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272138496 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276656997 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277504235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2755035 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27229283 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273595591 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279445204 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275569723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.27563545 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275676749 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275870285 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275416597 seconds)
  done (took 29.2468495 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.276563634 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.273035212 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.274837531 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.292201757 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.293623306 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.275768276 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.272834966 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.274507354 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.297440337 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.329250669 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.324396669 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297180549 seconds)
  done (took 16.67348078 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274434524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275841042 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273488806 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277775562 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277216407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274816596 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273184887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272077684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275466009 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277003619 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272007562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277370681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277664045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272129202 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277672851 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275816803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275016629 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276216453 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272473293 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277238211 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271900255 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275954865 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273038801 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274872615 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272143603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275816215 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276125511 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271627968 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272101186 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275293362 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276644719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272517258 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274560601 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272773909 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277636579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276477718 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273261696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27423734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276287624 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272998035 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275785686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275585888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274902349 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273320142 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275861695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273764405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274147958 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273679937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273254795 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277228679 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277490234 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272121955 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276398045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277943149 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275820342 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277527567 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275929629 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274588481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277387723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273953953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274628505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280048312 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274258113 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274387836 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276249558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274599923 seconds)
  done (took 85.340432558 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274162302 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274071883 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274567338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273043453 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273610363 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275043731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274135112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27540524 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274336605 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2748318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276563556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274421821 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275619615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275363787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274929523 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277755397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274872188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2763057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275916778 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279299371 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276780995 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275212812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276068615 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275323265 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274596686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278004037 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27582214 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276721304 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274631634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27733906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274815085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274398953 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275655447 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275588487 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276152589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276665796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277420496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280782696 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275685557 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278246244 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276335666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278667593 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276438307 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276801757 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276617722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27717854 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275529207 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275998123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275846211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275385406 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276606139 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275400432 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28001011 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275126761 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277727914 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275815752 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276170266 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275850255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276546181 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278974246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280560068 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27557553 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279639925 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276900584 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275430337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277352727 seconds)
  done (took 85.417132285 seconds)
done (took 1781.22141147 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443491424 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.398968637 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278329283 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.28689227 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.275790866 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.271548684 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.289794539 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.276160605 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.275129829 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275807816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276905435 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.465810782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.274462607 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.277499594 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.277769458 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373581886 seconds)
  done (took 26.206668847 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.305178948 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283343541 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393723727 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.300456198 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.30473481 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.465745878 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336728479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.283691947 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.455664479 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.324395051 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.274115304 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.307489566 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280901385 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284337364 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302025857 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.463786932 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.531979163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.27771924 seconds)
  done (took 28.365021026 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724836202 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.274910784 seconds)
  done (took 5.188867629 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.299795949 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.280795197 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282123522 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280027437 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.271257655 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.272123289 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.278031133 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.274591991 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.283847878 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.40400299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.285619593 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292500083 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30106695 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28117113 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.279069236 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320196083 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.448609651 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.281658434 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.278253124 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287588135 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.283165594 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.365774376 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323400434 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.282316813 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.403875225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.289471403 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283757811 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289376245 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.408779167 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.279751605 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.2814113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.282601992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285055154 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.199602665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.721253032 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.276127862 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322981165 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292551149 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279344242 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.41936219 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284658015 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.29200108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.28059331 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.701681054 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.423229244 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.398303913 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.292021535 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283491911 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283463492 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.345082215 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28374854 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.28354301 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.325169526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.075751887 seconds)
  done (took 82.296614374 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.275293779 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.27327244 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456053841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.296426593 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274513362 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27586665 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.277515227 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.553194382 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.288655855 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274448081 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.557329105 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838583083 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29669837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.314434763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.142018602 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.331092923 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275571376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287890908 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.275510951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.274920203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814233434 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277665824 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274468716 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.36493677 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.312421388 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779362089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279356497 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.274213536 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.275503588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.273005315 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784738838 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.293253163 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.331337554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274034944 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.53836405 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.638863236 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.600390063 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.276341009 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320099111 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.273452605 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.298020232 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765021915 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623949672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.277048028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.273026703 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770912737 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.272253908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.278636482 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.280274162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522798216 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.275833553 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274083524 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293148487 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.274755312 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.271678521 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.27426498 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.341442722 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775343576 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272756277 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284641363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302538869 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.274999798 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284948999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273325673 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287488154 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619500899 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.47985442 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.275510357 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.617736143 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776038408 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.291759498 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.836724705 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.294632713 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.288607972 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.457616304 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.27954146 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.273126881 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766834735 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.309665002 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.275536056 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.602176742 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.278432291 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558340529 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.294686738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276380889 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820631686 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.281530432 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.365468732 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.277954124 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290749386 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.277661113 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.277813552 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.563237766 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.315801726 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.279229205 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.277474057 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.287997035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279702144 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.283172397 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.279104356 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.840498715 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.299992214 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.277122254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2777652 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.275118571 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.279883391 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.27707542 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277513942 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539593124 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.280744219 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.281634039 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.277387655 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278006199 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.297830766 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361947536 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.28384654 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.573816594 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.28646557 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277535316 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285616466 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279455128 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330459083 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278951587 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.283726027 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.140274239 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.540893317 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.297527774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.280535699 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283316954 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282588899 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.277268539 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.27972836 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.307216362 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.279135288 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018920236 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.303292661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.283244173 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.27874822 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.285639798 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.279210159 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.287589985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.278735932 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567974353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551773918 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48086926 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.278980784 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.2797604 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01846546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.348237051 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460972741 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299023869 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.279661104 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525513575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.505401337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282422986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.280521191 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.279796317 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537051452 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.284957718 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596052741 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814470858 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.299588145 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28364739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.0270336 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002085802 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.285802564 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.285639015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.562839771 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.302082396 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.280210879 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.28185772 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.281422784 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.297833238 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.302323207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.288712767 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.281428654 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.279839807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.604762219 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47503923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.299322559 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288449726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781053839 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291232425 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281439357 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.284675217 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281194986 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.280758573 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.373452658 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.280942241 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.303553176 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.281768567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283240214 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796482134 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.284221939 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287444603 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.472583586 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951061237 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.30139743 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.282092631 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.299150777 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.173577084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803132571 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31625997 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.578767106 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.298356907 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.319281799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280221674 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344912331 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808132628 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288981501 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304073262 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919190489 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.304479628 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.7029631 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.283334553 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.282258351 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875489188 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.306616261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.287672383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.283412621 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288290431 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583312654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288944919 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.302317972 seconds)
  done (took 485.716610623 seconds)
done (took 628.958557777 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28344294 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.28277986 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.275361855 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.291778897 seconds)
  done (took 10.331949962 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.296620347 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.293631432 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.29491349 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.292118745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.2945555 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293926125 seconds)
  done (took 8.967094214 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28747844 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288287657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.291726275 seconds)
  done (took 8.071955068 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.485518168 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.314655907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.602023413 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.314596359 seconds)
  done (took 8.917638812 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.296476108 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.296413025 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.297234671 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.298121716 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.304667391 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.299188795 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.294707142 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.295728543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.298612587 seconds)
  done (took 12.884726779 seconds)
done (took 50.368280815 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.313036629 seconds)
    (2/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.273264716 seconds)
    (3/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.438521571 seconds)
    (4/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.139533269 seconds)
    (5/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.504613224 seconds)
    (6/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.339998383 seconds)
    (7/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.346068142 seconds)
    (8/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.302520109 seconds)
    (9/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.309693239 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 2.016990114 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.294726197 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.334658859 seconds)
    (13/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.470099824 seconds)
    (14/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.315106892 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.305285342 seconds)
    (16/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.368054611 seconds)
    (17/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.151178466 seconds)
    (18/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.298896909 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368265394 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.324999198 seconds)
    (21/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.40925022 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.627248099 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.350985129 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.611736263 seconds)
    (25/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.328889049 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.034289792 seconds)
    (27/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.37766018 seconds)
    (28/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.320491046 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.345455532 seconds)
    (30/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.024958377 seconds)
    (31/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.003165779 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.450550192 seconds)
    (33/286) benchmarking ("sort", Float64, false)...
    done (took 1.486334661 seconds)
    (34/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.324714648 seconds)
    (35/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.308850658 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.428288227 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.399900606 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 1.908404942 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.306520589 seconds)
    (40/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.94292037 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.400518045 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.353069788 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.151994446 seconds)
    (44/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.602621454 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.377121731 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.312702422 seconds)
    (47/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.306746814 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.942892703 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.323806152 seconds)
    (50/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.982140849 seconds)
    (51/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.102906027 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.326244777 seconds)
    (53/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.300975847 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.311534158 seconds)
    (55/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.028755513 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.317214781 seconds)
    (57/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.036445451 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.297810022 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.325253688 seconds)
    (60/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.338387513 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.365414795 seconds)
    (62/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.344944789 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.367844261 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.512584709 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.413620322 seconds)
    (66/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.320083854 seconds)
    (67/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.30233618 seconds)
    (68/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.938277572 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.343138706 seconds)
    (70/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.314613018 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 2.291115832 seconds)
    (72/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.342918967 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.366305137 seconds)
    (74/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.340011265 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.308536764 seconds)
    (76/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.438309303 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.475074428 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.490480327 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 1.481466743 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.44551318 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.309427967 seconds)
    (82/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.376493627 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.324791147 seconds)
    (84/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.376172546 seconds)
    (85/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.383840281 seconds)
    (86/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.356031931 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.389026299 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.03199176 seconds)
    (89/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.312407933 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.296835069 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.348905259 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.305055187 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.944991691 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.35435189 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.291481635 seconds)
    (96/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.313259414 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.298485075 seconds)
    (98/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.314535972 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.468835651 seconds)
    (100/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.53247725 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.323580656 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.308725184 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.410895225 seconds)
    (104/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.481486079 seconds)
    (105/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.336023395 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.282740062 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.350445626 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.16759476 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.338865069 seconds)
    (110/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30674209 seconds)
    (111/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.37356595 seconds)
    (112/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.316934573 seconds)
    (113/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.283804604 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.528752623 seconds)
    (115/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.300625637 seconds)
    (116/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.39794695 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.36045888 seconds)
    (118/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.389073091 seconds)
    (119/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.37461501 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.469087419 seconds)
    (121/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.346617421 seconds)
    (122/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.311985462 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.337823661 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.306498046 seconds)
    (125/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.346323434 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.358344993 seconds)
    (127/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.315305087 seconds)
    (128/286) benchmarking ("sort", Int8, true)...
    done (took 1.803118042 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.331673433 seconds)
    (130/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.952445652 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.41112174 seconds)
    (132/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.38917513 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.383555973 seconds)
    (134/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.43504693 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.383015559 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.327750526 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.285809781 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332187455 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.492358771 seconds)
    (140/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.325700726 seconds)
    (141/286) benchmarking ("sort", BigInt, false)...
    done (took 2.296127945 seconds)
    (142/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.284554757 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.444624741 seconds)
    (144/286) benchmarking ("sort", Float32, true)...
    done (took 2.036629266 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.310563141 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.42772752 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.308430136 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.346944856 seconds)
    (149/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.430297897 seconds)
    (150/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.369312936 seconds)
    (151/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.315993358 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.374079105 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.495105671 seconds)
    (154/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.313266412 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.381071678 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.313159663 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.30958917 seconds)
    (158/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.373674847 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.376727233 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.284421573 seconds)
    (161/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.361444196 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.325226443 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.305090318 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.486538143 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.485018493 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.312934134 seconds)
    (167/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.440614802 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.337071444 seconds)
    (169/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.295996601 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.384529231 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.41461665 seconds)
    (172/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.457069345 seconds)
    (173/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.373956968 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.315288328 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.416090941 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.384831359 seconds)
    (177/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964971357 seconds)
    (178/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.377736942 seconds)
    (179/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.360634612 seconds)
    (180/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.328318128 seconds)
    (181/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.311029986 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.365068845 seconds)
    (183/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.038778943 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.331765233 seconds)
    (185/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.107920164 seconds)
    (186/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.314594732 seconds)
    (187/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.03900699 seconds)
    (188/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.332076935 seconds)
    (189/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.350557028 seconds)
    (190/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.284633546 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.358768544 seconds)
    (192/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.308866158 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.398848189 seconds)
    (194/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.3189628 seconds)
    (195/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.315058899 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.315570495 seconds)
    (197/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.300098436 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336783092 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.001477587 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 1.649156948 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.315523625 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.327407335 seconds)
    (203/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.340223736 seconds)
    (204/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.301325247 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.479407648 seconds)
    (206/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.392222628 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.336317517 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.309726744 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.396326357 seconds)
    (210/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.436061834 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.344474756 seconds)
    (212/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.305834784 seconds)
    (213/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.286488239 seconds)
    (214/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.337586393 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 1.439543773 seconds)
    (216/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.318813423 seconds)
    (217/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.433497834 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.303640285 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.315617541 seconds)
    (220/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.002485858 seconds)
    (221/286) benchmarking ("sort", Float32, false)...
    done (took 1.500802845 seconds)
    (222/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.464536005 seconds)
    (223/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.288816492 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.317267357 seconds)
    (225/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.317640201 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.317070708 seconds)
    (227/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.435332019 seconds)
    (228/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.448511201 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.320427343 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.343774599 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.646105992 seconds)
    (232/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.380976555 seconds)
    (233/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.495704931 seconds)
    (234/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.358446458 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.492251218 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.397376017 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.357043584 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.366403316 seconds)
    (239/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.472955449 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.422902622 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.340171834 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.391311235 seconds)
    (243/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.443935386 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.296852722 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.321980233 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.352428216 seconds)
    (247/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.295850125 seconds)
    (248/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.343580073 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.344421375 seconds)
    (250/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.429386783 seconds)
    (251/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.338809057 seconds)
    (252/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.956244242 seconds)
    (253/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.427140527 seconds)
    (254/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.319319326 seconds)
    (255/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332696403 seconds)
    (256/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.395609209 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.328310744 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.325893875 seconds)
    (259/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.953870327 seconds)
    (260/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.428544596 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.343349113 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.354143666 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.337312956 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.374098196 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.484870539 seconds)
    (266/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.323340944 seconds)
    (267/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.296766599 seconds)
    (268/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.319817814 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.465454349 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.315174377 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.408180839 seconds)
    (272/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.048244126 seconds)
    (273/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.334683816 seconds)
    (274/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.415877408 seconds)
    (275/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.353123458 seconds)
    (276/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.410899559 seconds)
    (277/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.321402799 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.32954263 seconds)
    (279/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.412208312 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.311234598 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.325046999 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.403356857 seconds)
    (283/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.329564986 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.358484217 seconds)
    (285/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.423352829 seconds)
    (286/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328610983 seconds)
  done (took 461.445339931 seconds)
done (took 462.642578481 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.351461002 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36199279 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.318088422 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347356521 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.431081369 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.493736581 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.326191583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.356485264 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.367152747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.365709004 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.324009714 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.491105785 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.319073015 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319426501 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.316251208 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357876491 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.304439726 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.318221181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.335058234 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351801616 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.332756317 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322814976 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.367988679 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.493738221 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.322989422 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.321592046 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.319856874 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.341155704 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.429123202 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.321515222 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323712716 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.32913386 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.308816887 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323653793 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.313907896 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.340945696 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333726682 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.32762656 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355187995 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.432659291 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322602768 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.329882205 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.323805045 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.320301866 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.32421838 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361505575 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.320891571 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379242747 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365752083 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364909812 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.312033886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.334439639 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.33213003 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.320677488 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.33592659 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.322794524 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.38081453 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363027747 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.337998166 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364690999 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.317335344 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.324117276 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.357973212 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.331561964 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.316832622 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.303418399 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.307507641 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.347714019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.310733254 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.313086473 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303630784 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.316414094 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.312351195 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.323298787 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.340769358 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.295687996 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.303138495 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.307066462 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.315335972 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.306098583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355137004 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351235235 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.358623754 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.308138714 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352160379 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.4856941 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.317485592 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.308782404 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.344421697 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.33026347 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.317354322 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.322449872 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343148041 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.312916701 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356822574 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.367624553 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.321132867 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.319912459 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.359451969 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.321512473 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.312103565 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35709348 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.305949151 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.307180361 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.310190903 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.431370494 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30954699 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.308367588 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.344150623 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.359565939 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.372557475 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.312702477 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.320689332 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358696746 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.321040991 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.370767729 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.310611667 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.299268417 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.299844492 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.425861124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.306734934 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.313393649 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350115264 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.363023295 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.308273838 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.295672993 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.30472394 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350054429 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.428545598 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.314352177 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.416435433 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.302280156 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.310249812 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.338625972 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351184856 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.3361836 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.364504071 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353093235 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.321159788 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.308886538 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.317486843 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.31721048 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.307343206 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364282461 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304031426 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.341427819 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346629604 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346282992 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.334494947 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.428382125 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.311891157 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.297829842 seconds)
done (took 220.863080798 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.364397943 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.303878723 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.407059691 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306025668 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.402039698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.407078371 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303444217 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298922632 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.302550103 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.70101582 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.301185677 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.304768831 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.302740673 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.298253963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387223065 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.305325243 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304489496 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.653081199 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306948676 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.373403284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.301390951 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.299133282 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.302145389 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.692878826 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.30171304 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.30000538 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.366625118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.299923886 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.643312401 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.293762965 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.301220547 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.644350633 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.380669727 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.30826887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.30267987 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.296428077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391471019 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.307450615 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.37226967 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.373044734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.396344478 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.32949643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.286319158 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.290217248 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.290065639 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.29083588 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.28855914 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.320049121 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.292283115 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.288464242 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.633283827 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302019637 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.292078299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.288918081 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.289934979 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.322085117 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.289549645 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.291501532 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.381120866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.292032299 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358062056 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.672952985 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.691858562 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.292482557 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.28655706 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.291205757 seconds)
  done (took 102.071748666 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.359470948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.370065059 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.399303254 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.308521132 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.345059166 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.406303603 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.310951847 seconds)
  done (took 10.700977509 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.301310612 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.29605885 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.344648751 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34600781 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.290654737 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.508283244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298065366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.306557793 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.293397332 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.371893861 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.295360544 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.293618624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.301327701 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.287936305 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34405871 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.307751498 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410614341 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295268653 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.294923079 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.45001259 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292364702 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.300481965 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.369356755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306789745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.294097329 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.301382897 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.24260288 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294209921 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288924409 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.294228735 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293456001 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.39948944 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297563095 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.294335694 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29146568 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454048734 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.29579888 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292402962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.295923143 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.287898892 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.295007514 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.299261421 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297810165 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.294023648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.298283225 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.321160967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.292754497 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.298222133 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.294850227 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.299333821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.373167178 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.296292455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.295521216 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.293585303 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.37873252 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303055328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.295704542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.294179643 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299416008 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292841002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.453382744 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34394009 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.29421906 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346730943 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.29464933 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.298017588 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.298925609 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.29995786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387996774 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.299472544 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347690934 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.294482141 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.518037206 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.320867373 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.302765449 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.298237422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.297907334 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298245679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.294540479 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.301152469 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.294204335 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.297453228 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.302944265 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296094841 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298163078 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48553402 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454542971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.297423531 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.314313551 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.30783361 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.296562867 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37374396 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.298150952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.29520807 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349826389 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.416884542 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.374189284 seconds)
  done (took 134.48579495 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307626323 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.310377812 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.300482249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.322426227 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300834118 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.30103005 seconds)
  done (took 9.050525416 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.303361212 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.300511242 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.302105647 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.304458575 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.300865083 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.301985336 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.299613684 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29919559 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.300899587 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.300095183 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.300592165 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.303711808 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.301196913 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.30078952 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302145812 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.301733669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.299138125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.300005696 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.300800631 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298331848 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.300573732 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.298563322 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300894297 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.301844372 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.307109654 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.301613962 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.308231442 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.299366123 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.30370687 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.306600312 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.323196251 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.30158921 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.302630232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307075287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.304242521 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.302419356 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305735788 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.302796407 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.299096111 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.301153674 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.306313052 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303852791 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.302363744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303609756 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.305050428 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309136591 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.308652421 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312247371 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.304044126 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305076995 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.306794841 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.303650661 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.301818231 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.307340076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.3064816 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322126349 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.307877081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.303533078 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.306170756 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.307306056 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.306258996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.303412355 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.302755378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309473532 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.305500539 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.303961482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.302639665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30916329 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302914059 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.304968919 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.305891723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.304723733 seconds)
  done (took 96.105454562 seconds)
done (took 353.622075537 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.715055661 seconds)
  done (took 3.925839211 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.396752293 seconds)
  done (took 3.609962676 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.986597321 seconds)
  done (took 22.21002575 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.332836609 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.298357558 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.309132498 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.300565096 seconds)
  done (took 10.448116829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.575945397 seconds)
  done (took 3.789127808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.303073838 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.296665893 seconds)
  done (took 5.812644445 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.577593263 seconds)
  done (took 3.790751795 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.643839267 seconds)
  done (took 3.869499519 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.319148195 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.314955688 seconds)
  done (took 5.855831514 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.285316834 seconds)
  done (took 3.493007118 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.926100128 seconds)
  done (took 16.137420998 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.307462614 seconds)
  done (took 3.520720792 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.338749896 seconds)
  done (took 3.55108862 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.777352172 seconds)
  done (took 5.98612891 seconds)
done (took 97.20899203 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.300952176 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.299390756 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.299466428 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.300039527 seconds)
  done (took 10.407207645 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.341689492 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.342870121 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.359525527 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.350384356 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.344698673 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.34000781 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.331275381 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.334295112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351701896 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.343997925 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.342678503 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.341273568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.339375424 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.333124369 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.342897852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.344551087 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.353585703 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.341130971 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.333713015 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.344654837 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.308551757 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.354028613 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.344471659 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.308984995 seconds)
  done (took 33.387975868 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.824933748 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.379434854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.462569941 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.360862156 seconds)
  done (took 7.241973468 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.370556913 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.376803566 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.386793125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42578437 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.453384774 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.384655578 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.334594648 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.331717648 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.317182605 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.376502702 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.437506975 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.372034619 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.466166123 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.31212194 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.503124441 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.309586514 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.307584767 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.387030372 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.437292601 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.438373127 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.310652827 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.377122174 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.386452988 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.372137425 seconds)
  done (took 34.390061575 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.310539626 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.32453133 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30874364 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319076049 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.307583826 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.310078329 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.309089453 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.315493853 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.308018052 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.309916469 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.30947491 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.324287553 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.30993462 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.312172981 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.316449955 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.310995681 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.317329045 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.31049819 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.311063511 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.317519938 seconds)
  done (took 27.480612313 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.304813433 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.305719919 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.657935674 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.559608084 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.302656049 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.308369102 seconds)
  done (took 13.652176927 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37829023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536528183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.309261774 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.651305647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.733863868 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.309597552 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.312504953 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553148172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857597082 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.832467016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.36950481 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.381790329 seconds)
  done (took 19.440563337 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.31235284 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.305919729 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.306838581 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.324522327 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.362487413 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.334560369 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.318249296 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.304622764 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.36806107 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385490649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.334465442 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.367098999 seconds)
  done (took 21.238128148 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404657218 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308604039 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306929289 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378613784 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324864842 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150592411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369792915 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020438441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327319048 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579443738 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308451086 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403915034 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564437146 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310369494 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311965721 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.306947381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536032898 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796182052 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306937017 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312805037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339023856 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309815443 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312374274 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516267679 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308055197 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304104115 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.567282563 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307046522 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583164182 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324182365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31657784 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307050146 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583582556 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960763415 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425565667 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515942362 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321455424 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310554624 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.309448085 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.313228972 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319531794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309259696 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319662128 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307917269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306642889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305979415 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017467769 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333675667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.307151926 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308793006 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562930288 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4084122 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.313919253 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311542308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341866449 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310012008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.314186526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402693961 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892220087 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319242957 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313561452 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.314185928 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313673673 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317622503 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925642142 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.315075416 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.310019895 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315162581 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312593405 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315251707 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323711322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309329013 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.33407274 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309225748 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01742093 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310831247 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309266609 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853784862 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313577462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.311096781 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538228015 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309429591 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30913799 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.306609143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310910144 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013605108 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31791249 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.296195413 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345584002 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010971433 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538769806 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328073008 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342724494 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.53447961 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.298060175 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308269729 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.314962547 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311511807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331073358 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.012467147 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325434055 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.314857549 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570930328 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.522868585 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314881039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.303938224 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777911117 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339469838 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.328867181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321547315 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.525873414 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.88852704 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325150731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326937367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328846083 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312982633 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047325121 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31915402 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.417010104 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317178604 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579268271 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.095684969 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313901612 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37896334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315634712 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313122334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320991526 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312663471 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310790645 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.514018938 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339261983 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.325913041 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.314426005 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316240667 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.313717256 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319683479 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.31529284 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537010678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320094082 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592478901 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312961419 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31256886 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31240657 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.53535001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.311408696 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.647883283 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57926068 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326220178 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327636504 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329626957 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334003283 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421275863 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340009794 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.31506953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574451489 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.321527697 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.320496338 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325421984 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312890522 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317223054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.322950776 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325865543 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88882096 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291569689 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323230165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205978624 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.332939565 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387888301 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326498109 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525116235 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.32615049 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318629355 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.324461575 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.317450787 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542643975 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328245039 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.327815489 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392516556 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.78201394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911097839 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331991813 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.31830499 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.311786987 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.310676601 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319431762 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319737972 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314985082 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527703597 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33323455 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320519054 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895009073 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320812465 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325684864 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.323602158 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331005417 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.324062131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318488049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.320563565 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334679041 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323337853 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334420063 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465921716 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.334286972 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317879477 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.836670066 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327670453 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320037827 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320216741 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352921747 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332715011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112113024 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59992995 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319207345 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572296108 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325943367 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.33321212 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.320881293 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322373815 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325112072 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.334650219 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348696101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.330127306 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330635805 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321713847 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895853878 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048371537 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84776154 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322382195 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.326329207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323499777 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026706093 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333142778 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320041991 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553983583 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046068199 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334575861 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789485656 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.331678367 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064138689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580694754 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553458895 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31963785 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.323857658 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577527555 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531913788 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355766595 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32630629 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322354747 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.307999371 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866314199 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33584096 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400684762 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030973594 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338565667 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32288067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.340854966 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337779504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719274795 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333702239 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321927377 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333203793 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328983183 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115776928 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34401989 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321170544 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944050805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325042371 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.789868271 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337083578 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529688938 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.329275784 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.326298104 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.328641146 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.324587399 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.578309111 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577617164 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322956093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322010313 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857556655 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.195856961 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.32934335 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321536593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066196603 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335461333 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60996241 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.335432644 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.321694424 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329666691 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325532651 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32122317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.320653384 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33278126 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29515833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810563639 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.340556165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329056587 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333297393 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32967722 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.578528869 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.337966304 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901583792 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552619009 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336960333 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348697041 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.327350121 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326670253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.312629459 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327494181 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324517935 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344939032 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549134996 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321833478 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.312157583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360023487 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534677697 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327230891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330519302 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559568504 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.322745202 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.339182344 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063654924 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36029321 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329521378 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328381618 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340966941 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343417506 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395453054 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540237891 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.334495261 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.336712602 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726757928 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344546203 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329776639 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.341607046 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422073088 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32721115 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.325876799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.097837627 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908649429 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052082645 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908922807 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584094738 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333108012 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338362442 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328240711 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48898791 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326016869 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601340936 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328460695 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.330583089 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348765555 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33311448 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334811935 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547008734 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604115907 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329168629 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33928484 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332462382 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.328467335 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340670285 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.53780642 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819777928 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883576693 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327332626 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332447494 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043363164 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621343951 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330328927 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329891435 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331130226 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.349488065 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368285526 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.334269618 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329571751 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474367173 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584966073 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99021033 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359848406 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.356322437 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.104773402 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328970374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602666791 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327552613 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542753726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915615664 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027942996 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599288211 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400464864 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540995488 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.330041414 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495308501 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.335728093 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329647854 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330465616 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331218816 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.326536404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341730651 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917378995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597057085 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.333476471 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.336098035 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361471241 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.340973151 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553704382 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047014537 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554751472 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339891179 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336461433 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332425898 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915819507 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58825735 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338296009 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.33505932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568035687 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33158865 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354796838 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849331092 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.329323354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889450115 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.333453954 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354645165 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337041249 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038822063 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919637651 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.336307837 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833087797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337229774 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334642119 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630183998 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.33977783 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33674016 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613725007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.336924926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33569399 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5526439 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.91350583 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095479835 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.352682579 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351535545 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.336448633 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333160406 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365762829 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334220883 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334088662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.750000759 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355041389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337350017 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347424908 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.342162621 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336597888 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.336464804 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336484312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.340883435 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.323313048 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.316456924 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340386948 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430439347 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883680666 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348321971 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.003475446 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.655784754 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587337842 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340003555 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.321901768 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.33574109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33237862 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331541343 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332393738 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347728039 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881760418 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.348253124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.347590287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336076359 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.549669063 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544467225 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332181619 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546022502 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336126123 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353231416 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.317022439 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33290995 seconds)
  done (took 949.717729455 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349641726 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.348192088 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.376872778 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.368332314 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.373482036 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441422129 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.423723471 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345606079 seconds)
  done (took 20.269127002 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.336040327 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.343577217 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.334041911 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.342886274 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.342012725 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.813104306 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.349045762 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.342692316 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.350583309 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.348815029 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.33308101 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.32064976 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.345082846 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.350445414 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.337883792 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.347425046 seconds)
  done (took 32.190494435 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.272982575 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.469658203 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.155831353 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.359031693 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.384630669 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.347427963 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.540271116 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.356033918 seconds)
  done (took 26.131150207 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.347845197 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.347682322 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.34816675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345333015 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.346854006 seconds)
  done (took 7.983032949 seconds)
done (took 1204.738333828 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.33977732 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.343242086 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.340350173 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.342578101 seconds)
  done (took 6.613138841 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.323487212 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.322836865 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.324606605 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.340306225 seconds)
  done (took 9.558599294 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032441866 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.965378405 seconds)
  done (took 5.243286773 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.828242025 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.821414852 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.82407949 seconds)
  done (took 6.721354006 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638790316 seconds)
  done (took 2.886761075 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.241268583 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.206379677 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.022742786 seconds)
  done (took 7.719787382 seconds)
done (took 39.987627605 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.34041392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.588107956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.496552131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.337602431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.519694549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.497557594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.139343779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.34800068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347142534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.341959977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.338369288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.500641447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.055856947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.589441239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.057443488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.589891327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.559624589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.350424333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.33955937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359548212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.142180898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.348790809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.339710271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34054065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.501290594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.486850329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.343012611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.589349097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.339785849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347176971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.487084933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.341282398 seconds)
  done (took 81.555481502 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349457947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.341576846 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.352563505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.347411132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.341004364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.351243329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.341503155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.343875888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.340231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.340885882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.366884803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.339403192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.340756372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.340864423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.359709244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.339159608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.359555208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.34302282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356742966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.341127934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.340216374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.342999747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.342086592 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34430334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347445568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342657863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35965108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.356012263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344700672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3450522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.347845362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372190794 seconds)
  done (took 76.372453431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.343052488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.34685586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.344016935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.352649764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.341889025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.345249754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.344595144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.350057069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.34265368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.374771207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.355513916 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.343252346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.344216039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.343256892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.358715147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.343741054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.343900482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365557874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.348954331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.344426757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364052871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343583843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360732827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343043863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.356187094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.344806533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.344867574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.346608461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.342893694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360899635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.349278323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.343732892 seconds)
  done (took 76.431038415 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.626507804 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.352197618 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.353904432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.337121776 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.352646511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.35147147 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.347388057 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.627662843 seconds)
  done (took 14.601642384 seconds)
done (took 250.206884675 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.343740446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.345833484 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.570289487 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.373623393 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.344402522 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.370627053 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.372897058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.568166364 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.310270656 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588727834 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.362333106 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.370018616 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.345246278 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.371933568 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.622675527 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.496625113 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.271137791 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.34741849 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.701076614 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.366591466 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.616184631 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.3482438 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.634186032 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.284032368 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.36465431 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.345890282 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.362400953 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.270530759 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.387473814 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.693231787 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.354623558 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.33878538 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.435884028 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.450652857 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.562165312 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.510944446 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.347457843 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.435580452 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.568705528 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.351615387 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.347001178 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.106830269 seconds)
  done (took 81.816844769 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.352670322 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.467430589 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.355104525 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.354519968 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.355589091 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.471420505 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.44909683 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.354256989 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.355802733 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.355517216 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.355040767 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.357007701 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.356716527 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.358052209 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.356915078 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.354171901 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.354507847 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.35787426 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.357979193 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.401737026 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.476450816 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.377426807 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.349479978 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.356458146 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.458067062 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.489230344 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.356519948 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.348943742 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.398375923 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.358233015 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.360248541 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.400911481 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.358136928 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.360042077 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.467745899 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.456665283 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.379636401 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.355208624 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.469401296 seconds)
  done (took 55.317306076 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.359980926 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.606100704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.78347869 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.364326697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.359049763 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.362068201 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.436424571 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.360597129 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.362739903 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.363953819 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.529196194 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362017324 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392389181 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.8082835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.36249252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.359345182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.358751877 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.359830303 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.61624424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.371030239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457183836 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.365845261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.438111339 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.373629852 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38297465 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.360093303 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.365039534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.940019535 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.360936969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.529931753 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.136868448 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.438041813 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.894214653 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.796578397 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.135040901 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.366262787 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.362180374 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535690096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.366689235 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.361351779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.436694197 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.366262172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.790748095 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.045251795 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.383672926 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.362202325 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.960146286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.536867294 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.60387325 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.375150979 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.819160003 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.371065051 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.362443417 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.363330475 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.597453603 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.370158501 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363134205 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.966879988 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.390356696 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.439281488 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.368881776 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.363438099 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.61605013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.36857819 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.612311088 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.369029518 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.37238315 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.383778286 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.796858148 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37023373 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.029837289 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.386424628 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.36359161 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533551817 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.616648054 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.006584604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.384830874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.622109437 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901573413 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.439234415 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.368146605 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.934907392 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.442560958 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.373697057 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.365519568 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.367677889 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.366088217 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.412052688 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.436915072 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.970654591 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029754286 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.989933488 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.464304211 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.375714884 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.365783952 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.96978778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383903211 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.36544699 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.793959404 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034363796 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.387463204 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.373350944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.039792251 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.389922717 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.442125146 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.376640045 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.805837844 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.372039767 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.411602267 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.366280649 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.372594268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.390348956 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.443698585 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.375554461 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.366138173 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.015980381 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.563311084 seconds)
  done (took 180.222295072 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.359736891 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.377042553 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.358748003 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.378864225 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.359041285 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.367037799 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.357064188 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.362606204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.367836769 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.361052068 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.359383489 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.362993798 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.35984138 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.361666391 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.370989301 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.36911739 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.361564035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.361259795 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.360337767 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.360516318 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.361328312 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.364946302 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.362929114 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.359869402 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.36148883 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.363634428 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.363456543 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.363666896 seconds)
  done (took 63.449274584 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.368510069 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.917964712 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.373581653 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.496429607 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395219844 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.366656967 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.494558863 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430726947 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.374515519 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36602599 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.367564522 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.66102601 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.371351385 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.869005494 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.560420424 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.519854644 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.875688453 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.392032559 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.367074845 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.366776727 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.498429942 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.384095558 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.663820921 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924099153 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.375420804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916220311 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.35907432 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.370044231 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.368824523 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.9220463 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387673068 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.666997004 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.448742884 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431435001 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.92352231 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.873011578 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.886581174 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.512631502 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.374334203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.367461962 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.368456042 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.35831938 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919075147 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.373605901 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37229278 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.916408983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.38835774 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.371781871 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.377578733 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.36714024 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.430301379 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.433659636 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.672998825 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.995733376 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.444731698 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.387037212 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.49892916 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.714104095 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.375836125 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.870318408 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.377610658 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926504803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.393571471 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.362737868 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.371271743 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.37653055 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516702054 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.504756005 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.875821496 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391473434 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.875100871 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.540231566 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377134695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.372174789 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.373654593 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.924556574 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.874188431 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.539389348 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.507198069 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.569073588 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.367308283 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.372988489 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.361904814 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.449104888 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.376274968 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927971944 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.89671144 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.398307642 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.375046558 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.373803757 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.375579502 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545559208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.949798612 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453165168 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88087263 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.69563496 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677706722 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.37949631 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.431242984 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.397337584 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.737170798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381406794 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.431122335 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.790442967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.677261961 seconds)
  done (took 163.252825868 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.60800312 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.389300253 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.489707923 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.529116274 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.978989326 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.948885074 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.369972413 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.498023989 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482759927 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.633718226 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.384782141 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.4651014 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.587398755 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.457827842 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.070100978 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.44316916 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.469588024 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.51944408 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.514031896 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.375418332 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.021986444 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.663789481 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.559477114 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.394783837 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.483271163 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.145066452 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.948490091 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.923006696 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.546964157 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.377942545 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.90563688 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.393341841 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.309832545 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.044842677 seconds)
  done (took 64.212945609 seconds)
done (took 609.525091214 seconds)
SAVING RESULT...
DONE!
