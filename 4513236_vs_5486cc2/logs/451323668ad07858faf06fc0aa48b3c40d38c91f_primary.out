cset: moving following pidspec: 21690
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.297293804 seconds)
loading group "string"... done (took 0.593046769 seconds)
loading group "linalg"... done (took 7.228708516 seconds)
loading group "parallel"... done (took 0.167732448 seconds)
loading group "find"... done (took 1.147357705 seconds)
loading group "tuple"... done (took 2.008828198 seconds)
loading group "dates"... done (took 1.296357184 seconds)
loading group "micro"... done (took 0.239676666 seconds)
loading group "io"... done (took 0.969443215 seconds)
loading group "scalar"... done (took 39.271764649 seconds)
loading group "sparse"... done (took 12.34751944 seconds)
loading group "broadcast"... done (took 0.966908947 seconds)
loading group "union"... done (took 13.400743837 seconds)
loading group "simd"... done (took 4.400585533 seconds)
loading group "random"... done (took 8.909612275 seconds)
loading group "problem"... done (took 1.943170121 seconds)
loading group "array"... done (took 21.048082611 seconds)
loading group "misc"... done (took 1.910416915 seconds)
loading group "sort"... done (took 3.187290087 seconds)
loading group "collection"... done (took 17.834140369 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527894104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139920725 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116671772 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13681739 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182142893 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130643393 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144259469 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08389104 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.0189526 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164272328 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13728358 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475408858 seconds)
done (took 5.009507798 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198377148 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086070019 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095363234 seconds)
  done (took 0.879618506 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064986153 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125293751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079174382 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067666911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065852118 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079726556 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06630171 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065490245 seconds)
  done (took 1.254880987 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073583625 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06782709 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0832412 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067114194 seconds)
  done (took 0.997096839 seconds)
done (took 4.111626515 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895574346 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233244657 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187757448 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452992585 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147623641 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187414103 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666702934 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348598877 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208083276 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099396917 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105104757 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376581405 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10583974 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664121668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077563859 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10417965 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156065454 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432492932 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080641685 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081745826 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103214502 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140984045 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099612267 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076709108 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16713497 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069407413 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146628201 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094570731 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067543956 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241747024 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189174101 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672699921 seconds)
  done (took 10.422114876 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098794166 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11532899 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068397699 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138535573 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100784693 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084775987 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070968369 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081557208 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092347893 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156990783 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113487024 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105047818 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080473673 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068943631 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099395713 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210637488 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105495758 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083838087 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085194231 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076061726 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120652817 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081576208 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092349797 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077949658 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150679449 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192873085 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108919732 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11008745 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068453212 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080804683 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130686825 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140769536 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066106477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081167427 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140471341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108947532 seconds)
  done (took 4.501806178 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022007659 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08605019 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.127930251 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139001944 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151110675 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067755665 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125237885 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.079759799 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098064606 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23097172 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.086393914 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.473362714 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09138403 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128814997 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101601097 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06745129 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08451112 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067359701 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.514260196 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144848398 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119663258 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084553155 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088515364 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070273408 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356555071 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068186116 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065877746 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083281544 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058529158 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144365938 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067550078 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.20850709 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088934454 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087049854 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102117111 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193083106 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094142138 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123758794 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081040233 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066607273 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167631392 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073472198 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082076818 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087511204 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119150357 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119107729 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068561357 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081556246 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179199816 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066726945 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098373288 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.889790882 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165635679 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079619522 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067316573 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28715632 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083339937 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083163798 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064355257 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275131426 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155373395 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066857918 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082548936 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065731038 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063460499 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083821434 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379401525 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066990935 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.0078527 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081696495 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0764361 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06326208 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084538142 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080509229 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073531708 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071787587 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100805765 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065605603 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082756722 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066382625 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064800486 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084298485 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084187456 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201376252 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082438834 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066050381 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080841621 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08573389 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109284444 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070939492 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064559971 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115228515 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069123027 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081771773 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101276937 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083476633 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09817738 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069921498 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127189656 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068290197 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.152773961 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068361076 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110965536 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075966318 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113480879 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092667991 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067228953 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151994901 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06394165 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080779983 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06670354 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063710599 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083436388 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067337159 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097124053 seconds)
  done (took 21.099166717 seconds)
done (took 37.750608465 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290819361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09065947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09031105 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074003755 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090809229 seconds)
  done (took 1.415700874 seconds)
done (took 2.169434099 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120545938 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115936284 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062758597 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111424394 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063155786 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115923758 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112270974 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080544604 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116330202 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064140034 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111466662 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06403421 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063091908 seconds)
  done (took 1.980954593 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08170835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084490407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083567564 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080700585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07725562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081961046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07922142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102516966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07968712 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086269702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063100833 seconds)
  done (took 1.649797825 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081462343 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083121808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083482703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080448122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077380636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082066177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079407657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100215091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079807842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087774418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062955282 seconds)
  done (took 1.651941656 seconds)
done (took 6.026636816 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077483222 seconds)
  done (took 0.824396329 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692157618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.446391921 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082533106 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13237582 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219529685 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151593175 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.436392035 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.10868169 seconds)
  done (took 10.190648651 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101706909 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083329393 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069267278 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083757648 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06806552 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084625684 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07197447 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06911731 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085969074 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070828487 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08525044 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071793241 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085398779 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071601287 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069317686 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083629528 seconds)
  done (took 2.068601085 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093109236 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091717803 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088878008 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074994764 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087772957 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071871234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090937255 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073789022 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085754771 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07257295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090257875 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074295994 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086721767 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065921057 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088934145 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075927402 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085813422 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074028548 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090465427 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0757769 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089454976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065484108 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0868566 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074573356 seconds)
  done (took 2.810799625 seconds)
done (took 16.648753796 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129576762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0756771 seconds)
  done (took 0.95667024 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080397584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096422784 seconds)
  done (took 0.936487123 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081992701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079550274 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08962591 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092080824 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080983745 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065643303 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101581281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066447107 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080101049 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0665151 seconds)
  done (took 1.56508399 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068178856 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091878034 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070210027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095694043 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074684381 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079890369 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07275416 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082401857 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077463012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077374396 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071192128 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097591485 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071903456 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100103038 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072536264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08386184 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0856894 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067873073 seconds)
  done (took 2.202975872 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065499987 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066495523 seconds)
  done (took 0.893554627 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066580847 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063338728 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081490796 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066384002 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077621788 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062565156 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077680936 seconds)
  done (took 1.257433653 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39725929 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10770987 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240788925 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086059728 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102050411 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259869523 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081203305 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070537157 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086565541 seconds)
  done (took 2.231449798 seconds)
done (took 10.80292803 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079312061 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085218887 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108376001 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416393767 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104101637 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065645181 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.139878881 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.205930027 seconds)
done (took 1.968734815 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124814458 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.603264242 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39609452 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210710171 seconds)
  done (took 1.976129376 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368323996 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091016916 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072663856 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066317939 seconds)
  done (took 1.369881274 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065978558 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069546797 seconds)
  done (took 0.906672054 seconds)
done (took 5.147573427 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066375742 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066037264 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09938056 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063873933 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082273966 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063762118 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064045689 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082378093 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066162064 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065958576 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082033283 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069348282 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080747249 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064145256 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064052254 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080737606 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063241767 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064095048 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078448403 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063776285 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065910162 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078464694 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063977147 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066334035 seconds)
  done (took 2.509623105 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085847566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082164609 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072275568 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087135307 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071143586 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087785982 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071790137 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066625623 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086083475 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068494905 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086505345 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071083868 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083236406 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069957378 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08331428 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070519352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086712448 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066462496 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068584744 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085157184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071659668 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08143669 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070605889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086156527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069780765 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084591225 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069087181 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081746889 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071972764 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084856725 seconds)
  done (took 3.09553936 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070470618 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063943036 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079858826 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070197824 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063857618 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08046467 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064192233 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079475195 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065134234 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064195121 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080894996 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063545373 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064320554 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080159338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065203906 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082434989 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080466352 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06451786 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07916526 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064416823 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067528076 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078973122 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064490668 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07979506 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064345235 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063861014 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079735603 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063840372 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065098758 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079043066 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067244868 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067025166 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079335152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070258405 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082570528 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063317226 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067603084 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078398439 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064563865 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06360268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078142434 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063576536 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063668003 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085722674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063621623 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081183211 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063801727 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064732564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079932445 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066896342 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079033629 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063110957 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065306368 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079961902 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068038365 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062825946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079665856 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063473399 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07993726 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06354653 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063324586 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078614707 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066175401 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064425937 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094075576 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070428614 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078466805 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064803134 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064975829 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0811851 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065416601 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076880019 seconds)
  done (took 5.896997944 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116866657 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090647541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081231862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06610473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077971322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063897015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068433182 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079318747 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065902376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084553953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06464129 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065715029 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081081266 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076421815 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080171998 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065678871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085247283 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061750154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064072995 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082174657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064734604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083052012 seconds)
  done (took 2.448878484 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183268834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08686071 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109165877 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089067745 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083457254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073774743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084845256 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070199797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070522251 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083135935 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068889322 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085178446 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068700019 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083040279 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068873591 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083783851 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070287963 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083835684 seconds)
  done (took 2.325955457 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077506427 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066238804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105538409 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066644476 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082989735 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06892645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086669231 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074559617 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083573587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06764528 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09016528 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069235151 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084257655 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065623633 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069093992 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081588743 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068839493 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082315182 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075020687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087036905 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07229787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089619176 seconds)
  done (took 2.494486542 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080635489 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068131678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100684436 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084570832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061936233 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065182865 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087942222 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066426289 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087420473 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06857335 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065990997 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079839876 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071783108 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081473972 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071133678 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081647892 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068750848 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066753176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083509803 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063383343 seconds)
  done (took 2.286278192 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086374124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083379482 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067887557 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09047973 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068049802 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083285799 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076159936 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083334808 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067673074 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107566849 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067757686 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084685354 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075331062 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087923709 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068093812 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090786726 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075869415 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090534419 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066785929 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082622352 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.213384419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068503876 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091435242 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067633306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08322318 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067649611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067817138 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088753112 seconds)
  done (took 3.138037045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066193978 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066519699 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079640623 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06337603 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06381533 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079014088 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063919525 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063792319 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081486406 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064278579 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066021593 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081450044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066594731 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081219968 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066244959 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066592538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081538364 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063696171 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063838236 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079374471 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06693091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065901735 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081481327 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063769313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078593781 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065834244 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064297588 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079326652 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06572438 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064394866 seconds)
  done (took 2.892227275 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076664661 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08939462 seconds)
  done (took 0.954846839 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06338009 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080133586 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078814489 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070194033 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085707635 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067465665 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089907153 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070917992 seconds)
  done (took 1.392861991 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081243334 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077702559 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083403384 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078432855 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.091867295 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082932867 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152736094 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082897424 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072434321 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080810085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079837964 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065003761 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088580496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066605728 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087902377 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072467553 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06454455 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087414992 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069299673 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080399589 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068454585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09078512 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068410492 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063006335 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083427515 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075567424 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093345887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068186729 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085588711 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073637745 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087686461 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061187869 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067208555 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082516965 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065004034 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092311352 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082305866 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084928983 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075340064 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068135076 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092130395 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062110604 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086328142 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07372426 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091664432 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067208934 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067336292 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07760826 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064416791 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084472664 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064736339 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066538033 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076390998 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074113958 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085992376 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077355518 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083134549 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067640732 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069758457 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085282357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072962137 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084019473 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068720334 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065925896 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091825626 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071268302 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091168239 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062667656 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060827263 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080602368 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075531756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104291001 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072296229 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08267112 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068168107 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080169695 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069062209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067908225 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087316311 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072317762 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082793503 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072397191 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089287467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066876668 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068561902 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090225795 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065461208 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084516759 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064616555 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098433292 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064958478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080376809 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064197295 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076879225 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085300726 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066968389 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079660907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073114055 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060676965 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082217544 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067703579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082937457 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077061727 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087771539 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07282636 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090677636 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074267057 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066185324 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085561692 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064275079 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083159716 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06539687 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073517822 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07719812 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069531307 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083261539 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067564782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09158244 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064971284 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067432957 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089255535 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072835814 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081085496 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063337804 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069571756 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082355654 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069893081 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089942679 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06568406 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062347891 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078007335 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070204301 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082456755 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070181248 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087542182 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069264211 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061581123 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080730233 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071512424 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091301223 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068027105 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083144106 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072740833 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068129254 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081267849 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073102631 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085206835 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065611432 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072577781 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082988328 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062117756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085554892 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06870185 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065664327 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086093717 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070584049 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08415094 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067099698 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080775081 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071566295 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067670008 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08160605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066339266 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081027448 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077144482 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068596337 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078104334 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064108358 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08924453 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065406027 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065557853 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081790842 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069449837 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083131318 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064685595 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066608737 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084974241 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076805359 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086725777 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06832707 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087167593 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077400916 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082479212 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068598013 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065769516 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083358423 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068297747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090715758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072011394 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08781964 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069349207 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063066013 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087855466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074032998 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081512912 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065032255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064739079 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085686087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072334442 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086213361 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067469811 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080845809 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067130093 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069389898 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08506124 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066237693 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081865229 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07118128 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081285336 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073350821 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06735832 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093022528 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069578326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077764972 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070102433 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080825389 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072256348 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062816849 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080821534 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066784677 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083776773 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065418336 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069407148 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077136662 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073914264 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089770517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067123466 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065917185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082663697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073198118 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084155099 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070413604 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069864109 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089233505 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076749316 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081433487 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069913656 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092565866 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066937157 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061086721 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087404148 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06623967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081982187 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065331109 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064823003 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08497755 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07480396 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088968535 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061875528 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085388802 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065484557 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065990671 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077909494 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07139626 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085519216 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067858332 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072934304 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084185216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068035913 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086075571 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066528695 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067286383 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083528848 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069231725 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083550956 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069266408 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081813796 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069043731 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065915441 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08112186 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069392628 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083106917 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067239539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072310303 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081665353 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067539227 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085131865 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06800361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067558218 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082840797 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066641219 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085650342 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067447815 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067526307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084647628 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062487921 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089261159 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066832679 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073659321 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083052286 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063870989 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087976577 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069287786 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087577811 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067702953 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067351841 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083589081 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066816985 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085149133 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072997271 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06523224 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093665785 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073957182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083514208 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069121407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082993518 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067547298 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06564837 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083666623 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06754345 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082746599 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066789468 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071294424 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085248123 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067732908 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084876163 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068517398 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066300172 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083712832 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062319688 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06536639 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083003515 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06673102 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09219188 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067304971 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082674028 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066099113 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067628883 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082011489 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063820468 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089701328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075586903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08424806 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074448071 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082292499 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068248421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07666001 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077120723 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065663244 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080627235 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064200912 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073799008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08299049 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075161058 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083034075 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066727612 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063581586 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083278543 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065769635 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077070324 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064374858 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070289255 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081710783 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066566606 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083794179 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070477753 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068045861 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092302522 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066242504 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083668917 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067674364 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063481118 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082067952 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066483996 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085721943 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06758404 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064790288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08004559 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066590414 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084150885 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068430516 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066571944 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084515152 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073593694 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083118725 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069902745 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070467852 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08049567 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070158205 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083015854 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066383397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065803571 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085839089 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070307846 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084905849 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075387403 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082671682 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067888823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066892685 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081301774 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066854809 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08271694 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066102098 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065845373 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083799183 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074631797 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080878728 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069617116 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066120932 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083050202 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073245058 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083596731 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070254448 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090148753 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067245668 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068288016 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090704967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070789133 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086664971 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068446668 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085297714 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07301768 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066307154 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089570423 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06768602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084460782 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068048306 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064794098 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082958199 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06692003 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081960775 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073202464 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067704547 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083142537 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066717212 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080920376 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067960042 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070479739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090206772 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069783525 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085993236 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062646197 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063501283 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084003605 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064920088 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084608953 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070015755 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071978207 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086351997 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067570171 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082127216 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07535964 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089076539 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070331195 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064522645 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086594551 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068456944 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085321799 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068066661 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067355767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084331584 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070809735 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084479815 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066746034 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072870225 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08600708 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068456955 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084324634 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067734518 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067045464 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078631874 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067572817 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085005215 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071896991 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085299966 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06717338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076534969 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080776339 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067311335 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085882821 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066872768 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071223427 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078616121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068296523 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084472235 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068572909 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061787527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082481948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065803731 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085519931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066154584 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061709265 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093487006 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076180537 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085835258 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065904958 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082026488 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062144272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062114792 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082860796 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068817116 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067636177 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092914728 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06594012 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082139912 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063008385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083941132 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069740605 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070829 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080283863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062335585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065385035 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087642759 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073239999 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081578841 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06724471 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086648668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068271716 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064716272 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086759538 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06418259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086526594 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078821987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084219925 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067218406 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071956499 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091122815 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067583334 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079081996 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06819686 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069115425 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083959789 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068684853 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084593304 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081690012 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086670277 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066381876 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065147728 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085526181 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066566845 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091366834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06844279 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084022838 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071109339 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06810977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091460233 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069591105 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090337026 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069644306 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086535407 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066032051 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066001644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081549812 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0664584 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084841736 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067306167 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071265313 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09163865 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065487942 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094347614 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07579703 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08564715 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064265044 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065805594 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083177801 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062683824 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085148392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065302928 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064551891 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08189273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066541775 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084403373 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073841718 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06871773 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085620667 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067143873 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077950716 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069109407 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069159127 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084922596 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065070754 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083489338 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067315296 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070914416 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086566973 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064688797 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084465248 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069188226 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067581138 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079452674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073683814 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082531089 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069605635 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066228644 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08387138 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068178415 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086505664 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071513755 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084343229 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068696844 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075219289 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086267939 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065045736 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080452828 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07201801 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064782751 seconds)
  done (took 45.769547389 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10803089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080464687 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062744125 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0792291 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075115318 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080484684 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062461111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063299558 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080062325 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065697895 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078862606 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06266932 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087906881 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085862693 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091896177 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066852688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078823794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063090565 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079098832 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063481936 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088514495 seconds)
  done (took 2.438134482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075114422 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088221487 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073795593 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09369961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06818533 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088314793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073319974 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088109737 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092994208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067989552 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093693115 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072121669 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.083949149 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067206142 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084458135 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07208108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093705127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068475846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087567007 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073669418 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088349334 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073479224 seconds)
  done (took 2.597778819 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066955771 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065814718 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084780822 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062409732 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065538021 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078072576 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069539191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081387833 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070060739 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065262884 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081728409 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072641713 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084238901 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061325913 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066225252 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080544456 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128560324 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069955778 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065169341 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085168356 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061481687 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085908597 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062073477 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062168677 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081979843 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070151741 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083808418 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065137723 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065690483 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08195962 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066720486 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081319082 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067262873 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06639772 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08229266 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064968836 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065266296 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083057825 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062283486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080872428 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067730087 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062152241 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083834608 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068183694 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063267956 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.080854259 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067852296 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082776087 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061597481 seconds)
  done (took 4.420000401 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085228812 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128512227 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086116088 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090090508 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101257177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091659193 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070712369 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109546186 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063897075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082842365 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08332187 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101208078 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084383043 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071436051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090451865 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066942618 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084017221 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065728442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070546606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083727117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069876891 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089902279 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098729206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079884684 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0876926 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065301089 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082595512 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070829027 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096795929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071347438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088862718 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072728848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099382113 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071821098 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083243757 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067601382 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099938963 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083890505 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068963959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064320711 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085523158 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070593814 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090426774 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100490775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066864948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071548041 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083729729 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063299747 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097217758 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068477174 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092275264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098799374 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070756752 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083776413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07124924 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098772173 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066555665 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081424036 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069501347 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096382322 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064131244 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087036528 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08032332 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084915673 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073848109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097948724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070952573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087770047 seconds)
  done (took 6.560268222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075207779 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090034683 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081819368 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098590539 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090132161 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072940852 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090329688 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073224692 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089191714 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078557946 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089773122 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111542307 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068202411 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09331433 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07353022 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090898136 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072839063 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090655479 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072522016 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091271833 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090027112 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080772617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090032581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098571706 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103617822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085442027 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07370144 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090502378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081500397 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091211862 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10228327 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073402256 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089585572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099793975 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085715884 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090968798 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065923435 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090568329 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072639953 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090196174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068513351 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098835218 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072866834 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085924163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072353073 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090476958 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098433812 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08512003 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093160603 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095196589 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073555485 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098707147 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073086236 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091345416 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098722532 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106242772 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099196432 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098627976 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072651638 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098498892 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0976168 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106663982 seconds)
  done (took 6.261626042 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086889277 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093000627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095823322 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062395383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064744505 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089091534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065091476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081496247 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074923989 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092394108 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077296429 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08752096 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073693265 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095258743 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087756284 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074077625 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088132378 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071028136 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092473332 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070470749 seconds)
  done (took 2.468211687 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075097678 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101529155 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067847389 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072314511 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088440541 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072396795 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087113434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069336384 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085346643 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0700946 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094595893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078085684 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085136735 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072724685 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094200758 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073405096 seconds)
  done (took 2.136657631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078364251 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09448778 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081808229 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084533949 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065183991 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081190545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066354219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062683909 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080907022 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08087061 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084707331 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069702499 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084750897 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065076448 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063454633 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087744225 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063180163 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081479524 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066909303 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098190603 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077527606 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083145833 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067595856 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067417396 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085221024 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071574324 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085066531 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064246462 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082384275 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067407122 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084231483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074419587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080503395 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065504923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064304687 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081234565 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066608208 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084473951 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069530117 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066267608 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082567862 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066812188 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083734998 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068100647 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080087681 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067461412 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063015631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090273376 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065053037 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084737246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066758171 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08613481 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068117725 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076363026 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088578705 seconds)
  done (took 5.020426971 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080434472 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069939854 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080573687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064657033 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087230663 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068485574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069211215 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086663197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068261549 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082154803 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068718792 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086494236 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068658199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069723715 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085588848 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071120684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07959615 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068664689 seconds)
  done (took 2.210209836 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072564616 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066670896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091349671 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066776628 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083965202 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069225641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062519593 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08330745 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065399758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084322245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067093309 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068628353 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08241275 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069644323 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084173582 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066758438 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068588551 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082112841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066673791 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080072705 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069289762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065504624 seconds)
  done (took 2.472655856 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072200379 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092559937 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160013143 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104818975 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082417746 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.097765147 seconds)
  done (took 1.466148901 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091867306 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097214869 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067495915 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105363043 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075839574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086310025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069198411 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085689985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0774424 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099791295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068729881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095320986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094769233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076863412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092246812 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074386114 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086421294 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067943199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084315973 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105025135 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068883605 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094723183 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069864347 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085206943 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068606661 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09378025 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077209824 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100629412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08614149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07748751 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091738748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068498498 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094888557 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10026871 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0707363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095690685 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068875563 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104025224 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074033052 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095086443 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068703986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093468995 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095118723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074257534 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094798497 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068934001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091684016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068058189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087820591 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111945132 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074398557 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094423693 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092278666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077360555 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09443139 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111822125 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082037216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094941823 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092240863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082161459 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095038982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07392514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094470286 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098943385 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07429262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094625219 seconds)
  done (took 6.5294007 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08443382 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104056738 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069055424 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100278775 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094970257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068852805 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086430605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068265951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086289829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068792514 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126682117 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069228536 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094732608 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094669676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069443554 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085493647 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068714106 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094231907 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068799249 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111285466 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086605451 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077190035 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094739644 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094933232 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082279324 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092332904 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068933554 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086806208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068793243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086486419 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073431131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087261158 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095108474 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068586145 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094100988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068827857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086646653 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07415082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086420057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074330608 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095266612 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10385253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069132082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086598356 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082119591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086717845 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068183167 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086297102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068611466 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086433425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0991912 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082512374 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099816798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094710531 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068665159 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086351343 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069200578 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08582765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068393532 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092609403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076560225 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086036509 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111223846 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06928078 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086540578 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07695573 seconds)
  done (took 6.411714594 seconds)
done (took 126.969827529 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198402882 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182006332 seconds)
  done (took 1.238659586 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068651855 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095589632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096558436 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127462931 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085226478 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099825666 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117027179 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078621486 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066470956 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085099284 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06725257 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086332491 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131451812 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066409922 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084790867 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068401935 seconds)
  done (took 2.289747001 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101980622 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.192978096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107002149 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065627158 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097457574 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078786062 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.0840084 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076385838 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092558811 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065857673 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077179857 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094303504 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064795818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094017684 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075321614 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095515178 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064885999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095496201 seconds)
  done (took 2.492265892 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103924542 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13821965 seconds)
  done (took 1.109212758 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.197138597 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121258209 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.199670416 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.40781713 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203524005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.272543859 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.169515273 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.168262513 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154817904 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.165255503 seconds)
  done (took 2.9237321 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099685686 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168461875 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307131158 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135088437 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085462981 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114432991 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136243427 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089320115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099707919 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099565344 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080198931 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095840277 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096998648 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094124928 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074130119 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096002208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119732079 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073840997 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095412689 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075975444 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1170919 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067164121 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092950046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073976329 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077813767 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096682133 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065450807 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084964909 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076181193 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093257794 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078094391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112895756 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095776862 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13020993 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081519099 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.12914035 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096398026 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072035962 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092926674 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072201326 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096404098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077375954 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101718796 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094065507 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066321591 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076909673 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084027273 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066694123 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097993749 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077317449 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098280109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078264659 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128973349 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095949273 seconds)
  done (took 6.150447195 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.738619732 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10993874 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091798235 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.797483855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089189836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104361986 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.708316325 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11580565 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208579638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.7605963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088378972 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096203909 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17860759 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232163283 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.875811247 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284296471 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.624686196 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102730901 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107769201 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130229271 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13806222 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172356313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148634335 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407456257 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074679538 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090090018 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135211488 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093434688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.136728392 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083549866 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091906915 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154812162 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.221596498 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153086203 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0949573 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069832955 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089034489 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145888415 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235585423 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167617642 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157770348 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06687622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089657252 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138744862 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130438557 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068213194 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138783543 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170072175 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148248376 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073952841 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094246155 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140436232 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137763395 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140411276 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099701872 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.278894332 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268305338 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088632066 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116793258 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083545354 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230525277 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081917164 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195377231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137673453 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.164503836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089148178 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729191184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144867526 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089652032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07327816 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117562604 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093094124 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13719693 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143487929 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382809196 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140489775 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073371291 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089424026 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.182904734 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102078088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07036243 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138822591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093879052 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100387315 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160922829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141374469 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146057536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206588351 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141014855 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156954014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07438662 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12211106 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093507351 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190878132 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.169427372 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13822524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205593232 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137635648 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140921943 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145019613 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095298258 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149773473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117526983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079687716 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136534539 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188613761 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120651901 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082126217 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093380604 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138542706 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124316176 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084627298 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.156955158 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.14867587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.430083702 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144685202 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087176021 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085844836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137186261 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158769424 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076722202 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232802891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120063161 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145370322 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118370536 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068232938 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118753319 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140200889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077716023 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120770113 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.155003458 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076956159 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.210507786 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186660985 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077587719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212191049 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15947819 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075314675 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147298157 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118804092 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144588927 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096870251 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137430223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07488673 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743069167 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14284668 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120068793 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072418399 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163846215 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088967938 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082397006 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102324194 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067310507 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770343964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084117359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099941655 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101279214 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07492295 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119126003 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13563243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091916549 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138461966 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179764856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095427118 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117543008 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083275679 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137039183 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095031042 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102696495 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084319176 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10236957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120963489 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073757146 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102155108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144758282 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139941111 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190187628 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552443633 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069520898 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10272203 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198675178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07088373 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258968941 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136109707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.193781568 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139394303 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079033365 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284786632 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141979653 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.163536386 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104261107 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149152675 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069104873 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134285093 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139351275 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089639397 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075211076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138446036 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161948712 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142986717 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.920902411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07092137 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202255619 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066784289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167119709 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076168866 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09481926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.237213699 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090032749 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14540338 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141860074 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091977041 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082833781 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.821107588 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103535661 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136042728 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093269875 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171592682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159879132 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135446159 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136979649 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074771142 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136201081 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203592007 seconds)
  done (took 40.012999042 seconds)
done (took 57.084675067 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255104945 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175880288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.238648984 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142880952 seconds)
  done (took 1.776364249 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142003528 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103163873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115290303 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083990102 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103627272 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08455328 seconds)
  done (took 1.522219112 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.39634609 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261925699 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226943217 seconds)
  done (took 1.777023929 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.279088095 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210700053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443209274 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292342142 seconds)
  done (took 2.217875771 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.173475175 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111791033 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06696146 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10404283 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156506945 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247681774 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12552906 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183715315 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07892869 seconds)
  done (took 2.18260853 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194809276 seconds)
done (took 10.565677709 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102979838 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096859102 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090022874 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.178477777 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101182608 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133208286 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.251919155 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.133680035 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08200134 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.127868367 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127352593 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.270009719 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052192357 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118292324 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.231081763 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208754443 seconds)
    (17/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.154573981 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098358722 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080584311 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096591733 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109284019 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 0.161331435 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201413545 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.201293177 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.186855857 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080708632 seconds)
    (27/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.206872204 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130653688 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065466032 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089688871 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06574908 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128179294 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.213524872 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100628821 seconds)
    (35/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098884515 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.194806691 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099110709 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21027896 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066046735 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076428952 seconds)
    (41/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128255347 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11664882 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.209733068 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093856414 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145612239 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093057253 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088758314 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091385473 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074204211 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113375817 seconds)
    (51/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069976075 seconds)
    (52/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097386675 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 0.146176266 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165543243 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073122185 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072649798 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092803089 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072745114 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.168209521 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097420696 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066883849 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075384364 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115637769 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148616414 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076071693 seconds)
    (66/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061292988 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157090558 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07057528 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.164115594 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066868942 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090646902 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075092554 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083976107 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071890501 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088985499 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081327444 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.134531142 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.115096632 seconds)
    (79/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068451801 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098899809 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163539735 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10944848 seconds)
    (83/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060371547 seconds)
    (84/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.127244497 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077116534 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093346621 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.143928477 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114432417 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19789665 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108834519 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.086339373 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.178007169 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.134055427 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077613824 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050807898 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09877891 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067156375 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096092382 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.140468327 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085277178 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169100211 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108240699 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103721468 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175953875 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156901485 seconds)
    (106/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136745587 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071845335 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137273499 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112094793 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120101319 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.196369606 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12990149 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074084883 seconds)
    (114/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094681346 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071754128 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165195347 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067347884 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07045188 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.073110466 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077750439 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051624565 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101009739 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087987551 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.071849692 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095245424 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.071617208 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.135223577 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094846611 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054514148 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093093415 seconds)
    (131/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06714542 seconds)
    (132/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073496832 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158173453 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071582752 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093106375 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136350866 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.155297404 seconds)
    (138/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.171914028 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142881906 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.137063529 seconds)
    (141/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052614256 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072089116 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07614991 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09353387 seconds)
    (145/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062345504 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095390153 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11315359 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066268051 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050814084 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113334855 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.098804186 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066047801 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074481075 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154119823 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.187337576 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075449304 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088336313 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052518528 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067709497 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119354161 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182041895 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066109672 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.134188292 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077788844 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065647801 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199856778 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089856269 seconds)
    (168/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.169651324 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075174719 seconds)
    (170/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072017953 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073617396 seconds)
    (172/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.12866923 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072890407 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06080882 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163798943 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051220606 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086454745 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053317384 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065774457 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11588512 seconds)
    (181/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067571091 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070914394 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051053572 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055137583 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.11736328 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051591215 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088043254 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154867625 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072880979 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088187183 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208355384 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085264678 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110553846 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076000969 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11414538 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089744065 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115154165 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051910314 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09797893 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066795596 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192432511 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.272311779 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050978424 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087505489 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051535398 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053275621 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087765761 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064837127 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162086598 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136108257 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100801952 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052351921 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053338565 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087969983 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052601477 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051491845 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093862636 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076165941 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073606334 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074209839 seconds)
    (221/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119914244 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085997424 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065037921 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07308892 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.171199624 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071797729 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082470435 seconds)
    (228/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067849369 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064842783 seconds)
    (230/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.07275172 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071421508 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066272236 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.189071993 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071880482 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124755169 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075002573 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074742462 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064889336 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052293629 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093799246 seconds)
    (241/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073897556 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073544452 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051383356 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05265711 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160002996 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065422369 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086905297 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08249572 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052978232 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086295146 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072521302 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068033452 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071219748 seconds)
    (254/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090551097 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114566508 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 0.125927014 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071982317 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078619327 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086506975 seconds)
    (260/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052997033 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065984142 seconds)
    (262/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.135038343 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066544205 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19945183 seconds)
    (265/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065176366 seconds)
    (266/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.176316025 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050989162 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093258141 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134319933 seconds)
    (270/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07295095 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075662018 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053221046 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.073598468 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139626888 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088406345 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091821631 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085799606 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092383066 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062395943 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094275657 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070829907 seconds)
    (282/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052204934 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124615662 seconds)
    (284/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067682414 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192110619 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094773467 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064710653 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065403908 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071283456 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072702718 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052108531 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095313288 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065560114 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053394233 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051938922 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166793337 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086509913 seconds)
    (298/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073378453 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053267114 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091267806 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110907163 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088835985 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071392839 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060699582 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071345501 seconds)
    (306/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067729979 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06110602 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071067687 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06566077 seconds)
  done (took 32.695309875 seconds)
done (took 33.596847941 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080940967 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112535306 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074573765 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.112533972 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080487347 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098231438 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072790903 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098778407 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080594035 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082083445 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099731925 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054941651 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094775382 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075760622 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095323273 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092861311 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098382184 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073069825 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074140668 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085642329 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074199811 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085750229 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067681346 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055482703 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.097695538 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072493252 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072280194 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095992306 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065683108 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086197992 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068970074 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07347096 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085719744 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079535828 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092335675 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074147607 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07548446 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097105028 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068161045 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.0855573 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074165765 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066702959 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092646904 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073673048 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070759721 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091760898 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074333362 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099364756 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092634398 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088516357 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074724346 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097848942 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077610684 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072883863 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090004085 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074948024 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090903974 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093144787 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094755642 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068253766 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074273752 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094885934 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071357758 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094709692 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073995627 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076896303 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097452378 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071993236 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09540441 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07222252 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065661438 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094416849 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069468669 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065388478 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096352235 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077232386 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084996069 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071275994 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07259238 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092601003 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065455472 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088320767 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067226029 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07298416 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088412066 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05492196 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069417084 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091883892 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065603724 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074443738 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.092346411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072778798 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.087747684 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077149749 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065423085 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091369958 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066090268 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066571804 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0880297 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070129601 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065485791 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08900932 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075134527 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087588999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072139056 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080375051 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08631794 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072717279 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085674954 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06576968 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08175571 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.095681821 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06622674 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088515401 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065474434 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073350895 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085594213 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065830344 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065800859 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08603767 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072228892 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065537537 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088313389 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073218402 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.099523292 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066334743 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069129149 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088572506 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066465426 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071579481 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086396711 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066501718 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088153173 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063235193 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06813925 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086297777 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072805277 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068354131 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094464511 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06822466 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094904972 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07054664 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072102756 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091653323 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064765025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058665238 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088029072 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068106248 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068100042 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086401002 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067292389 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065089075 seconds)
done (took 13.028014657 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066189035 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166671588 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123574134 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096093099 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109216408 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066070858 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.097736423 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104186427 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.088239811 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125084091 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087006472 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.105654205 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114308585 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086554097 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06635426 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069958671 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.088292625 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088886972 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12259145 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106558172 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117330864 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085861514 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118523599 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089873671 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109480989 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094280055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.087723113 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07005211 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068957773 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123270738 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107124901 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069736218 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066602624 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.120539564 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.114982336 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086570082 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086567701 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084749294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086169192 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066114488 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113127022 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10033594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102582045 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082899023 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093016155 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068810509 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.087924275 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085779562 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111802911 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08086852 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109432472 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131978471 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069734243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103088829 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065149358 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108082813 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102494635 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068181199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067624132 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089277648 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065614201 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069683331 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109540739 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113168341 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070109568 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103129918 seconds)
  done (took 7.153945751 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084767119 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.114507091 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084736755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105063398 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066224319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067749206 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087565029 seconds)
  done (took 1.56705768 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067303251 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088650756 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110476251 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090365578 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.1066582 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087186572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097133509 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067435563 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10508197 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068287201 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087330602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125957203 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089132212 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074463791 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090801351 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088638032 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091524995 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088174715 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069842061 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111350405 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06981918 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108857611 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069198569 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067684482 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102320398 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067383575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135730188 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071495471 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089943732 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070769516 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065651955 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138946286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102553503 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078230783 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067153514 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102999638 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082754252 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086506514 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084030418 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093243933 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081678278 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067916551 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089458638 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066310434 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071299326 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098795002 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0687725 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088635019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070366353 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087166506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088450309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081470447 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087975557 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071803965 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068714186 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094051342 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077695562 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088710868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087218445 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068343355 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10575093 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083594374 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102642709 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084085769 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091079019 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081966515 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102590047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069956682 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069489413 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091630327 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083558919 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086092655 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06878539 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078086031 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.090437363 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091195674 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.111609857 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069234774 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098679494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067610527 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068107662 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088611744 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09050657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092369047 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067341732 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071199244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091582342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065480178 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066428801 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092342038 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065814479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089436021 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069924649 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068127849 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090794481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084360404 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067757882 seconds)
  done (took 9.184035755 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068296055 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0682672 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090483855 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068060299 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068365395 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088502534 seconds)
  done (took 1.424358701 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098958221 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.090408171 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081230492 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09431603 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105629079 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103948972 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08243232 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104086093 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085127014 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10075308 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083235344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10449786 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088072691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094913531 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082188433 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09331945 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082986844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09813713 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07893556 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094698529 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087931642 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094065226 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073577291 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.104406313 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070768307 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073236449 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098612135 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079901979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099910865 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083647256 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094533235 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071103789 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093068202 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08428937 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104169768 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072706264 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09379568 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072377997 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098435661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071862242 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104104098 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073521262 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07835473 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093297589 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104262362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072406534 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07212508 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098069691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082463723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09296718 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071816578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093580321 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070611324 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093386991 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072067918 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104644172 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072003842 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.103705736 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07336615 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071845713 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091076644 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071454683 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1038653 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070940084 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102258021 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071974375 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09337327 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074346347 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09495369 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072829819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071811662 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091901318 seconds)
  done (took 7.248920267 seconds)
done (took 27.532952853 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.634842025 seconds)
  done (took 1.600821738 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.75456452 seconds)
  done (took 1.722004702 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 13.329079983 seconds)
  done (took 14.304299273 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.596327633 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.743070379 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.79896109 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133849518 seconds)
  done (took 3.242181957 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.852776501 seconds)
  done (took 1.848034595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232131717 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22231814 seconds)
  done (took 1.430640483 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.716023557 seconds)
  done (took 1.701054008 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.264987875 seconds)
  done (took 2.24049113 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.316734981 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178581874 seconds)
  done (took 1.479111206 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.517212694 seconds)
  done (took 1.500622494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.343928791 seconds)
  done (took 7.332752275 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227981606 seconds)
  done (took 1.225930417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266940495 seconds)
  done (took 1.254274001 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.895253177 seconds)
  done (took 3.882670693 seconds)
done (took 45.741568429 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078287616 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081464632 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102110757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07824135 seconds)
  done (took 1.322887705 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077844127 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073468591 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098321637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073572128 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.09883578 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074294567 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096700235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076863901 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072654095 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095750588 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073481535 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093451861 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076618665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.096061768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070366651 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075504616 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097804223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073465162 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.097539334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073751524 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0711953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096145014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076348047 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092906361 seconds)
  done (took 2.99909829 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077141473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072843048 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095848102 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073098805 seconds)
  done (took 1.309743298 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077198154 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.114753996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089093707 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076865217 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092891564 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10800713 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069748137 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069103034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09271003 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077694901 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09008703 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098383022 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109049686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077885029 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101119811 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066017625 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068753046 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108476041 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077332832 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099107426 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070375089 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078792036 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090315561 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090855738 seconds)
  done (took 3.112802404 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076483343 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126410218 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078638376 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.112135071 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091627316 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087677981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075375338 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.113192889 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125141674 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.087705292 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070292044 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066489414 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.094544828 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066063314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075778409 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130692304 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.134163645 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068753253 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.11927285 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065559158 seconds)
  done (took 2.86743823 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074885249 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070058225 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087272481 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069208071 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076282356 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.094140692 seconds)
  done (took 1.472622981 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067788721 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067299909 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089125433 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066433937 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072353964 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089353578 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066021612 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067711263 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08913241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067590554 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067080167 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088080503 seconds)
  done (took 1.893915043 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.380839415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.090915303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069519632 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086906709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070974773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088949224 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080722578 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068151648 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11269468 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067322671 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.08873767 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068846331 seconds)
  done (took 2.274868356 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258252844 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077934844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319181179 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16754132 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139034276 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154237348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106549936 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139126166 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194920712 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13652882 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198913562 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2203343 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13228531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1664316 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112998973 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13065845 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18436424 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217522966 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127808106 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198723158 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203031537 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156015907 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177728429 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126642529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133691686 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148866762 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072418633 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103794839 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230475706 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159944735 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1983959 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137760951 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097408202 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227707277 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222572415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192163352 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160978098 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08531312 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155173825 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161638357 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254339307 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112383716 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192333801 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131701404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103433625 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171598624 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14427749 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.144426521 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135006871 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112577383 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172359115 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237264911 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163818751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109540222 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135364986 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139781054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142008332 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127911602 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238905109 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192119064 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178629457 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071138676 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122932107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1852936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156782163 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140573809 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152285301 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117071784 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191136316 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185076041 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144347244 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196794195 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.15399501 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11224189 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146066284 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169390978 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155054126 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225787681 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153482709 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073708368 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150021637 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12794856 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105042219 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144139016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098632226 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230547805 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099910038 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136853557 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137341799 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134241038 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134791956 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217550218 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175270161 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128144085 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066333588 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127994046 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146479076 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198027102 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08784375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133063666 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144983912 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102413665 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165218781 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075663766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17337216 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078955621 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150138946 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160102814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099091015 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153176363 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126610642 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102333838 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187166366 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191647329 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114452862 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082373609 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222212463 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154487424 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129270596 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172258772 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210392555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.12575468 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104316278 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201619991 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238256007 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113702595 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194601351 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132225427 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107199463 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089208009 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152427017 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13787713 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.146510714 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107016372 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151809971 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222069781 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075351346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120744204 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16467628 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105414622 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082016658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137598704 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12517637 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119938607 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125591506 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107715553 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192174695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151759812 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131578715 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151904178 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123374246 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221528626 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090528183 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129128685 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128017547 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070607533 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.161838372 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213816938 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102759084 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197255173 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175798483 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106746616 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146487602 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106424437 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16784025 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078291927 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09454699 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17055905 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135051905 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135180813 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205792648 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104552193 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153524715 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172674405 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160751999 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158494483 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159376495 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1302263 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111932942 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136960957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151912207 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074328667 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118417745 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107218876 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105388384 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119896546 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107928657 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170799714 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153641968 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124331873 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13867177 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120974335 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178213518 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101443486 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15689876 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145801133 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095450286 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207595206 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209246723 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162896833 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125682714 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17500945 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071133606 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097298788 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115823247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154594352 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08417487 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107559759 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143229298 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177094345 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179052533 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165474209 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137002432 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148540735 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185911241 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095083038 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11752863 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201776375 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151730039 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.133516309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10981885 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124351167 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172957529 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133777192 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241250606 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140968925 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149195547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204403452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105450009 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103749103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129240336 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165349045 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131504375 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202820589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100922904 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112563652 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135629453 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082017105 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1284131 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178330095 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146600007 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161835119 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142853976 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1584261 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100955631 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143486747 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150172395 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148140096 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065439516 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144927891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216971057 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119645325 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144311578 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210269076 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079637575 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151315031 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233636393 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1724313 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109151336 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136705629 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148093051 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15689329 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1446405 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167555512 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136375073 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186134064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111860383 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110085266 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088558288 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121869836 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131573411 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120659838 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136992353 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143482453 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.118910015 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158439989 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137415118 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135654519 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145127911 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099092279 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11564597 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122970201 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208557818 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14854678 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229935499 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12606391 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.201965748 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199092965 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099974006 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079708938 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104940901 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16873743 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108673992 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161949736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123173997 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10613896 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153700025 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194901308 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096448712 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092894716 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135303698 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163076753 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138117498 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123153286 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107078181 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218033194 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129376424 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080254604 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151231578 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129814945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127790091 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231162203 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061907934 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124327462 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076650123 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105989547 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157043347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212509556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083742024 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.149578892 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14552378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147753582 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156610822 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127498427 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124286768 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116202285 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201939913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156380091 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116303745 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138988502 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159847969 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211348301 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131959684 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096576717 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228621092 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208071689 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193814187 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114446782 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143127001 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141612229 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134731697 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168444175 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1077273 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223661529 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083972946 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190198892 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130482258 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095245737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156706864 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123226785 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113882528 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178389615 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14639135 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105902905 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119539261 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144443943 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150244802 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132762043 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075819655 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167042002 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097274381 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165662138 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226421371 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082430723 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130994899 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121065858 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082271581 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132815723 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127644114 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111077204 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118718148 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222349606 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115469761 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204692202 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171147974 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139863642 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190735629 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101693227 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662477629 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103689669 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185666947 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145406757 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232818816 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122365507 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146235861 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136357154 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150101999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195403625 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131082852 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178228302 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18430533 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147297609 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080544317 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129675939 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137215058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116247959 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132312148 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139984596 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118503755 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125878322 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146847267 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177715994 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083591073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120880613 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188133695 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142746138 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194845857 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169763294 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109439787 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145610422 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167838116 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103945351 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149411523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211735065 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133270622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099073832 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106546339 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131652915 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204929408 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098245737 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21708955 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151774546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137217407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140318869 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147388395 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160280472 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135137296 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152373816 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120828592 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.13859774 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142850447 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109718478 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078499237 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131681886 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13960431 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123773728 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128322203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.118485435 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205001976 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072688341 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121549194 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104993823 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196418468 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23391106 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089372616 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108344278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146075235 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139257102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142817525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15223772 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106872618 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084081846 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108126643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11261622 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132752433 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141172071 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130435358 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137122718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224743692 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08591693 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249858492 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120175886 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107598449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.093917293 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080520878 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12098491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122908376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133353633 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102750979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228741006 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121849483 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.114301323 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094182537 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097490799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084533013 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157048143 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136439802 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148024903 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123691718 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086417303 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111264244 seconds)
  done (took 70.383471399 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12980194 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102021978 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.114462232 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.170138333 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142751092 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237656381 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.177570691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220293582 seconds)
  done (took 2.376580212 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068933147 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.114156973 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102186394 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114291999 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.087645234 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068297369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.290755466 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108293559 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066496329 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.112180809 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.116039316 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.088633661 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.465077899 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067202855 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094213541 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082272414 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06685845 seconds)
  done (took 3.181330539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423545676 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.580625398 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.445069968 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072808613 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.695746934 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088063197 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.011465563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.153748935 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070548816 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.407314628 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.736601451 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125454125 seconds)
  done (took 16.888216744 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074500566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068738157 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106866931 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083136109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09622192 seconds)
  done (took 1.512871857 seconds)
done (took 112.581046137 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079236013 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.339281997 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052776787 seconds)
  done (took 1.502292792 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081944046 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084722716 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107643422 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082275108 seconds)
  done (took 1.442760979 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073760734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075766909 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107720904 seconds)
  done (took 1.342541526 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.27431195 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161153185 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087269026 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082083213 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076848486 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101483882 seconds)
  done (took 1.346731014 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072335878 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074427718 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096305777 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075852786 seconds)
  done (took 1.413349315 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075395846 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052798518 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054801947 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078968843 seconds)
  done (took 1.348400754 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088694077 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.103628068 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079865867 seconds)
  done (took 1.354235729 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106490822 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109904932 seconds)
  done (took 1.301352069 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08122633 seconds)
  done (took 1.160583853 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094538953 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.136716319 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.152686875 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.134293874 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164700986 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134645522 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.111549768 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087469746 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.101640065 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11233549 seconds)
  done (took 2.316547117 seconds)
done (took 16.206320886 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077377361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.474535864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359513738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113794763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667103641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355516893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989495387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116403033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120239711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091836562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083195755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67173652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990478164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.432152183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977490655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.314684716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674942656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067813012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090653224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066964379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950808222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091360162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067182339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067971498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.671202919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370494065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091640377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.313155758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067601603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093528067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354089933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09163669 seconds)
  done (took 16.045665774 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069903283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140913311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073348229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082823114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094536501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069096135 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.095298555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068302026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150555104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067508763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10871446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067752292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.095148466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067914487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086533043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09240054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067957613 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068416735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092403424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068316353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109923975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067671716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068053613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092672679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067284378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103956231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068652317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068266111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092187496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069824834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09520155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068355655 seconds)
  done (took 3.786827385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113881451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149527058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073607339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126055417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112619048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094436129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.166933091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092794144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151996771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067885133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108204867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067890263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124622493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068409235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.111321128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068099694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068834867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091666772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067646085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092035091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085962282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091079654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068156155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068115772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.091705333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080116521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09167855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067827004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06769996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093746504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070649017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09182459 seconds)
  done (took 4.08288979 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07159766 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074350404 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105718967 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082326746 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093040518 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071362477 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072181644 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.093924487 seconds)
  done (took 1.755144287 seconds)
done (took 26.753739775 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077324812 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069289478 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09606537 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080952901 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096446674 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078390174 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066702255 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.097780015 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07556966 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072286788 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.099266553 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067219432 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.094699931 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066880077 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074380518 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091707093 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078946382 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095651183 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07839887 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07901833 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093377418 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076356282 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097831037 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078444698 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102919376 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078364725 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082169098 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097057186 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068645012 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093591472 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076016242 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083485548 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.093563593 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079438354 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092409057 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067369131 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067444926 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091566254 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079342922 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.097157123 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070367839 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.097800608 seconds)
  done (took 4.587959863 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087385789 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090337388 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109375668 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065050303 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094652219 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065406707 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.112748004 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062767741 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059022986 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112599451 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055619625 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058776498 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.087377018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053958375 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058632767 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056078862 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.085909442 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056536448 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05877584 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.083587477 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057670828 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053746892 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0847706 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063167897 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05588709 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.086494211 seconds)
  done (took 3.010946863 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074944331 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083166543 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111897619 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126355469 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.129213449 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077147348 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1030293 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086949452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109593688 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066819632 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071380392 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.120173889 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087014725 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.098582408 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067301759 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111360497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081855984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069207409 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.098368342 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090026826 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.109201696 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077230953 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116580822 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066405952 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094151312 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070775613 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.105532403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072742185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076400939 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096308386 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071065204 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093691817 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079042155 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071906024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093989225 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089392679 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101782344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0779278 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067830271 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096597501 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06800002 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112737208 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.110857728 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09180418 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07426276 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075141452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101996441 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067990368 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110376757 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077043502 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066617377 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.095494973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06730964 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092432737 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081056973 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069690433 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096931211 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077251921 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095553619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080286455 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071487107 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10858138 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067474253 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100306219 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066759753 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068236038 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091424276 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091323891 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067960902 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.132544316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068548768 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093083013 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076580876 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099765058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073162282 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067671061 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106863534 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077004403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.095117887 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075553607 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070640254 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095546224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087054054 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094202892 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068849559 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068006413 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098823917 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070078018 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093149549 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08057822 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067395604 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095154713 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084398931 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091873019 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06909544 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073384681 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.096886045 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067124246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104119315 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073053628 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068012194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101104596 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066962755 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095178317 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076933212 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072047323 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091529964 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072060753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098515499 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068511172 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068449321 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095372521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069291859 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102201795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073006846 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072251969 seconds)
  done (took 11.127806458 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.18804745 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.18222571 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070073788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.175543817 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076087961 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.105211066 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175601021 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095969257 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094057304 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067933854 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069156702 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128068628 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.122496306 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106201608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104056868 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067230456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11111615 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104409786 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179389583 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.172581993 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113028929 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07584259 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068893622 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.095324007 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069457367 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077294219 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110048054 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075956635 seconds)
  done (took 4.193423793 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080841522 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.126014222 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073320784 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087773167 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116651094 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068177424 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098365554 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068714098 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.105589399 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078932809 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092417041 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.0723928 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073717207 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102696283 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067670804 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103741333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077430861 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068858966 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.095779912 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072574535 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102315231 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080045349 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09693055 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066712347 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073503862 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092603479 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064590084 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.111089242 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068021609 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115004668 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066119252 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073519008 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.107040914 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068289104 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092858766 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.0708945 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07026442 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096727055 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069101003 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066494229 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.091844445 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0579469 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066929119 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106144747 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073569414 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.085254337 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073188376 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07277971 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097788354 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065345608 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096111155 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070513648 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070636066 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102491212 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071986625 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073059055 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097111812 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065652075 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100809937 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071176524 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06362649 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092001613 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072643821 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067750433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101146103 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071702012 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092799431 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070915253 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07208794 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099994659 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070635549 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069722905 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090440222 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070047319 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098350711 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072339685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071218968 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092319557 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067232505 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068232271 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.081640686 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067468132 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053570473 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096218328 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066122785 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066232115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0961323 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072765748 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106895249 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068321058 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099422988 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069103334 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066678583 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096257502 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063267998 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070553857 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108184181 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.10902844 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067715306 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065722453 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107895453 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072269768 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066700269 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081870838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074656469 seconds)
  done (took 9.683848225 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097672261 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092193108 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094820248 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082465732 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121024077 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092474207 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100667877 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073815379 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068948951 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110856019 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067763091 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102299597 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068010705 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076284817 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.121848411 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075132148 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095491662 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076383396 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072195295 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.132456092 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081980019 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107536423 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079639773 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094034554 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072634209 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079951884 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.121083261 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079125045 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104050532 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084247919 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079902321 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.121194601 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08480994 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097162884 seconds)
  done (took 4.234936859 seconds)
done (took 37.930660891 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.174098657 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.36901436 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.165753453 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.970603924 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.204676496 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.165516149 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.178830493 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.165269616 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.7151398 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.167424122 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.397169637 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.677235419 seconds)
done (took 59.468755346 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.243934246 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.302575417 seconds)
    (2/2) benchmarking "String"...
    done (took 1.434056034 seconds)
  done (took 3.848511136 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.565557916 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 4.982083135 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.421616188 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.166221925 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.166030867 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.471233181 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.662594714 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.911752627 seconds)
  done (took 26.892943883 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.177501778 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.489956603 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.109668489 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.107379669 seconds)
  done (took 16.998810719 seconds)
done (took 57.663025577 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.18269988 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.181451693 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.201742802 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.160090284 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.264285868 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.190381584 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.370270543 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.338107277 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.17702807 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.157502553 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.178411643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.167741541 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.171761427 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.327065851 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.177461722 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.170469393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.229495244 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.574092072 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.506844002 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.17968903 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.174626301 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.183084399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.176161269 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.182411922 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.174380712 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.170212637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.17320464 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.177484936 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.89596422 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.170623647 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.236906858 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.498547036 seconds)
  done (took 189.233500542 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.16844802 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.301458619 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.362209279 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.213623072 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.745819805 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.366405083 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.306951292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.780186643 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.181427562 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.194159223 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.463094862 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.168601081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.489099987 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.133367094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.189915923 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.236445277 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.34507533 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.477357234 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.194495097 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.443868893 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.171771864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.446351238 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.389509104 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397661963 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.221007935 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.291669536 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.173542041 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.198023448 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.362118579 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.321947908 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.194432665 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.177900056 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.657126617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.030085869 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.191929486 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.206774043 seconds)
  done (took 149.308475092 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.408523916 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.168781247 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.16947753 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.170805156 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.170112653 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.19571332 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.17058074 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.612548791 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.614930642 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.656440421 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.491030756 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22887229 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.170755951 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.299179703 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.173666786 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257497522 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.184453979 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.171982827 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.185643465 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.197053024 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.171430707 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.172013652 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.616132072 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.185809641 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.359496348 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176932211 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.171884834 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.197149824 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.55955581 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171294446 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197415456 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.47348267 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.209699468 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.172026904 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.367743204 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.920865281 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274431468 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.173496491 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197629386 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.172755651 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.431740195 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.171253787 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.172449716 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.175541443 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656342982 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.171783603 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.615796061 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174671627 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.967561688 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.172078178 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.172545758 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.312697253 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.435386924 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.173023941 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.172172279 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.17473548 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.173014629 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.172717725 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.198821278 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.306947048 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.267249024 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.173318004 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.176516274 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199138691 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.172629035 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.172203693 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.334209555 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.174029759 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.767506964 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.228763531 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.280284864 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.172925985 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.61986363 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.173786186 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261424887 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287302665 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.174624598 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.174716608 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174076831 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.174158432 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.274565837 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.17486426 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.512966385 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179745056 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.175489743 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.231648419 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.262748248 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.174547415 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.398318959 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.177162954 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.175305618 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.777798207 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261589085 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.174951958 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.174545894 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.174592026 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.512053408 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.618790222 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.238942042 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.177774644 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.301485961 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.177581426 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.522861398 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.612029851 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.695116923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.178009238 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276952173 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179992026 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.177176639 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.174763474 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203669804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.175266596 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.232949078 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.177501429 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.565951094 seconds)
  done (took 339.013194339 seconds)
done (took 680.077811101 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868135012 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852092521 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.949050466 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.851574586 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.837250213 seconds)
  done (took 10.47821299 seconds)
done (took 11.59812155 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.341671032 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.337487508 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.226059032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.338821718 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20113861 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.352728024 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322251925 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.196394018 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.266231058 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.239367191 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.266035153 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218778039 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200161673 seconds)
  done (took 17.628418093 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.461292407 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.449360667 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.242386401 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.466184307 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217443646 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463953073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360857545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.365113625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353764065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.192055136 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191006232 seconds)
  done (took 15.886207883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460587478 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.452488375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244551878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461537185 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219090656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465110827 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360761377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.367118349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.356865779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.192061866 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190467388 seconds)
  done (took 15.892624446 seconds)
done (took 50.527854799 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.186711218 seconds)
  done (took 2.308320472 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216319401 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.381428223 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.197423233 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.190783121 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.188061207 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.188307266 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.191048916 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.187303762 seconds)
  done (took 10.864202065 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.185737385 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.184696537 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.185982367 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.185048716 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.183642895 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.183629548 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.186886668 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.184461815 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.186638052 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.186782443 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.18720025 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.186829221 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.186295728 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.187161295 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.185454549 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.184400943 seconds)
  done (took 20.094443447 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.186414348 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.184809088 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.184872743 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.185111572 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.184106303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.184693883 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.186652026 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.184268592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.185476547 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.185897033 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.18611611 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.185538433 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.186504445 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.186019096 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.18538497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.185902534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.1853297 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.18518988 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.189700428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.185239507 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.186297479 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.18565241 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.185641676 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.186830436 seconds)
  done (took 29.584122728 seconds)
done (took 63.972425587 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.937506419 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.568730572 seconds)
  done (took 8.630831384 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.189252337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.188793573 seconds)
  done (took 3.504332888 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.18892159 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.189169288 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.18843086 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188278207 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.188511941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.187626547 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.188465119 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.189682861 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.188892542 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.188139624 seconds)
  done (took 13.011727797 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.188351256 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188940501 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.185920228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.188858491 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.188835214 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.186148075 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.188185414 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.188284958 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.188009812 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.187223498 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.1889559 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.187182022 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.188719438 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.187012542 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.189180648 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187049058 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.186950278 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.186832707 seconds)
  done (took 22.506653694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.189273605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.189206293 seconds)
  done (took 3.503547548 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.187084803 seconds)
    (2/7) benchmarking "second"...
    done (took 1.187120711 seconds)
    (3/7) benchmarking "month"...
    done (took 1.187294871 seconds)
    (4/7) benchmarking "year"...
    done (took 1.18758378 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.188129575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.187230427 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.187031714 seconds)
  done (took 9.437703061 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.19074916 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.364986098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.441867762 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.779801853 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.1911315 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.194268593 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.039996405 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.193432334 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.196661593 seconds)
  done (took 13.719272799 seconds)
done (took 75.438858652 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.138264164 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.182054694 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.927779138 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.193876332 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.200645587 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.481620785 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.184952824 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.299982793 seconds)
done (took 36.736049412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.186202727 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.870388112 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.872163343 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.185335264 seconds)
  done (took 11.055374864 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.177694629 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.994692365 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.179209276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.118250467 seconds)
  done (took 17.598311964 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.726591855 seconds)
    (2/2) benchmarking "read"...
    done (took 1.513967471 seconds)
  done (took 4.368298427 seconds)
done (took 40.335818294 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192388202 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.19127521 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.188734869 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.189612858 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.191525365 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.188895816 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.18922304 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.192435324 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.191242967 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.192101472 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.192009877 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.192779015 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191738084 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190089655 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189095194 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192312259 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.190006929 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.189711149 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190015724 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189331386 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193294467 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.190124164 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.190357541 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.191847127 seconds)
  done (took 29.709786684 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.192619545 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190965806 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.192987843 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.193385216 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.19007838 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192266907 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193256288 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.191100346 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.192591837 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192625521 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190231334 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.190791285 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.193434193 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.190446661 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194192502 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.190417377 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192381538 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189587951 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193075749 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.1903464 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192310269 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189649033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19021238 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193166656 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.182033556 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.182262112 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.184969734 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.183267955 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185145601 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.182990452 seconds)
  done (took 36.832638837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.191944484 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.182758382 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.177210752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.176526982 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.176735467 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.177504188 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.176984196 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.176897267 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.177348612 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.17629429 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.168624444 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.168359263 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.168363437 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.168947665 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.16896643 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.168792221 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.169911776 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.16956013 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.166189381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.166036419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.166175382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.166349356 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.166237993 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.166059872 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.166065704 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.166627807 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.167013263 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.163799666 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.163776066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.164866541 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.163831709 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.163788822 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.163824521 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.164481683 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.163642161 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.16519411 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.166901344 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.168965203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.162237687 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.162470655 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.16320895 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.162882058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.16323283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.163622196 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.161947529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.161210918 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.161302275 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.162054766 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.161857859 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.161155579 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.160678606 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.162137861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.162580641 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.160553684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.16186553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.16152782 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.160156362 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.161249906 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.161854865 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.161359773 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.161034124 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.162496907 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.161526757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.162294283 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.161721318 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.16196352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.161679385 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.161733892 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.162554721 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.161861305 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.162126363 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.161604067 seconds)
  done (took 85.080364386 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.162223143 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.159638589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.159090194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.160790536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159595839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.161375716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.158388489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159468239 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157874834 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.160127498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16050475 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.15783746 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158043099 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.161859283 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157325258 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.155440005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.157587513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155187979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.158566481 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.158473614 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157992746 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.155565545 seconds)
  done (took 26.594310018 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.156368614 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156449089 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.153443694 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.156450224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15404876 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.157473305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.156608825 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.157051135 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156591968 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151574944 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151714607 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154840632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.151768297 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151661389 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151922559 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.15197045 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15557163 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.151667347 seconds)
  done (took 21.874999845 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.151532804 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.152541752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.155004623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.151653382 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.152513215 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154654709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15342092 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.154407745 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.153757965 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.151458671 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.154463358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154071585 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.154551663 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151819556 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154381515 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151386745 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.151714884 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148167644 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151925363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149280011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.148906408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.151628653 seconds)
  done (took 26.447819775 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.150988228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.149906475 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.146469426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.146660794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.146402791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.148613573 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.149175784 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.146664329 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.149226755 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.149589477 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145079711 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.147268465 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.14384918 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.146065633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.14465498 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144884833 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.147603096 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.145983328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.148308373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.144253007 seconds)
  done (took 24.032701974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.14802611 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.150238459 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.149887936 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149419643 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149281504 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.149999331 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.149740739 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.149100274 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149977881 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.150069196 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.149797074 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.149541762 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.15007513 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.150188718 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.150201716 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149987672 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.149454694 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.14973172 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.149771663 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149480406 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.150685647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.150552612 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.150122912 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.150936688 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.149840514 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.150181919 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.150135759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.150313185 seconds)
  done (took 33.283910015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148920025 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.149579459 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.146700033 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.147715497 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.147184219 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.146584341 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.147482341 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.147688231 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.149742701 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.147276929 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.14976991 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.149499918 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.149851028 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.149969854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.150296511 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.150614301 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149238402 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.148512217 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147752513 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148253919 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.151425507 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150645807 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.15102817 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.14766029 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148252245 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.150560352 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149135053 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.148771773 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151007028 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.148560331 seconds)
  done (took 35.558637939 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.168977524 seconds)
    (2/2) benchmarking "in"...
    done (took 1.169730842 seconds)
  done (took 3.428726762 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.14826109 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.150928662 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.150742461 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148689626 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.14936692 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.151112215 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.151359341 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148883651 seconds)
  done (took 10.289621584 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.15233242 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.151708566 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.152364753 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.15160078 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.154159251 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.152667422 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159272453 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.167572453 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.155740175 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.154803861 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.15882264 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.161107536 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.158904002 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.154110225 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.154739424 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.156463772 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.153308992 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.153848145 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.15451434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.154341158 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154343444 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.158446422 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.157764857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.151508497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.155027277 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.166733042 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.162528793 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.154880388 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155039901 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.160717694 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.154433046 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.151714329 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.155119738 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.154783603 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.154742479 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.154663124 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166294702 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.170970184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.164357246 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.15581022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155029209 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.152227831 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.156900474 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.158964957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156711757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.156345772 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.156272956 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.152523579 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.155216026 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.157234058 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.15827389 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154635694 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.152308207 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162176997 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.157951961 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165576043 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.170682604 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.158530474 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.162621424 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.167583631 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.171581618 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.162429862 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.158999308 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.156211042 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165518605 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.176842397 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16590298 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.16719552 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.153993725 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.155584655 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.166679303 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.171882422 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.165222384 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.157134081 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.158008209 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.156553294 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.157984494 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.15695931 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166652013 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.174742426 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.157369533 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.157614802 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.165999679 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175651847 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.15704379 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.158478122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.157818677 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.158199248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.159471298 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169559526 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.172476149 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.158276888 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.157158678 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.157848085 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.161273059 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.15872304 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.158038334 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159428511 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.1551298 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.158655245 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.158825091 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.160865455 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.166360279 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.158106812 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.158889302 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.168560174 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.159154471 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158724916 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.165067999 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.153729901 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153733724 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.1548398 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.161435533 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.151258555 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.15613976 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.160878111 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.152743323 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.151516594 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.149447343 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.149498331 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.158317078 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.173171447 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.149519262 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.149624195 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.156978041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.15456356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.146867145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.150436681 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.147086859 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.14416429 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.144075774 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.148968205 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.147145303 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.148521313 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.145402735 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.14850696 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.142993818 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.146278824 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.145745205 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.148039568 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.148108934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.146840068 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.148886356 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.150167489 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.145726762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.148071257 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.155230823 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.147459419 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.148057112 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.147491686 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.143966586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.146414185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.148522858 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.146580962 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.147048079 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.146359224 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.146264392 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.146028866 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.146755633 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.146474496 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.147893213 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.147103097 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.149548055 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.147467077 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.154055038 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.146176772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.144319334 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.147240388 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.14723135 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.147403652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.147048493 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.14550967 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.148819109 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.153324136 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.14755851 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.148002581 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.152986933 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.147472097 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.148212491 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.148438318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.150949503 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.154403171 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.148364346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.157881476 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.148885859 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.148050921 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.1483955 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.14911909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.148559573 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.148843475 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.150661689 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.154236769 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163537081 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.156877946 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.150247591 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.151465293 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.15047691 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.15123805 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.155573542 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.148758148 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.148813376 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.149170801 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.147790091 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.149123179 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.151624029 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.148917764 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.148732491 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.148147712 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.149798766 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.149584008 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.150367754 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.151288287 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.152175546 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.146341785 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.149490129 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.150028283 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.149164235 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.146933112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.149057591 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.149211073 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.149417891 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.149558412 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.161700196 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.148112803 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.151656142 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.151948379 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.150035527 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.149084877 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.149989927 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.152584228 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.150596592 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.159393732 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.165156598 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.151954706 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.158739055 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.164908604 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.150071955 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.154982336 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.150227624 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.14837016 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.152930876 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.157125153 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.150932119 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.151532525 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.151420601 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.151829294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.151668417 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.160533168 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.14851449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.150885593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.151799756 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.154804209 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.148425722 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.153292572 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.15283372 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.153494675 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.154812899 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.151908808 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.151264485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.154512009 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.151936485 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.152543879 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.151892065 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.154844035 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.15767039 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.159548794 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.153678624 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.156455564 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.153244199 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.154882479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.153771795 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.152243095 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.153449552 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.167285027 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.159370291 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.162136459 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.155537401 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.153246829 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159856091 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.154169959 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.156700735 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.153077639 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.154020694 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.153924686 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.152576571 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.150021271 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.155249956 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.153375209 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155115171 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.154866333 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.155936316 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.154067369 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.153054952 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.153331512 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.1544501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.154136752 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.153240471 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.153289703 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.158572951 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.156001984 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.15404065 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.153994275 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162914379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.168825246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.155708488 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.153688171 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.153939573 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.153886603 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.155530453 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.154596844 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.156543906 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.15999062 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.157561242 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.162980134 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.155967641 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.164567993 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.15520664 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.157486671 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.160265185 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.152193705 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.153889947 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.156159548 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.154799182 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164621425 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.169861168 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.155991861 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.158204641 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.15539862 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.155322044 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.155670876 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.155259555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.155796411 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.155432234 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166653954 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.170720932 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.159126068 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.158655901 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.153206292 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.156625031 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.156487006 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.154965454 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.162450387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.156151313 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.157619318 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.155376069 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.157089497 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.156163521 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.156511842 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.156343144 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.154031008 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.15664027 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.165764435 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.172004176 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.159624386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.156750925 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.169791243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.157070609 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.166302724 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.170761475 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.158680527 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.157071282 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.157046882 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.160593564 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.15786669 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.159605822 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.157060381 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.158272695 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.159526608 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.157924393 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.162153788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.158378431 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.158202634 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.158557692 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.167135657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.17778069 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.159363502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160493777 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.155358915 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.158884346 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.161152884 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.15730756 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.157019724 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.160110603 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166287681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164403278 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.158456476 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.15821134 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.159956544 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.159039772 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.157541471 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.158956685 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.158764778 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.158936926 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.161042742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.15868436 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.165194396 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.158635724 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.159742878 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.161428268 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.159788979 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.170928467 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.159355897 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.161623326 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.158849907 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.158646785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.160395019 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.160264815 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.159869968 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.160920076 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.159834796 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.160864096 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.165005556 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.163909771 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.163216591 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.159531892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.15949658 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.160976146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.161622213 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159834232 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.160162674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.160019661 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.161061676 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.159894916 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.163008906 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.159582889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.158681506 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.161270335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.16034026 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.162123391 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.166110536 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.161161952 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.159420774 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.160360389 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.160668412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.159319562 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.162402701 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.173840919 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.16440362 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.16938183 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.16831389 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.164656494 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.162156315 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163537954 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.168894283 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.159925674 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.16308967 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.161939493 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.165177442 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.162381527 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.164537842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.161773381 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.171013556 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.162432493 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.162615794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173081666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.1776688 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.162446227 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.163719268 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.165832165 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.163152835 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.159316369 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.162711024 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.161791227 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172580663 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.180340118 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.162965445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.165873925 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.16129799 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.164256079 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.165154404 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.163057622 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.163708946 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.160100898 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.16309069 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163264174 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.163532903 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.16001874 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.163058542 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.163688208 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.165101751 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.168501784 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.159921552 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.166391042 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.164271198 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.164614914 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.164171827 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.163759237 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.161039717 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.160706954 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.164656379 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163429882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.16528655 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.167209023 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.164400731 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.164743165 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.164099261 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.163680621 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.167030279 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.172933535 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.169835683 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.161660778 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.164506291 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.165150104 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.168085206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163787098 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.164353767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.165530346 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.167572226 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.16447299 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164151623 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.164079802 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.167284477 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182262164 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.177964587 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.165814295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.165601484 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.171944935 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.165229097 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.162641813 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.165542855 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.169372781 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.16807266 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.171768114 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.165677678 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.174533411 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.180066885 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.165746982 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.168861851 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.168357151 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.172883238 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.169936727 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166194722 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.166528683 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.170887429 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.182042614 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.166325013 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.175056337 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193550008 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.180720662 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.168780267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.166420066 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.165442688 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.165858535 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.169345035 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.16739624 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.166429501 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.166437153 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.166591713 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.167139672 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172987785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.168352026 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.166635356 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.167460227 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.168308764 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.170660474 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.163797811 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.167265636 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.166279899 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.167119854 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.167282989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.168241007 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.168318378 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181458897 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.179091257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.167376868 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.168080807 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.164428382 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.173341465 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.169841657 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.176212079 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.173298418 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.168168491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.167015368 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.169861662 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.167658624 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.165279155 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.168780241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.168673828 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16751572 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.164321183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.182589219 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17477203 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.175355912 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.170946036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170136884 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.169827756 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.171286697 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16867582 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168333017 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.172507473 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.169901358 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.171458842 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.168003037 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.168446505 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.171964278 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.173820766 seconds)
  done (took 692.001083615 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.16605605 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166972196 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.166212976 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.166900932 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166609176 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166273558 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.16667799 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.167300418 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.166402826 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.16599452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.166881422 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166191181 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.166997881 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.167332825 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166879362 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.167123376 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167557885 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.167308216 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.167603558 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.167028298 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.167556598 seconds)
  done (took 25.611430054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.170207392 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.167982445 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.167715315 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.170158472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167442236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17116848 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.167568086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170074585 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.170156084 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167805437 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.170950744 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170307853 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.168323355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.168466143 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168737779 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.170998796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.170500183 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168179222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.170390325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.168593316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170879767 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.168595097 seconds)
  done (took 26.833992358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.171634254 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.171758389 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.171144999 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.168784615 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.171059856 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.169225469 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.171618422 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.171415441 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.171832049 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.173674427 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.169975484 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.172088607 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.176407748 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.174760048 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.17619924 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.171944073 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.315309552 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.172416785 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.17236414 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.172065746 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.169338655 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.180277292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.169664173 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.170174993 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.171144091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.172021599 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.17272294 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.172061528 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.173343066 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.173250918 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.175302283 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.172482346 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.172500414 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.17512179 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.172768741 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.173844148 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.176180377 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.173685464 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.170892458 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.173083777 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.182081358 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.189619477 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.174581433 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.182340146 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.173504297 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.173782336 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.176247306 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.17906995 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.170676571 seconds)
  done (took 58.758141468 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.172325651 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.173338379 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.17109357 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.173843597 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.174158808 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.1735283 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.17538355 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.173135463 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.171435822 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.171380694 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.174882457 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.172032004 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.172060973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.175099018 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.174855892 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.17235143 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.171728898 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.171825134 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.17269798 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.172322145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.172741134 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.175423893 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.175047892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.172694997 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.174641231 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.171691438 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.173448947 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.17550064 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.173205404 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.172372745 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.174872441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.175867189 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.175180887 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.173111577 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.17290463 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.175485367 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.176099933 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.173773145 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.175334127 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.173014211 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.175781735 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.175907359 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.175478225 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.175556504 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.173217519 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.173556419 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.172924737 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.173031103 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.172987845 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.175648653 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.176247184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.173156132 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.175933454 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.173205384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.176205596 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.176040173 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.173398215 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.173333375 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.175560689 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.173658474 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.173535089 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.176027228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.174051631 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.176069733 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.177017064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.17447294 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.173619826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.177204805 seconds)
  done (took 80.947928371 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.178037357 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.177126778 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177149746 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.177176387 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.176863563 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.17807137 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.177376289 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.177719229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.177574215 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.177025604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.177591069 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.176993048 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.177778028 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.178239495 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.178895429 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.178218666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.178514077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.178021586 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.178722379 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178114023 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.178048583 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.177866025 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.177911305 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.177527691 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.17849112 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.177749384 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.177819975 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.178721479 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17815493 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.178352273 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.179518655 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.178839392 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.178312261 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.178294663 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.179143872 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.178946794 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.179017476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17981007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.179593192 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.179181649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.179250171 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.179445453 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.179254143 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.18012555 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179065142 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.179708016 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.179153089 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.180026968 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.179200538 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.179059082 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.180304279 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179742809 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17924063 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.179542157 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.179861592 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.179420253 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180085887 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.179741977 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179392475 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.180197021 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17986877 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.180487895 seconds)
  done (took 74.195956299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.179668319 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180090175 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.177582091 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.177597012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.179762422 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.177155407 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.179750244 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.179763389 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.179828524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.179988594 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180181886 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177961142 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177821755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180619513 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17781739 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1781667 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17801749 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.177752441 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181105308 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.177669224 seconds)
  done (took 24.695980347 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.178959254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.181918782 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.178455023 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.178662296 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.180900122 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.178736176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.180598892 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181050053 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178000987 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180621705 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.180996507 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.181445031 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178639046 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.178981646 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.181022744 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.179001154 seconds)
  done (took 19.996731986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.179197631 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.181799186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.182136261 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.182539424 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.179200956 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.179423441 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.181296983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.178937112 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.179810024 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.182457275 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.18278756 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.182827858 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.182834547 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.182904439 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.179534208 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.182949782 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.179677538 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.180307873 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.182922129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.18305317 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.181771868 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.180270192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.183460183 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.183017253 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.180383987 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.18110605 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.180435167 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.181638473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.181394018 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.183730337 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.180666316 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.181429191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.180682589 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.181063109 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.18385746 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.18088633 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.182550244 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.183479674 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.184038654 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.183646676 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.183565933 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.181350235 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.183578882 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.183245701 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.18157785 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.183564315 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.181211046 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.181889322 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.181815386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.181417352 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.184077561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.184912588 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.184080161 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.184432816 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.184804045 seconds)
  done (took 66.132320329 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.184344447 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.184336961 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.181557795 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.184694449 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.185158563 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.182097952 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.18458606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.181875497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182477748 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.184523623 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.183102245 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.185615748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182056335 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.184878501 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.183189158 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185058272 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.18234544 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.182220722 seconds)
  done (took 22.426362682 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.183014409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.182022136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.185724878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.182540838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.182594724 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.185886023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182906822 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.185546528 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185161354 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.183942725 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183646694 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.186225417 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186487902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.186075602 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.183521711 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183397992 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.187327813 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18655344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.183580101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.184019789 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.186206373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185910924 seconds)
  done (took 27.185157012 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.18573601 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.185699463 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.202734345 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.226461447 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.212144016 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.184511567 seconds)
  done (took 8.320703366 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184870758 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186713007 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183890854 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187993551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186953539 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183918197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184309487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184522401 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186635479 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184926579 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184421763 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186572127 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186823506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.184858383 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187525197 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187309801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185283391 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184736533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185868154 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187819422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185199552 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187440103 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1852827 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184875768 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185057292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185280442 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187351291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18499926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185362336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187847755 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188774464 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185674223 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187663486 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185977929 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188819627 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188729789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186677733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188257998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188042496 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185194503 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.188759135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188884329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189040335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185861249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188522493 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.186303239 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.186656943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186122109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18658819 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189160405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189276929 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186755641 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189642259 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189714531 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189341164 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189762432 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187635356 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187530738 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188787858 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18700114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18734591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189893511 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18662643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187203524 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190007392 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187461126 seconds)
  done (took 79.464046559 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187020201 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.187741603 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187838018 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18976145 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187955456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187724228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188323477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187625351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187330831 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187534974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1904002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187790229 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187829918 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188422748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188855625 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188228753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187548538 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187786016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188318282 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191882856 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188001868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18793575 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188726661 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188876766 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189160189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191077818 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188761152 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188195695 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188400217 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190060023 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188448619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188569965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188322625 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.18830086 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189071115 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18857499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188794379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189700728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189307232 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192153386 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189282079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191908886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188690063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189624837 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.190230837 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189097951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18918389 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189590862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189750991 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190201497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190749625 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190283408 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190227449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18962272 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190919917 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190702605 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189893563 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190133973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189753731 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192507049 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.190703155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189746831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19303621 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19023732 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190345078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191044244 seconds)
  done (took 79.622757709 seconds)
done (took 1620.454795449 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.244462774 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.188387757 seconds)
  done (took 13.562890926 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.354388695 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.306445865 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.191696202 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.198959175 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.192359468 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.190050972 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.1975673 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.192480476 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.192847085 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.191944677 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.19221215 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.377748757 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.247993172 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.192818766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.19232797 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.285208595 seconds)
  done (took 40.829490338 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.216011552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.200172241 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.29706662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.213719844 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.22108796 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.361340533 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.249257684 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.19975714 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.344806392 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.235244961 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.546851094 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.220266179 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.199388363 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.157763872 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.21458314 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.359536014 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.41396703 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.552077536 seconds)
  done (took 27.334605657 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.577960874 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.213204885 seconds)
  done (took 8.925596463 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.191296901 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.201681324 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.225193173 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.207107398 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.224940867 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.237066264 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.23769177 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.253024484 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.227490771 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.222231352 seconds)
  done (took 63.364096038 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.215959165 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.200636496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.200701993 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.198348029 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.192475578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.190739553 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.199031538 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.192855599 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.2884211 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.310339373 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.212422219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.206687713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.200402164 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.200665003 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.197161784 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.232994459 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.351293106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.196641851 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.196968966 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.205829697 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.200544596 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.280745736 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.235801003 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.197283303 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.308359855 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.277833971 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.204447861 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.206247682 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.335670158 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.198297329 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.199828193 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.201275092 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.201710485 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.745303799 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.61575993 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.208330943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.222637098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.209438346 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.198333841 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.322003835 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.201740511 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.208240738 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.194161248 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.592397867 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.353012993 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.301097506 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.267984321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.201530913 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.203214312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.259210171 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.202298084 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.203083598 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.228989398 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.91537662 seconds)
  done (took 102.429681306 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.222119241 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.681710859 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.362376071 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.215702901 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.93647446 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.827889077 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.194054953 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.439530688 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.217804288 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.196553744 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.521102789 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.652277914 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.197661156 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.214060581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.830763614 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.258879101 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.197069033 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.927942593 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.198751651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.196361145 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600409823 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210621092 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.196305937 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.358208396 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.232885282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.61585895 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.42823219 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.600484869 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.198844207 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.196204545 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.615679554 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.198367008 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.195377172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.196474462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.450204004 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.508168496 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.489956801 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.198021039 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.2019781 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.200400208 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.216590737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.614170141 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.498220021 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.197106468 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.196710526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.61899013 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.196149865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.202492653 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.199093961 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.391404261 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.912195783 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.196793644 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.432234286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.198270409 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.452643824 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.208581871 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.242609282 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.64681181 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197510628 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.241320001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.200384767 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.197937971 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.203108986 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.202332305 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.201288355 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.503975056 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.295763208 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.202891237 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.504473858 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.612399578 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.197757294 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.676273647 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.070823714 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209121263 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.273147185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.202094411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.734269804 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.645335368 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.200202393 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198578697 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.490231973 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.198752169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.500877827 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.211697192 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199581322 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624786351 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.218784865 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.266028702 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.199443269 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.204179332 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.815130198 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.203979379 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446698046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.263934255 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.19851204 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.199450227 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.231399427 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.203492439 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.199563761 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.202638276 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.679639212 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.203233179 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.486450494 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221399457 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202952017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.206147079 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.202845435 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.199987163 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.410657791 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.682534484 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.209142701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.199869967 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.199645801 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.20123103 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334480926 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.199941978 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.464211588 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.199255346 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199964967 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.201691045 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.872593325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.2008265 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201085246 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.204114126 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019194981 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.406332087 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.216101298 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.211967056 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201201886 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213449665 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.38009525 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202500627 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.278233092 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.206105377 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866793875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.241817225 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.211986832 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.575546873 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.203194834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.036516831 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.226433616 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202039273 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.495662827 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.461978628 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.231854889 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.200821115 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.217232807 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834135842 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.246692032 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.340958351 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.216865603 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.218369089 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.397538292 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.562841685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.202187587 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.772395845 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.202541386 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.408366771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.203298279 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.508508356 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.648398663 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.202449369 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.211409077 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86055434 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870845071 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.835456385 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.205465525 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.517496033 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.167090466 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.656178816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.202876047 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.203748884 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.638538672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.205220777 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.207118287 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.20306446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.202852467 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347054484 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375783492 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.071968052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.209766937 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622343521 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.212195862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202796288 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.207614237 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.207022812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.555331915 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.275348983 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.206640263 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.205499367 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.204126737 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.21340287 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.634582124 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.086928546 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.206817107 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.355640253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78847618 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.204563317 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.206820363 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.867639959 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.425018745 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.671883888 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.231933114 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473027839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.213679774 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.24232663 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.879330989 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.22696764 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678451515 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206126459 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.204637158 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.756692557 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.205410523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.54914869 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.205376559 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.206749919 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.690283032 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.205319841 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.205580662 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.413767175 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.209419236 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445404084 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.207126502 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.247347528 seconds)
  done (took 1078.713919493 seconds)
done (took 1336.290219047 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.205857126 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.205667301 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.195052228 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208243007 seconds)
  done (took 25.964187528 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.215001219 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.211739582 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.213401037 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.211951856 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.214373537 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.211885869 seconds)
  done (took 8.427071236 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.26463838 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.208944725 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209605754 seconds)
  done (took 18.832714035 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.404557176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.3488175 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.534221414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.142403788 seconds)
  done (took 9.57951249 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.212883535 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.213077511 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.213102707 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.215816156 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.216295414 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.217494034 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.215572017 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.215400454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.216799399 seconds)
  done (took 12.084918466 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.70115156 seconds)
done (took 80.739019884 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.873133932 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.261042141 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.219660034 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.034220981 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.207824358 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.235820848 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.72360025 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.915544065 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.450801442 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.805288456 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.543348152 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.505725715 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.714179931 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.265706095 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.198119901 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.421734013 seconds)
    (17/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.390486637 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.252906329 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.202279523 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.240256445 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.212155699 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 4.264005546 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.580719707 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.412512861 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.200744139 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.376987733 seconds)
    (27/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.525635687 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.434321778 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.887192087 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.276095085 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.744348252 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.809409442 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.642094676 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.212720117 seconds)
    (35/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.216581328 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.751670353 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.748895311 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.263245624 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.621282903 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.231327091 seconds)
    (41/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.501204828 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.555249799 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.201930695 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.389010694 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.321029167 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238956566 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.534441447 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.630583681 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.295278495 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.033932158 seconds)
    (51/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.292308266 seconds)
    (52/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.416233813 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 5.175700774 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.410594297 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.911116316 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.321902519 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.474586731 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.880287137 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.199271263 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.326572461 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.218309978 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.276909569 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.336881011 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.318653734 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.239446946 seconds)
    (66/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.346867848 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.914902372 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.239244015 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.214748383 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.271566436 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.232250106 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.214860953 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.616567027 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.242339323 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.231025177 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.972434319 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.350543675 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.992795529 seconds)
    (79/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.27920822 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.210678113 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.34255944 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.751481005 seconds)
    (83/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.544969214 seconds)
    (84/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.361256707 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.319670939 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.261183316 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.502662122 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.316843017 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.609386754 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.216342934 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.341045156 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.219381168 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.223569297 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.236025038 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.420649674 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.300905887 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.215914782 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.327034547 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.198050573 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.020882409 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.593184774 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.438913029 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.289016792 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.644162913 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.305765444 seconds)
    (106/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.47920405 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.719047541 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.722640166 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.028617151 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.972950075 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.215846076 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.201995473 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.442016561 seconds)
    (114/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.242650704 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.408640686 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.228704399 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.22961975 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.236751052 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.961483371 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.302228257 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.605738353 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.722782188 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.563247293 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.812043924 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.608712264 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.926442233 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.721151566 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.240244167 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.202409316 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.496393987 seconds)
    (131/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.223024438 seconds)
    (132/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.227910746 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.486465949 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.889250415 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.47617676 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.519854239 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.205747811 seconds)
    (138/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.939801461 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.243382069 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.719343508 seconds)
    (141/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.01143099 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.364654499 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.217433292 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.321213323 seconds)
    (145/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.341843531 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.267665243 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.472137406 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.610723023 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.987608926 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.232167707 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.304911973 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.910212146 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.2445742 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.502478574 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.22042731 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.258972158 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.230334829 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.398853801 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.751419822 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.7256539 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.670270852 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.670437108 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.243655472 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.246716137 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.651603771 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.215430164 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.22247751 seconds)
    (168/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.245077857 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.418287415 seconds)
    (170/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.342985147 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.24451651 seconds)
    (172/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.889669954 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.457247228 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.567847636 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.243625804 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.970013037 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.230173766 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.521783287 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.762713536 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.269041019 seconds)
    (181/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.327517558 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.461955901 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.906232177 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.204621579 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.399208501 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.736935384 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.907970404 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.219822222 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.246566669 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.204412934 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 6.246398914 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.404295412 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.236710361 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.261798656 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.244413533 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.614716571 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.932273141 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.99058807 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.317365652 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.220278306 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.223482482 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.066530811 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.418007022 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.807213591 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.377079396 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.036946802 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.305705344 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.278262072 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.221191399 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.223467278 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.404143179 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.207171621 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.716440039 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.22507921 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.255986217 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.516023104 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.248511936 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.782416413 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.439508613 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.213251096 seconds)
    (221/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.223285134 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.615583477 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.331539961 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.342287871 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.745720741 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.354649717 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.354760459 seconds)
    (228/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.28067939 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.978190851 seconds)
    (230/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.560053496 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.247881075 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.056795816 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.222135091 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.259647539 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.319877935 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.272110344 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.208334164 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.26407393 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.209294894 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.268948944 seconds)
    (241/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.339914596 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.230665414 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.824653358 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.663064241 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.222952634 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.307436478 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.223863806 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.504285129 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.211729196 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.997906439 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.330445388 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.287191668 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.350875372 seconds)
    (254/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.306049282 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.344271796 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 5.457125794 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.67269597 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.927321854 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.838719305 seconds)
    (260/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.64689217 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.415884907 seconds)
    (262/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.877605514 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.225047382 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.247635255 seconds)
    (265/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.471802096 seconds)
    (266/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.195025701 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.813124465 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.252915549 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.334353347 seconds)
    (270/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.566498129 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.610007892 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.211906626 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.419369245 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.320972013 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.333242704 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.594800111 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.069924744 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.495835311 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.399331715 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.261662263 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.309648784 seconds)
    (282/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.564301927 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.298366226 seconds)
    (284/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.306271634 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.226258003 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.308020043 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.307614893 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.342300369 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.445409795 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.252802823 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.757555595 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.401265824 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.566597004 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.76711268 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.800127065 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.22654989 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.226516035 seconds)
    (298/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.236340492 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.207573297 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.268132955 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.219803298 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.350875688 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.248173331 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.553475644 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.377615571 seconds)
    (306/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.332540371 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.548703692 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.469781405 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.478612356 seconds)
  done (took 873.930325418 seconds)
done (took 875.082000831 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.263277789 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.256302418 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.239986465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.262102769 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.352511291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.268590903 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.251110035 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.243276258 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.288056747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.289997859 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.239450005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.267852153 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.242274078 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.240785029 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.241074717 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255245907 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.136386732 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.241113042 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.259569151 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.251362894 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.257286754 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.240043294 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.293280231 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.269108728 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.245060021 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.244107549 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.244470323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.259848991 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.353617288 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.245149955 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.245039958 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.253546052 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.138244736 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.240667455 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.237056202 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.262207217 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.253670551 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.251318292 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.246059638 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.275633153 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.494088452 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.242205526 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.243864104 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.242273393 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.244341322 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.248642688 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.24380732 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.249635944 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.255760194 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25743149 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.485160094 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.25820369 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.245976322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.244406346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.254465775 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.243308916 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.246823289 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.259777414 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.262776503 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258662545 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.133703842 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.248324695 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.246260051 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.260301972 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.251453572 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.526181868 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.240080306 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.247681744 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.497775823 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.249709929 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.525315768 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.251762699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.244273799 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.258131372 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.275463065 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.141973321 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.239526638 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.243828404 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.25120523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.242064671 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.254589094 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.257264283 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.249301544 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.245489511 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258515042 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.272856802 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.255474388 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.245214296 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.254235838 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.264583868 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.25194234 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.255742541 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.24834943 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.24195115 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.254955087 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.248458267 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.248614367 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.248239601 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.250011259 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.255668151 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.499769264 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261720373 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.24260869 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.242195849 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.244599761 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.25972132 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.498701377 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.247007951 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.268075007 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.293951667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.247842677 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.138107297 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.249613234 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.261613026 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.256304496 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.249584307 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.241903367 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.137908239 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.496283717 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.261164104 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.248522103 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.244445528 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.262373503 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.248543646 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.243850428 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156759216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.250411465 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.260960104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.367485963 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.258177051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.278753594 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.245346669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.250394531 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.276076423 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.262704686 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.27802679 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.249714946 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263158264 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.263008726 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.243837335 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.258284928 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.258126433 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.248577752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.254190873 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.242360457 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.276156545 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.260107478 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260290668 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.269448637 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.369400332 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.2464439 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.142502591 seconds)
done (took 209.280988299 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.308866874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.237222379 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.339102022 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.244380148 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.343051556 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.34277465 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.241762281 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.242502426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.241914795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.622327968 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.242318496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.243007986 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.2376765 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.243271189 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.329901449 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.246861387 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.242589966 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.587176008 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.247102547 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.316203944 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.247217346 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.243759371 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.246503403 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.630620491 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.247050571 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.245215382 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.316709207 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.246242506 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.594648339 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.247330345 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.246541454 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.594773849 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.335581027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.262723437 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.255295193 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.252833437 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.344199175 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.260539356 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.328885905 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.328264354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.339425841 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.28506836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.248458024 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.245886646 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.248008672 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.247325907 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.244447424 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.273072131 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.247730938 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.245011102 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.588903768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.255882546 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.244894145 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.244920926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.24511476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.276786401 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.245463518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.247692456 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.337972294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.249295776 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3112248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.631916397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.626246908 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.246822096 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.242249251 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.246252191 seconds)
  done (took 142.623757804 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.314803063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.322305368 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.354121394 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.249153149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.299353729 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.35908397 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.248380383 seconds)
  done (took 10.331187658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.255027729 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.24824993 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297847739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.305031127 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.248549919 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.39595366 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.248458155 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.260593502 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.245729089 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.30239371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.250457844 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.249688286 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.255500975 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.241509693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296579514 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.261101023 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362866252 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.250187159 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.249178924 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.405744074 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.247597197 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.255666931 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.303155894 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.260749833 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.250077437 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.255773921 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.818756967 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24951537 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.246818681 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.249369068 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.247469497 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.287762153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.249631795 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.244470065 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.246661556 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366337183 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.24985874 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24785717 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.251032117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.243203458 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.250035388 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.25061704 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.251178228 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.248433472 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.250793052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.275782754 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.250932378 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.251129515 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.251423878 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.251332156 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.301632521 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.251577246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.248060469 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.248348651 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.307404983 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257924295 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.25195141 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.248475475 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.25241142 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24933225 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.408172059 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.299840405 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.251989092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299253099 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.251284465 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.252280153 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.25123963 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.251917601 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306502771 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.252946657 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.300746908 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.249230739 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.407687078 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.276075949 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.253223319 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.255760003 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.25563528 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.252461835 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.249943904 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.258150704 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.24965669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.253243682 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.259412524 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250047706 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249022492 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355043125 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361037612 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.249622577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.26529176 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.259351585 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.249858831 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.306012014 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.251984269 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.250224365 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305426524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368658605 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.307322008 seconds)
  done (took 145.114002649 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.258677646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.261475005 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.254420244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.269710526 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.254354911 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.253448501 seconds)
  done (took 8.741039131 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.256148975 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.253662574 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.253528181 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.253024038 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.254202504 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.254919825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.254749968 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255973716 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.257938159 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.254380585 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.255114922 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.25640003 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.257065677 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.255587403 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.255992132 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.255273078 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.255006307 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252343485 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.255309339 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.2547819 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.352689205 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.25560019 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255479527 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.256719183 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.259694963 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.256031562 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.263544358 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.25542498 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.255244268 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.262918907 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.258690715 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.257063522 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.256960527 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.260944089 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.259623061 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.257902551 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25901107 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.257753033 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25409035 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.256888522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.25894631 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.256600416 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.256811821 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.25800324 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.258251362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.260865911 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.26106923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.264072395 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.257134801 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.258822376 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.259342765 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.256302161 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.25716567 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.258951096 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.262284373 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260922198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.26180114 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.258058238 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.256142132 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.257880029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.257190393 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.258526908 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.259321757 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.260558899 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.263983311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.260027126 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.258897066 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.260267481 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257871193 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.258146999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.260295963 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.255611882 seconds)
  done (took 92.835229029 seconds)
done (took 400.825075519 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.421522447 seconds)
  done (took 7.616106082 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.421453736 seconds)
  done (took 7.617414531 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.21534357 seconds)
  done (took 19.414057946 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.300865226 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.3094131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.267810565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.259577432 seconds)
  done (took 26.332146024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.343180362 seconds)
  done (took 7.537733624 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.251452527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.25159668 seconds)
  done (took 13.699296882 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.583098447 seconds)
  done (took 7.777395044 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.024555293 seconds)
  done (took 8.221944319 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.254551932 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.253573947 seconds)
  done (took 13.714141753 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.238322594 seconds)
  done (took 7.433662732 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.837987772 seconds)
  done (took 8.034136978 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.260436412 seconds)
  done (took 7.458116819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.332519639 seconds)
  done (took 7.528832797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.41899045 seconds)
  done (took 8.615435684 seconds)
done (took 152.193544248 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.254737258 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.254258632 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.254015444 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.252931299 seconds)
  done (took 26.212534791 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.294016129 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.29417608 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.296166611 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.30512921 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.297215069 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.294690428 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.28704543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.28711964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.305270924 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.297570058 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.2961597 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.297041005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.295451432 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.287116809 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.296610836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.296580358 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.305597103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.29689033 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.287350579 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.29825053 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.263142208 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.305872426 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.299297462 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.2624334 seconds)
  done (took 32.243590942 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.462782238 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.332779243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.416323987 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.314940824 seconds)
  done (took 6.724170287 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.3135704 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.315918221 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.326428219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.365127561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.391772924 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.324793365 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.288747432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.282901774 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.26956398 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.315772095 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.391480017 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.331178017 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.399503154 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.261804176 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.440786648 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.262535016 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.263346672 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.314657193 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.367388727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.380400859 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.262946231 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.315117313 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.317685159 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.331852113 seconds)
  done (took 33.033409826 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.261974648 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.270378107 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.268228731 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.2625701 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.26242301 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.262511672 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.268796914 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.263838409 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.283307575 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.263657584 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.26167559 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.262012754 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.262374373 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.262359041 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.261516017 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.275353963 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.276237355 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.263800875 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.266190122 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.269664108 seconds)
  done (took 26.529178058 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.256420144 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.112483145 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.608931632 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.512114754 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.256363857 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.259940429 seconds)
  done (took 27.205925251 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.326117848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.441349916 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.264010954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.581915824 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.658282879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.265557123 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.265510337 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.474617883 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.744304022 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.746171482 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.316560245 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.326071945 seconds)
  done (took 18.610956273 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.261461825 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.259536651 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.268134836 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276093493 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.313281921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.269495073 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.271900235 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.25885425 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.315528999 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.319030332 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.269516854 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.315242174 seconds)
  done (took 36.600160933 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347218047 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303077372 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.143559667 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996697481 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635466236 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471390552 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.045767026 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679889053 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263789592 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533786878 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.953715567 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361733277 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.514330784 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264019713 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264026489 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.187228516 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485275057 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717772374 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262271973 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934953603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288544486 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261164979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.01782609 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.288838186 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473185159 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393837008 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.522201546 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261042911 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51856037 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272310133 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27246339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262685295 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535251567 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899680154 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355391153 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27225268 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.953087561 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.976716516 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.256048438 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.942689042 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.72108913 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264650191 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271922693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262006399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.196023848 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262842037 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690286621 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.269336964 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.973223176 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.263434125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272669262 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356994349 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.265961277 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077697836 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263892635 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263942608 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.260631339 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26858451 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832244772 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.401043548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27214643 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.199757001 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368554835 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936468726 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840776481 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.364996136 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.266975858 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267428601 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197054576 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.963052362 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28138699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4111236 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.284142618 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913100589 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911545959 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.966941064 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205687464 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782628849 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265908227 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.200145648 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491565435 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263899463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199596963 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.210527931 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198500449 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922236531 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274790457 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.584216483 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273484237 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684223943 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.276876323 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281571129 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287786053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489144094 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.148917744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265060607 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.719697203 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419047869 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28681287 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688397252 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199667816 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.267896925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520189063 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.476792229 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265014381 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.18906979 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452702929 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277289238 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.282376173 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.273461652 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.277236652 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.79899298 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278389815 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.405933326 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286030463 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.266991244 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957116842 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281706613 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.368064062 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.970604074 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50819588 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.986058458 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269501037 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348555895 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268587721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265978458 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.043831277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782839178 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.266330554 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.269041159 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26584792 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.278387445 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.267154119 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214441185 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.265682733 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994896266 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.269099249 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.490523057 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276894898 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543565202 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201174572 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414680888 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358845636 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.489049616 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.373616102 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.267446823 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524460546 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269339928 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268197706 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281140549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287786023 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365602644 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289491477 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.269444832 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525108571 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.271151755 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.271296401 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.04747079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.694914923 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274137146 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.272306508 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.091928718 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795284193 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247848279 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275633438 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15666124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.281561316 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334008356 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273553961 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277895467 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.924793872 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063878336 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.274370676 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.27257445 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49235631 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278346743 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.961069612 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348769935 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.449918449 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80278549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282741637 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.202661643 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.979496667 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.961158954 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269261661 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205282934 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269896235 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277141269 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279548066 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491592563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802227061 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273366373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.990122396 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.275626559 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279161444 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.273990848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270149451 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.893476729 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41605669 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273314421 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.282872876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412885426 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.284069181 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203584579 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.273728122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275166034 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270126883 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27040042 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303796721 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.982077127 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735079188 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529457615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.948963726 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283459956 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.048708067 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.300345993 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.277154233 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.741624584 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294484359 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.286945094 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280081533 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.281636513 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.974992901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944722268 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837831987 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939151652 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757987111 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150275753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.281065917 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27314481 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.699370981 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206497538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836083602 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444600132 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696440169 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21696547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455640752 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.382050525 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973073423 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282798453 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49943215 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152955712 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.751118419 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296002236 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483751421 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307050474 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272661149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.202709465 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.558547059 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490814152 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.764808811 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354085635 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702003916 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.766228993 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287385126 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.272229583 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.560037815 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430708333 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98551947 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.44442172 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272818644 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.013851818 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749800265 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281969702 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498446918 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856751654 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.283606374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.45909724 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210130518 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.284875878 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.283806007 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.275192688 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.40916032 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.273514796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.52763954 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284720471 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207634055 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285536528 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763805777 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.129594473 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.280644093 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274246792 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973737889 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287144526 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537446983 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.27545134 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.89983528 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280746855 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208744566 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209100783 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.967507177 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281495568 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249912375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73417388 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.36311131 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261227552 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29879612 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118909994 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.528861584 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.289050702 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.809440054 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501554331 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.063270161 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298729361 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375035289 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.788453316 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.274958793 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274582481 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511474957 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103960925 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500651833 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.185000931 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.145169398 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.275300334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489452534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276073346 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.023840842 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512225206 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.988443655 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.289087521 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931943307 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302478539 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.032791299 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203545439 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381398012 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.282829039 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356292969 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286557027 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.2867878 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.286867477 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433319644 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03749046 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292315363 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.290931262 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370613752 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439066317 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.909547234 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.281386826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817553457 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953927003 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.817669225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290479823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277367497 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276925711 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211613097 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426437264 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503140532 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55075891 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406033677 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.422032203 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29881921 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.816538558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302856812 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492084131 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552672394 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.172185445 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277235012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291487938 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.278755942 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288236417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.488866723 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738255357 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806333116 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397537368 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.2776158 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.705296869 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553866905 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279345178 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278630331 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869829053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.282967153 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570743478 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.284968188 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046431821 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426102856 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289004968 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917486185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.29029404 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.438685255 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.052652521 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.081840624 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.536382544 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687567913 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290989493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819665395 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931566515 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543846184 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350513242 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291490981 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.384877775 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426395407 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.280852226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280494929 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280602534 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126498643 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.990831486 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290626338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826623809 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543706398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.279080519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.280397827 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304438191 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.290615884 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504904357 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947894262 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50645759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291412297 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.289184512 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.099744163 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827461957 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294901948 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216036935 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.285884955 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504361981 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519067114 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304886411 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.735185699 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.993165368 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807146859 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.253619061 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303595844 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288666853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935518484 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826496102 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.917584779 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751535938 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842398336 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28846855 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557839674 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.288014897 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282498697 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56095978 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.285951081 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.283541474 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31178626 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.821365448 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994329984 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.296264509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.021195899 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.221670497 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623807114 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910081114 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222060904 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293793607 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.452616848 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285783154 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411511014 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295149248 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.289533739 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288546759 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.040216464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559360409 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.288840965 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.286920514 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.842061463 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288011181 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292996232 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505055377 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292731583 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.959521452 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.635128246 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539391151 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.296766398 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.27165877 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.287611874 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284943116 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270560296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482346595 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508834581 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811216856 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.290882958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.296718043 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289092843 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.501368857 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496860286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.069923262 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309924291 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292752095 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30207969 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.195715027 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.786678372 seconds)
  done (took 1546.689160823 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.317943502 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.324833407 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.297982487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.333349839 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.293221518 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.321693132 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.374172789 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.34670167 seconds)
  done (took 51.837017196 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.292557542 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.504370731 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.315447748 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.292704234 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.295759851 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.286781555 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.692480413 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.287853576 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.295177129 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.295825011 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.287072759 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.290091089 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.863481805 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.296557157 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.299088246 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.286433462 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.295619588 seconds)
  done (took 64.410508202 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.297686469 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.510038766 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.361374594 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.302935242 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.961691916 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.286990993 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.488184209 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.353857815 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.286474621 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.343994761 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.936746009 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.297707906 seconds)
  done (took 82.656462713 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.293582784 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.293018791 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.293561353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.293712213 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.294294626 seconds)
  done (took 7.696207856 seconds)
done (took 1961.647081777 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539754983 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.92086615 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.890044872 seconds)
  done (took 5.039797051 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.434346793 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.481182612 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.601940625 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.608765287 seconds)
  done (took 7.353456751 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.561317357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.666266923 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.477439857 seconds)
  done (took 5.93215597 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.563664166 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.291987574 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.363236375 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.2872587 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.287811751 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.28647388 seconds)
  done (took 20.090427411 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.290563513 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.293773213 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.290427864 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.292700746 seconds)
  done (took 6.394505341 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.27313715 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.015191948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.276095917 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.287050595 seconds)
  done (took 18.079359197 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.037262055 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.050315288 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.033964836 seconds)
  done (took 7.350501064 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.300234026 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.129862148 seconds)
  done (took 9.658604441 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.605099996 seconds)
  done (took 2.833380004 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.420766812 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.554333621 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.256894976 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.179285211 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.259544273 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.722736567 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.755128801 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.379643006 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.171250244 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.229659332 seconds)
  done (took 26.158672771 seconds)
done (took 121.878097624 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.809733987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.666092512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.492420855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.781837691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.522411659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.492493456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.49645078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.748652742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.332904058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.283352227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.82312237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.518261335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.652371726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.663770084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.65127386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.535456193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.525576682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.857920735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.465603655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.700874792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.496589159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.421580945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.653127508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.442864435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.523305718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.443317266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.000350699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.538513405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.642079169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.022082569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.443330178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.880318349 seconds)
  done (took 186.758148996 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.299115122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.288942648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290088495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.301793783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.288336741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.288337039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.302143191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.289651185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.289115801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.302527118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289615448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.301370284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.292216078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.289969176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.28962981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.294639205 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.29210776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.29333674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.28936767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.302018446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.304532276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.291116735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.302873706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.302041749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.290633181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.290466519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30392015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.289946305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.290013947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.291022317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.291498723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.290616625 seconds)
  done (took 202.644050451 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.289258422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.293528741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290528774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.29137777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.290466663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293072284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.291947373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.304401573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.303522802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.291759146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.304984097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.303399549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.294453902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.297794817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.291913044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.298095576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.304801894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.291341985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.299110411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290326353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.292259435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.302852897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.304050355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29153227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.29860153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.291462086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30247844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.29266335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.299147282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.29240691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294364633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.292091037 seconds)
  done (took 202.703020603 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.493326398 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.298784523 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.301980549 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.260996882 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.303827237 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.302422746 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.294045935 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.499018358 seconds)
  done (took 13.988289247 seconds)
done (took 607.321437371 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.493756909 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.214853199 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.492220023 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.320262083 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.990616328 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.321432992 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.32045126 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.474507996 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.195785034 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.478515587 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.470157031 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.317683406 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.603779008 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.318446809 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.554514306 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.409477143 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.148799153 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.2589792 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.611708298 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.774393151 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.562567237 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.687737439 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.475548872 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.194602219 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.610120223 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.691881763 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.913566929 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.158334352 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321089017 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.615185865 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.812537389 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.162928642 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.371798877 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.354857942 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.409695632 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.39127754 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.146646987 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.353877839 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.495333901 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.457004263 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.785976031 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.015604618 seconds)
  done (took 87.996921845 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.289596325 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.290179084 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.288261811 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.289402223 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.291472978 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.289330085 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.289188639 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.288409155 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.289794644 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.289457663 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.289582465 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.291333517 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.289371789 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.290384489 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.289188744 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.289125076 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.289654533 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.292786919 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.290567859 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.289597327 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.291233626 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.290455823 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.290769012 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.291040993 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.290832958 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.291002921 seconds)
  done (took 34.779046307 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.303302985 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.526408985 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.695705898 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.311791073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.303907308 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.308748445 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.374082161 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.304732583 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.306403261 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.307708964 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.453860348 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.307055313 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.339264112 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.700874234 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.308520981 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.304297182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.303830007 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.304466242 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.533357623 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.315553034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.376310873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.304594949 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.374407619 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.314980551 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.307113277 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305508022 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.309179849 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.792596187 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.307428117 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.453157047 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004999818 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.373781036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.745156764 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.703732065 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.005711413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.307717745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.305504343 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.459665222 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.307271948 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.305378861 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.374597067 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.306227455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.701786189 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.913044002 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.321077019 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.305328724 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.814029217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.45757629 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.526654721 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.31703422 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.724406142 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.309775334 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.30760817 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.308537501 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.525969173 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.315066064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.306476127 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.816355353 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.311940137 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37697906 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.307451429 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.306982032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.541581417 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.307195707 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.530459854 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.308970681 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.316074701 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.307990701 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.705187831 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.310518417 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.930055703 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.319333441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.303394657 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.452851258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.528296726 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841150795 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.307572253 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.542451691 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.757008771 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.373678332 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.30881674 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.793356598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.377294052 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.308865556 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.307264602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.307047676 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.30467883 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.349018558 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.373438964 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.859792651 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925803249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.83073219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.377449478 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.318839884 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.306610189 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.817253171 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.320296124 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.305958357 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.697755828 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.930343828 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.321407792 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.314373428 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.913217008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.32474376 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.37892337 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.314252199 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.710862 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.308317698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.34983206 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.305897266 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.313501865 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.309539631 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.378562472 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.310403641 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.306253975 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.905525666 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.474349314 seconds)
  done (took 171.21959356 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.307450536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.300922315 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.300954573 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.300344124 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.300529714 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.306912668 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.300226493 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.301141365 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.306177594 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.30074541 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.300239663 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.302798236 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.302294456 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.308173736 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.310847574 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.30839342 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.910684339 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.303232833 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.301482951 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.300557116 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.079713372 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.303218401 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.300878375 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.302607494 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.301268097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.300326067 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.316061084 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.303757122 seconds)
  done (took 151.123832838 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.30804461 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.819753808 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.309458549 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.427107936 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.326539697 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.306912379 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.425149867 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.360994257 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.310706094 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.305542787 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.306056203 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.583773511 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.310645794 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.770281438 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.477410914 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.428633626 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.771160608 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309930288 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.306582225 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.30689657 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.429417124 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.31594342 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.582819 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.820042761 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.310309751 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.819462433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.29840132 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.309466667 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.308491181 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.820729804 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.307235131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.583960177 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.379237324 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.362691095 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.822389969 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.774035307 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.774069472 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.441125541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.310315888 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.307201337 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.307445206 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.29862972 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.822083951 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.311445993 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.310983758 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.815832953 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.324764858 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.311283131 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.318676374 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.307556281 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.364206333 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.36705243 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.591917687 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.830049986 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.379135907 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.331266242 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.428422376 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.66053528 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.314370399 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.7761962 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.298427405 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.828282974 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.315713086 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.298330764 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.310259351 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.315356588 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.444740526 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.428118953 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.778707616 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.311589049 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.777150126 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.445628142 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.310379676 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.309798924 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.31314185 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.829422011 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.779096109 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.445497537 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.433426521 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.487235021 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.300057911 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.311272945 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.300343148 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.380939594 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.310450883 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.831617426 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.779912707 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.313096501 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.312718171 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.312478459 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.313225742 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.471165731 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.833496636 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.383539265 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.771006728 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.605504699 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.593544033 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.31516428 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.365469045 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.312872369 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.59413887 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.315343796 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.363075881 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.719046711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.594743215 seconds)
  done (took 155.131871144 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.533057357 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.431040092 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.397114821 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.419162186 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.816509714 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.85545306 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.409943873 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.428663612 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.414153019 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.546708125 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.394651177 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.403926012 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.481084217 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.381339529 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.982142325 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.375363956 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.398077029 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.43491764 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.414957422 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.278589809 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.906530808 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.582593561 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.469084422 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.298907603 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.403324812 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.019687407 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.833008132 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.802206884 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.467648074 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.487748033 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.796326737 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.376846587 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.200724793 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.937233914 seconds)
  done (took 62.627194492 seconds)
done (took 664.114979579 seconds)
SAVING RESULT...
DONE!
