cset: moving following pidspec: 10392
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289025216 seconds)
loading group "string"... done (took 0.58188224 seconds)
loading group "linalg"... done (took 7.135539509 seconds)
loading group "parallel"... done (took 0.164398681 seconds)
loading group "find"... done (took 1.121380858 seconds)
loading group "tuple"... done (took 1.979184181 seconds)
loading group "dates"... done (took 1.267401711 seconds)
loading group "micro"... done (took 0.234963062 seconds)
loading group "io"... done (took 0.962781163 seconds)
loading group "scalar"... done (took 38.409034905 seconds)
loading group "sparse"... done (took 12.325667064 seconds)
loading group "broadcast"... done (took 0.969836522 seconds)
loading group "union"... done (took 13.087260473 seconds)
loading group "simd"... done (took 4.41229768 seconds)
loading group "random"... done (took 8.937268395 seconds)
loading group "problem"... done (took 1.965170555 seconds)
loading group "array"... done (took 21.129050208 seconds)
loading group "misc"... done (took 1.913685042 seconds)
loading group "sort"... done (took 3.200084821 seconds)
loading group "collection"... done (took 17.899472353 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527639407 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139194517 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117288031 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137630994 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18346494 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130910428 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146029429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085322883 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.047361072 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16034077 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13804042 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476311013 seconds)
done (took 5.049962664 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200300005 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086401775 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095202581 seconds)
  done (took 0.883365125 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065328013 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125793551 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079516698 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067384891 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065862645 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080492241 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065981845 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065647627 seconds)
  done (took 1.260164468 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074098374 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068113404 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083705895 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066903601 seconds)
  done (took 1.00320692 seconds)
done (took 4.131493619 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894302956 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233522743 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18854769 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453721845 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147203036 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186838914 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681518605 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321101292 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209098717 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099155722 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103394725 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.375439243 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105911212 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681245832 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074553393 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104935964 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174787155 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428618023 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080815117 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081617677 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102641469 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14361221 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102802894 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076298628 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16962095 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068885353 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146419548 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093358901 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067117045 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.239864481 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188804094 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685748902 seconds)
  done (took 10.456570324 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099024899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114774554 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068316353 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138129938 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099690218 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084617074 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070177157 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081707846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090130079 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15666832 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113001103 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104013964 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080302666 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068676573 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099623647 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209888487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105001584 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083629573 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08515443 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074311903 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120658196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081694377 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093158769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077742363 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15057909 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193169545 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109641716 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110473002 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068925334 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079695491 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130147086 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141838283 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065733671 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080703858 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138407559 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109243396 seconds)
  done (took 4.497451617 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023783143 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.158963028 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090705079 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150813394 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08589502 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066735155 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125691208 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08083445 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099003504 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230913228 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.068404584 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.472667959 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091098439 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129082321 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101686544 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067168476 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084598405 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064182539 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065845013 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.526229698 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107956968 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135657712 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081969261 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090354878 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083776878 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.343269863 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082210726 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065640709 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083222763 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058531962 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143963816 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067396108 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.207187603 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087961444 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087156809 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101067797 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191392885 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093209372 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122802761 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065064294 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080747291 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168093909 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073838092 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066124405 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105125936 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117244704 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103705162 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082816784 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067117256 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178940207 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065709238 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09815002 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868805301 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165160814 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076943919 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065313762 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284127154 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083269937 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083632328 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063079153 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254893687 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152445007 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066226333 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086208179 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066245158 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067311119 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381574391 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067233718 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.737287795 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070685192 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076183134 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08452783 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066226238 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087828902 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071754837 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099568016 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066462888 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067182656 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082569287 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06552197 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083089508 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08403614 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200944012 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082095353 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06655467 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062886834 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081092447 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084722799 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111113757 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068489733 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081226039 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099015367 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082795706 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067444561 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117632191 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066040513 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100638406 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083631845 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113538205 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080682756 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119921129 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067878474 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110038806 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076091301 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112928938 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092421553 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067275545 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150936657 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063198131 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081210558 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066031672 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063874998 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083700169 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067526019 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096944971 seconds)
  done (took 20.69495096 seconds)
done (took 37.382564173 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288455056 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090288422 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089743496 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073707809 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090507292 seconds)
  done (took 1.420160269 seconds)
done (took 2.180558288 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1188236 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115320089 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062550952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110690838 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063050616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115430145 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112702012 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079844141 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113852241 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066077157 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110835783 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063921034 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063358651 seconds)
  done (took 1.983674919 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082118451 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083553216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084375879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081187801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077445138 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081509646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079295405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103486602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07948137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08700612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063799298 seconds)
  done (took 1.661563838 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081215517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0832638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084137839 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079810111 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077159275 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080781796 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079204246 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101243466 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079739767 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087810827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063474152 seconds)
  done (took 1.655477978 seconds)
done (took 6.051319046 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077771447 seconds)
  done (took 0.829630952 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695782803 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.624436994 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081801198 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132949165 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220694442 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152523563 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440809824 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108705621 seconds)
  done (took 10.382094238 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089181825 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084184666 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082330293 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086039393 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071625244 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086613072 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068322669 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071437656 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083570082 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070672121 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082434776 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070319115 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083256856 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071127368 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068062269 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08556327 seconds)
  done (took 2.075886132 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092933253 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091414767 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089556484 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074684672 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088208203 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072379965 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091097534 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07371355 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086123597 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071264877 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09045741 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073977203 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08691635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065024372 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089599652 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076029262 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086162073 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074165653 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090533112 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075444934 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089841229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065398254 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086788135 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07429559 seconds)
  done (took 2.819427295 seconds)
done (took 16.865115127 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129421228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074759749 seconds)
  done (took 0.963930944 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080806378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096699714 seconds)
  done (took 0.945130607 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082937308 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080356446 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089465565 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092828565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08071662 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065093559 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101735029 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065867475 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080195397 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066495829 seconds)
  done (took 1.572557256 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067721602 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092510333 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070135452 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095560313 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073010573 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079609279 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07210931 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082396137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07752498 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077791522 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071076993 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098343845 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071347954 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099823252 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072107765 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083919807 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085960977 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066942344 seconds)
  done (took 2.206922943 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064901086 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066602104 seconds)
  done (took 0.901626888 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066668463 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063241748 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081450239 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066386885 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077219205 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06244763 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078619858 seconds)
  done (took 1.266284719 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396557285 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108448684 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241468768 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086609627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102523705 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261417441 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081984834 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070629956 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087409185 seconds)
  done (took 2.243750633 seconds)
done (took 10.866743214 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079997302 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085595246 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109274339 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418413562 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10471381 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065910723 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.140577447 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.205525273 seconds)
done (took 1.980944369 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12356238 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60372826 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396460516 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210497964 seconds)
  done (took 1.984505689 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369339033 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090637404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072976346 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066627692 seconds)
  done (took 1.376391188 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065337182 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069438531 seconds)
  done (took 0.910299506 seconds)
done (took 5.168279421 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066369069 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.100959861 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065369481 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063768338 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080575192 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065608218 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063494958 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08032212 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066244335 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065416555 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081085174 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06858735 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080966709 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065495298 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06341126 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078982179 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065881757 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063353794 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078620268 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065007688 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063302128 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080700791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063198199 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062975786 seconds)
  done (took 2.507462405 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084259246 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08190751 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071584361 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087216928 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070390947 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087270993 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071498079 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066360809 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086551532 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067870268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084790697 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070332088 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083051704 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070485054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083406597 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070350396 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08655852 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067215232 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071263909 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085864976 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071302328 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081789588 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070459303 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086193177 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069598609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084794124 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068328674 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081855119 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070606056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085686938 seconds)
  done (took 3.096763035 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070163449 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063151913 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079535996 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069932197 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063316523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080113875 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063523857 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079386132 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064685396 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064052868 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080544398 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063353456 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063092147 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079993631 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064304317 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082504744 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079791863 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063857996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079192561 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063895339 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065889891 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079729831 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063937029 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078920984 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063449438 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063090813 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07974619 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063592019 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064307612 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079389353 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066094979 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066679603 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079475063 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070301348 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083147915 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063984838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067593271 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078626401 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063711942 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063008646 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078315182 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063846995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063033649 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085412541 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06382345 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081553453 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064075035 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064365743 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079463299 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066472925 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079062271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063798528 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06556219 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080096264 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067412407 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062866674 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079790544 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06322101 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079923774 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063241687 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062841369 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078975448 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066387686 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064725333 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094479818 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070188978 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079166207 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065033136 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06442604 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081720067 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065532874 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077336709 seconds)
  done (took 5.887485909 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116159031 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089907352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081704613 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065324367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078358701 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064132243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067412692 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079766824 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065592822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084764672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0642152 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065167948 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081269969 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076256634 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08049097 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065447637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085093601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062128436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063909551 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083175507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065096593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08251871 seconds)
  done (took 2.454396154 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183442422 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086810075 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108252427 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090062416 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084144452 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073353976 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085020732 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069537676 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069813854 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083834324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06825555 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086564997 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068213162 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08273338 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068160023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083747493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070095121 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084327122 seconds)
  done (took 2.329459402 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077416555 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065995145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104346228 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066514643 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081955156 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068937094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088096086 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074869174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083578685 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066605361 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089456809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069241108 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084503324 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066013798 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068546629 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082208078 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068734201 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081206792 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075310376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086929466 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071470408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090285385 seconds)
  done (took 2.498773606 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08013216 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067280614 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100034763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084597075 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061906067 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064438726 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087855466 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066728346 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087671455 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06826353 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065823195 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080354984 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070211598 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081945284 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071469457 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081742356 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068573677 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065600833 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083935474 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062150552 seconds)
  done (took 2.288244374 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085696404 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083368353 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067388509 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091256435 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067345344 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082776554 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075003562 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083549896 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067709809 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107557148 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067051818 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084922131 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074798566 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087352914 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067257904 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090771748 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075168898 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091658007 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06745244 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083117653 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.216071981 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067947172 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09110497 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0673223 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082400294 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06747465 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067307515 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087902739 seconds)
  done (took 3.140600549 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06566204 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066650585 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079647784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063266812 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063729159 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079470447 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063634947 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063181299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081692789 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063556699 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065556457 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081859318 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065944549 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081865642 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066102695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065909514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081611224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06394337 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063718907 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079800854 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065767241 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065645193 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08156098 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063244621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079211902 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065637798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063631193 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079969368 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066303718 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064178919 seconds)
  done (took 2.895427697 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076294941 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089782069 seconds)
  done (took 0.961334492 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063650113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080290124 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079711412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069917815 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086773014 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06737256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091254681 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070236547 seconds)
  done (took 1.401914931 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081355039 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077614776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083895455 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07782439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092845493 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083618547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15478704 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083641246 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073205299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080993654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079986863 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065728275 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089415572 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067371287 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088431068 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072479851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064648393 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088225209 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069814236 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081184107 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067904486 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091540247 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069398812 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062599817 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084076889 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075500786 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093261204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06720203 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086396545 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07412683 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087718809 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060894678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066478591 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083518812 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064092442 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09206267 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081605764 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085529955 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07518439 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067329399 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09264043 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061604473 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088051544 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072813034 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091966793 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06706638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06709063 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077633632 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064439108 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084517541 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061499614 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067710212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077651598 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073212164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086424301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07757843 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083800038 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067728878 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069255246 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08624548 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073326789 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084709764 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069573404 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066518724 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092689547 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071537666 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091639812 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061854266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060247839 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081736521 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075830055 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105077923 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072208552 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083325704 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067818513 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080508161 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069135811 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067129027 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087808869 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073323972 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082706585 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071961914 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08936165 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066903581 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068675362 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090082502 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064356353 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08452647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064174203 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099035188 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065618269 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079981113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063832848 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076125732 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086001223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066501512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080514673 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073630312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060692229 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083865205 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067903241 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082673293 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076509221 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088027152 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072278499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091267663 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074310172 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066173553 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086049338 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063385595 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083717714 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06519673 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073343852 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07670483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069689627 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083697958 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067346315 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092029685 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064792024 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066250194 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090085792 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072407004 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081476901 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063019447 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069332175 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082216892 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070169675 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090288048 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065029954 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061624916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077434075 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069943485 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083494774 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070204788 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087851457 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06968376 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060384123 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081351348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071363819 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091285009 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067428226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083176908 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072319971 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06794364 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082041037 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073712752 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085534166 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066139352 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071393466 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083038344 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061936178 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086088443 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069243172 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065316004 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086741532 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070658346 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0853862 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067962974 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081224348 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071723921 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066605257 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081419588 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067145773 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08157875 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076579506 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068174136 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07818189 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06371911 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090086219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0649548 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066043577 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082381932 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068651938 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08317281 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064973053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065140876 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085081624 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077460996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087040721 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067482587 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088275994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077217714 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082321831 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069195259 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065504915 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084035945 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067141484 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091015564 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071237758 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087791789 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068989448 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062961988 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087877237 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073527593 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082121576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064755801 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065315142 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086917975 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071792194 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086848086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067084705 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080674052 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066957113 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069722678 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086306277 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066047237 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081784598 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070813847 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081757258 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072696119 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06706718 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093153855 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069157645 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078055402 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069930869 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081146171 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072628563 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061688938 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081081173 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066093578 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084256169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066085182 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069205883 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077829668 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07399678 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090536882 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066814154 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065589728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082941868 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073842883 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08420423 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069799682 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06915215 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089239841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076754693 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082428872 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070113699 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092970079 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066465956 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060958232 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088209535 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06517823 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082498754 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065758443 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064492103 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086212931 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074507273 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090065101 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060806757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085459616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065109389 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065108872 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078282159 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071337571 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085340704 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067460967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072571254 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084477299 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067456943 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086195846 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066048207 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066222921 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084567863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06912079 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083698684 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069720604 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082765881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069344356 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065762958 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081387263 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068934359 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082936027 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067076793 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070955568 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08227951 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067193745 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085755302 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068085609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066419846 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084098145 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066141568 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086269743 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06768508 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066513533 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085638533 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061783296 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089658354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066074228 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07362978 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083636249 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064080213 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087509605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069078039 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087597797 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067158707 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067129432 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084634927 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066700062 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085530038 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07319024 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064396083 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093373344 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073557843 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084418542 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069588194 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082937455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068390244 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065362133 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08441847 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067868168 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083125693 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066287497 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071125753 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086439066 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066885292 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084845323 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068131235 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066546572 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084235169 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061438495 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065559055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083390549 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067029438 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09234045 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066993461 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083715577 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065600795 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067167817 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083120127 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063340406 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091780846 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074643811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083897681 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073765762 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082928047 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067667625 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076602007 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078101213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065349398 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081587854 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064209545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072897483 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084478196 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075700145 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083335559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066778086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063205075 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084366022 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065186874 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078324749 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064523503 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070449655 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08187738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06601155 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083726572 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069816391 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067951122 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092471375 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065950624 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08451212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067304811 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063813911 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082446989 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066240383 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085582529 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067681954 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06460126 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081230254 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066355529 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084090148 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068150329 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06635401 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084614918 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073309041 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083162449 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069359572 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069207331 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081253179 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070074036 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083646763 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066230241 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065488028 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087072159 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070212471 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084065772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075053455 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083355326 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067742105 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066352354 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081125192 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066590584 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082856043 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067024835 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065702639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084978189 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074070424 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081321477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069431862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065690634 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083911915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073563799 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083956867 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070076442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09095847 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067355298 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067570072 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091357401 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069883705 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086493038 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067552525 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084297805 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072191877 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065888003 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089453261 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067093433 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084579796 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068505377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064673383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083025745 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067344745 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082228873 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072763835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06640552 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08360207 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066437431 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080934818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068152061 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070085816 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091041222 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069144651 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086715405 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062389263 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063861395 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084389743 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064460362 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085329401 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069728033 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071888661 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085792935 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066823529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082896146 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075481584 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089442922 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070541814 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06452266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086718848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067952577 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085561359 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06749459 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066728465 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085373679 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070852254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085148042 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065720559 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073274806 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087115617 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067668422 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085649629 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06804588 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066078163 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078738904 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067363919 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085643606 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071802561 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086007924 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067379841 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07692614 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082013207 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066857597 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086755501 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065733122 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070394491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079435311 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068296969 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08460276 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067733389 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06130999 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084031585 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064957497 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085902761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06597297 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061917179 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093848855 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075077992 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086407368 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066631035 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082822865 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062099463 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062634822 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082892999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06773964 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085837674 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076953357 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065130557 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08324847 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062438401 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083584609 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069210526 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069417631 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080826528 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062461735 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065342097 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088100669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071761607 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082754008 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066722986 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087139731 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068258014 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064025935 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086858131 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063026102 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087624886 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078946639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084816577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06703569 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072314811 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091829138 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067713953 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079855646 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068312435 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06869002 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084870015 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067575415 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085200685 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081133684 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086904166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065721806 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065736786 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086263961 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066244865 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091726133 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068069666 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08492419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071476021 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068304168 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091864678 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069254788 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090909032 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069758299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086808658 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065769613 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06678905 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081902765 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066267168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084749852 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067543433 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070054195 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091583908 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065654506 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095055916 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075637548 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085500003 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063280197 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065234056 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083727797 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061978998 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084628916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065550358 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064860833 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0821733 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066110681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084872924 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07183004 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068520068 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085208807 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066529964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077989334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069466628 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068671275 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084411645 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063664551 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083025701 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067420498 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070452728 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087843117 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064655106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085165859 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068004222 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067394809 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079229053 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073349704 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083089137 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069460268 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066244567 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084448204 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068452686 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087236552 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071509947 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084520697 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069222109 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075334192 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086606365 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064046449 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080526413 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072092631 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064084041 seconds)
  done (took 45.805295758 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106444878 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080915325 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06199895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079534962 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074849324 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081395857 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062178114 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062528266 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080827186 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066100923 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07919232 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061800394 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089331268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085781839 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091786273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065799658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079379091 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063287319 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079082516 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063788402 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088447092 seconds)
  done (took 2.449312615 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074880248 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089241265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07356465 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093983699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067693907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089799984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072621163 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088832772 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094103346 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068325679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094268862 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071173441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08461547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067203531 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084624181 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071236542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094273623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068573118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087559268 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073013876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08821967 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072746948 seconds)
  done (took 2.611764042 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067074287 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065531457 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085106934 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061239411 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065802084 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078924735 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070255156 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08137702 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069864211 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064812499 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08292331 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073904815 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084471308 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061868901 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065648419 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081818116 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129071062 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070374567 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065364175 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085464158 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061464345 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086255762 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062075701 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062040353 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083326331 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070021995 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084672204 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064763241 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066198445 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083167495 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066398514 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081545981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068034122 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066605413 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083202138 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065495292 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065092452 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084089093 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062275359 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082353734 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06748173 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062133302 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084368809 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068010906 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063737131 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08235005 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068488085 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084405655 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062212869 seconds)
  done (took 4.450389528 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084452078 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129619352 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087233451 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090272227 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101642257 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092759297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070681385 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111208309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064032173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083656504 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082774913 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102566313 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085363532 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070837061 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090725501 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066293828 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067041637 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084164463 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070258193 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084225113 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070176613 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090775563 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099766016 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080404364 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088164647 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066362238 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083815212 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071378458 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097767544 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071911529 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089725005 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072258919 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099472855 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071826473 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084246393 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069394138 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100765947 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084667834 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069265018 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063847193 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086538623 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07165758 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091966841 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100950784 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067482568 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071193794 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08458468 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064048667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097759642 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068488099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093628444 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098977112 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070590158 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084603227 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072107764 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099141395 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066312751 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08268512 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069931827 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096536912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064286629 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088696403 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080691804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08620275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074677016 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098985304 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070980792 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089354826 seconds)
  done (took 6.608057443 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075089449 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09084941 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081237278 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100571358 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091109113 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073757287 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091278741 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073817958 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091205488 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078502295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090970566 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112034315 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069556849 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093525761 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073666605 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09134158 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073390976 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091624385 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073256828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092300486 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090892731 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081840655 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09141553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09970999 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103447912 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086857458 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07275628 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091373373 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081302166 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091914143 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102732526 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073735484 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090640979 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100212711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084861464 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091289476 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066402153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091439879 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073189087 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091205909 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069172667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099086937 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073075682 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087014702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072928551 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091238014 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099441513 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085364643 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094539518 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095735883 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073380405 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099559497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072899085 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091665868 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098678282 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106670622 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100501155 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09958301 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073100799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100474431 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099383665 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106697424 seconds)
  done (took 6.309913644 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087830832 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093390973 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095975136 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062456268 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064784477 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090017816 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065134516 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083111418 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075094362 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093106114 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077664408 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089343225 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073578902 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096138965 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088137701 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0745065 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087896672 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071528996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093721143 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070525029 seconds)
  done (took 2.487323552 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076600317 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102464508 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067503702 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072104744 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089040165 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072386607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08732493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069564677 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085497225 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070342324 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096193731 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077217101 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085648964 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073107054 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094857418 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073052371 seconds)
  done (took 2.151034814 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078395211 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095649207 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08185985 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0854432 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065674502 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082414338 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067613089 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062132821 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081641842 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081215769 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085916128 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069051721 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085501773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065365081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06353388 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08863687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063181744 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082660133 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066733339 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099940817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077961232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083950871 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068660345 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067794897 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086616204 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071880565 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085417657 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064871069 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084097265 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068180694 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085699375 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074375036 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082510428 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065849989 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065042888 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082403775 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067633211 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085487319 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069937248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066179783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084154464 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066321832 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084967554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067839425 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081087209 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067358415 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062988288 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091919074 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06536775 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085317118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066545222 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086865936 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068070451 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077153981 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090097344 seconds)
  done (took 5.063867943 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080292343 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069456965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082093195 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065189586 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088346839 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068523556 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070171722 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087239454 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068201882 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08324667 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068340165 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087604569 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06881194 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070414238 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087026843 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07028488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080895119 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069033602 seconds)
  done (took 2.228111135 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072525554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066824353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093341049 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067672257 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084872698 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070232161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062653949 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08364152 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066223175 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085426095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066996209 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068877967 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084077228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068940356 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08501721 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066929641 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069592194 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084001119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067486778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081598874 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06864256 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06589816 seconds)
  done (took 2.496460137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07232792 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093116437 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162363331 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107280412 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082889829 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098803174 seconds)
  done (took 1.482076807 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090951955 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099290589 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068142755 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106831329 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075914241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087454611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069373816 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086760378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077336765 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100979266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068855025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096876101 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095490013 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076898416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092971642 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074666832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087641471 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068295586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085560143 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105520149 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069898679 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095492208 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069627616 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08684917 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069559159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095134713 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077575222 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100476338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086956064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077579096 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093310589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069119397 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096825963 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101235978 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070444107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096003083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068773082 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105547346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074163093 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096403169 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069755906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094925446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09531175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073660573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095642562 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06909274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092313811 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068769634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088153614 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112219151 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074518753 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095360086 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093527509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077743276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095388201 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111601871 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082264807 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095858455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093193764 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081930896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095753495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073483476 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095735253 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100993329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074115604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096328257 seconds)
  done (took 6.582852996 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085299304 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105609389 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069761557 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100755113 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096488118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069335742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087523724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069651289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086797829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068978724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128218875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068587659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096049921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095658691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069433117 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087033205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069222855 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09594589 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068608264 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111729141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086593241 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077206032 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096168636 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095714789 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082331764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093156242 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068842494 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087779139 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068132772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087664048 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073783376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087742082 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095281793 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068188592 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095722433 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069057882 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086764921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074642049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086911967 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073824801 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096050178 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105102936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069695082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087528994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082417822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087919368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068253913 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08801737 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068399852 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087261703 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100747985 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082851113 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101502226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096263393 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06994588 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087482477 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068707776 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08715695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06928102 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092741573 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077387963 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087969271 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11190504 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069157669 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087893913 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076749337 seconds)
  done (took 6.466509065 seconds)
done (took 127.429688356 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200945807 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18335231 seconds)
  done (took 1.252396115 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069149958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095381597 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097653674 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127493973 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086523769 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100446802 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118008546 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078794458 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066231627 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086002764 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066922787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086920883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131169684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066548624 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085829664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069905763 seconds)
  done (took 2.30774063 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102207345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195203501 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108856011 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065823385 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099050807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078642082 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085002603 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076750236 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093641315 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066566049 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077627951 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095860829 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065187118 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095412855 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075427291 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097775189 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065626348 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096769687 seconds)
  done (took 2.520540232 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103634758 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140584468 seconds)
  done (took 1.120127062 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198208727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121518157 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201550342 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.408934405 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204977642 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276094237 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172712392 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169995786 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156544799 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168169812 seconds)
  done (took 2.951101456 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098946199 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170497251 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308689086 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136537493 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086547778 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114480131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137467306 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089381421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101106093 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099963514 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080209649 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096672367 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097180856 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094912201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073919984 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096991456 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11965964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074285224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096140101 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075759615 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116599178 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066993596 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093924895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074581409 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076846108 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097190848 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066248821 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08575655 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07636259 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093862049 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07867561 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113660577 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096242497 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130008595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081512769 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129528466 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096761598 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072306114 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094566153 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072452162 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096802531 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076589484 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103104233 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095772169 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066136539 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077232299 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084621418 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066871102 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098820768 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0768051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098542226 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078543669 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12943665 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096559462 seconds)
  done (took 6.186034838 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.74178605 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109669232 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092904488 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804565199 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088780868 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105217897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.712570686 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116959929 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209532674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764360346 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089506291 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096880642 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179593078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232045587 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.877902036 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279660204 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632621276 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104349233 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10781285 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130893917 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137336609 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174592728 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148850118 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407330987 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074633678 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091979566 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135654407 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09448888 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139161603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084227093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092600303 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154884678 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223443456 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154295796 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096256612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069282037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090422261 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147748625 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23743681 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169791967 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157714844 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067578259 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090940045 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138484047 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131665667 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067961459 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139253061 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172441081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147760969 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073204346 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094938506 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141614561 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137213889 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141807131 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100735332 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.260858638 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286279411 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090493161 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117993227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083096016 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231598434 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081811649 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19796551 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138296673 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165206237 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090151493 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730661179 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146033623 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090602538 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073478316 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116567871 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094178514 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138152458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143633454 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383070487 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141578523 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072949914 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089601052 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181554022 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10294583 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070135704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140247589 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095213175 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099857676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162338662 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1415634 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146207016 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.20657956 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140572331 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156885073 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073845859 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122859586 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094106905 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187315065 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170254756 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13920647 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208231549 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139317196 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141386744 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146057117 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095846592 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149150354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117616866 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080907211 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136306799 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19166903 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122202378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08169347 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094621457 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138571224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125753945 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084523979 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159500647 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149653875 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.431989574 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146216226 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0887793 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086388553 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137658276 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16124081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075924463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232503564 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120959599 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146633405 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119327173 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068150232 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118516458 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139881433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076975961 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121250298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.15558429 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076721973 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209002186 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.185830874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076788082 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21430196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160095715 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074629793 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147247062 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119622208 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144347845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097206247 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137633273 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07400734 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745629977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142370187 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120016055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071799023 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165166338 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090824951 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08226089 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103103156 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068288877 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773088672 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084239283 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100835906 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102900763 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075155889 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120720343 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136988364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093814254 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139199414 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179855252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096686443 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117201721 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082890807 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138421236 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095993294 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103457551 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084000358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104157325 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121701135 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073887498 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103786851 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145994097 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141151817 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191293101 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550434818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069353529 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103553637 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199862358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070182316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258878177 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136752205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194692728 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14053266 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079331618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292001941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1428029 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164785545 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105246233 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149858756 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068249222 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135369007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141384633 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091109904 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074961977 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139377911 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164289008 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141899877 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918063524 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070688851 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204093761 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066849161 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168123991 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076504033 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095394521 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.237820089 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090870447 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144487514 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142722902 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092783032 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083166605 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.817656185 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104163624 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137308025 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094191696 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171479104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161518318 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135768127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136604055 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074630486 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136879647 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209281213 seconds)
  done (took 40.18585834 seconds)
done (took 57.399456139 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256404575 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176361482 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240266402 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145021213 seconds)
  done (took 1.79114584 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142905152 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103376543 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116271305 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085231129 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103493408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085622291 seconds)
  done (took 1.537753123 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400245362 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264257708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230007424 seconds)
  done (took 1.797543488 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.280995828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21071654 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.444783101 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29509359 seconds)
  done (took 2.237707236 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.180342651 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112064811 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066999576 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105492134 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156809168 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249942842 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126409096 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18609772 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078821709 seconds)
  done (took 2.212234398 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19599518 seconds)
done (took 10.676773873 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.171117716 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.211221668 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.144676748 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.27897285 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110928585 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.194514461 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123277281 seconds)
    (8/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216581853 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076713455 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104337154 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149213568 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.233326471 seconds)
    (13/309) benchmarking ("sort", Float64, false)...
    done (took 0.147008261 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.236492929 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099909042 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.143523163 seconds)
    (17/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077745691 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157904251 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076785904 seconds)
    (20/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.178760809 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179145438 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.170188885 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.213346335 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175608914 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156530347 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076977791 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125872882 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051741592 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.122234657 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072091927 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221208832 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219651023 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.170852659 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053227756 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117148006 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089716272 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097878044 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143394995 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089035831 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153605394 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097579832 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080608872 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093946366 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080682017 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086480612 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115279209 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129947393 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.214755547 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.222531697 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097124303 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074493528 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.170431546 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166924795 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191585431 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073502419 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101667912 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091678414 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094566193 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095729792 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095017798 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072596032 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158044355 seconds)
    (63/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.169511582 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067723504 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052354456 seconds)
    (66/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115121115 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158869975 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089686158 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167563016 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067100369 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098923944 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09594126 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073691636 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14178806 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098197927 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170103117 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.088143285 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.106312421 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135142986 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.18788895 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077433762 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125271315 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075807999 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097827306 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.16801876 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.192160753 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.197826585 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067768784 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065538398 seconds)
    (90/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.185100091 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05195494 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09724599 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076949399 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099458188 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093509314 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073932697 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09349291 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100547111 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07120011 seconds)
    (100/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108869459 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.117225219 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152562271 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07606369 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.193135246 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.17148308 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074036622 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084168115 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.130323911 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106056157 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.114980838 seconds)
    (111/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15661798 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060842213 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165529399 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077615521 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062558273 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166813529 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053988101 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050955693 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096077511 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.0865015 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090983832 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077962277 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050976903 seconds)
    (124/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094147031 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.156402318 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073925797 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094230559 seconds)
    (128/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099758802 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05192141 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127216833 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071570929 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113105741 seconds)
    (133/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137946701 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156963111 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06662011 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096548912 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065911144 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092372136 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07396929 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065822533 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08754343 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051713854 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065072579 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094343368 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071946814 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100709582 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051821991 seconds)
    (148/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05255514 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.176301008 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145862392 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07540136 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069170353 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100614252 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070896872 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065954976 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103826096 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158540876 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065982615 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052865938 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137430688 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069946359 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113668879 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066337656 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0995062 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071501382 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052727283 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094100221 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067995144 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051145938 seconds)
    (170/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.119858471 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062625941 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110802998 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053823456 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052145674 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093657387 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0527884 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116026792 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073291662 seconds)
    (179/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074367206 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093403413 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088641972 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094077166 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06807179 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06609839 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089379252 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11299645 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095970664 seconds)
    (188/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052996604 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069127885 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097124425 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065810874 seconds)
    (192/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052838455 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 0.161993572 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113694589 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062246856 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074140038 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067368198 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202891188 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07488225 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160005845 seconds)
    (201/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137581681 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.075329189 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068297266 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065743059 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.075134691 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069208947 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.408856051 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052350551 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065297863 seconds)
    (210/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.083743787 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05323356 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103348014 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086761183 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0743791 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192129264 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053469055 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113486788 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089439284 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096860613 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067683279 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073508985 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111494644 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208796444 seconds)
    (224/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052369475 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07300917 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069005132 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156293811 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053578658 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051645961 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073100011 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073357816 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073017559 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070518161 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095112331 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072979169 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050521151 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090174211 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065250782 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072027719 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072598031 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160862437 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064763501 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063115292 seconds)
    (244/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061159974 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072905951 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054462394 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066035838 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088447608 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067912297 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087226622 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066148684 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051611353 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086861127 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06570611 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066028238 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119367491 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052227144 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051067125 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137500092 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051816711 seconds)
    (261/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140197486 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.136220165 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093804301 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065958572 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 0.149951828 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071513629 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096097807 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098569375 seconds)
    (269/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066987354 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189267501 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168217647 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091463638 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088092182 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051382389 seconds)
    (275/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.12898283 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088576389 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112456648 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089318278 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050705342 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072906102 seconds)
    (281/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052478095 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051763443 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191070198 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068564784 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136194351 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095391629 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089048346 seconds)
    (288/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067900996 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073332083 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086763466 seconds)
    (291/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052961661 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050774354 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086717355 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090229128 seconds)
    (295/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10072876 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067497464 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094735831 seconds)
    (298/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066473606 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071913492 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074700697 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067766702 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053290395 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111739056 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051631211 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070863714 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086429776 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066113203 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053625164 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089841245 seconds)
  done (took 32.922572692 seconds)
done (took 33.836299574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081154964 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112919776 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075242213 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.113634517 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080392276 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099647534 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072495057 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100535042 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080571418 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081934455 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101072748 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054526752 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096539547 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075302146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096283983 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092249616 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100009173 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072864094 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073924481 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086752363 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074214392 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087392794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067350941 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056170998 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099173965 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073039711 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072608347 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097123145 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066171764 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087687771 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069433229 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072955998 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086927826 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079621997 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093751949 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074034974 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075385542 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097557176 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067465524 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086797332 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074049645 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065414509 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094101456 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07337374 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071275722 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092860646 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074137747 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101216417 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091727554 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089920682 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073651307 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098015644 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076792618 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072169424 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091329361 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074106516 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091795708 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092362775 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096488168 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068394641 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073369242 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095777182 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071141894 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095435054 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074039455 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07608285 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097374493 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071778995 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096372807 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070833005 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065106425 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095910026 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069183655 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065713397 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099238532 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076615973 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086326492 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071551897 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072653865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094189049 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065099437 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089177163 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067224194 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07205031 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089606222 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054906215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069909657 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093823544 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064976062 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074900498 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093645638 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073894086 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088946704 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077299267 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065624904 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092953494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066144741 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066496941 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089811934 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069989478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065662067 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09010214 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074902546 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089135508 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071941906 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079637419 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087651523 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072346028 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086872481 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065368782 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082284961 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097892064 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066520207 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090505525 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065429508 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073329125 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086922934 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066591123 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06624663 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087546625 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071783818 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065998633 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089720713 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073417834 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101600705 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065890226 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069733961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089371221 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066075658 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070850763 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088059259 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06663163 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089263615 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063772088 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068042585 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08829151 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073457965 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068305699 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095913073 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068236516 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096520568 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070136749 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071919138 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092727074 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064740966 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058953873 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089259675 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067789245 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067864843 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088513111 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06790217 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0656335 seconds)
done (took 13.110049439 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065854816 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167587848 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124551453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095880385 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10995468 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06717506 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099435603 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103618195 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.08992052 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12632455 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087576777 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106497739 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114583378 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087172845 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06624442 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070345363 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089850119 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088574606 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124517444 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108586522 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117034089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087069653 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119809204 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090699817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111775484 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103338606 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08911983 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070428358 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069606033 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115907214 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108159993 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069545769 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067184633 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122252381 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11696856 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086005646 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087819104 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08473851 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087644575 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066258361 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113889749 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100086937 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103713222 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081996321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094474707 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068698445 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089342518 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086773041 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113621789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080762406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110667485 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13356826 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069155326 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104417511 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06469196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108940694 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10430663 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069192844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066877917 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09056831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065945102 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069700777 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110530669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114860451 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070044725 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104743449 seconds)
  done (took 7.221486623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084411441 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11542675 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084494648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106839121 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066047647 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067266515 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088924937 seconds)
  done (took 1.584392663 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067177802 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089437734 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111508234 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089369156 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107847031 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087517219 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098976274 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067628594 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106569939 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06846143 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087640718 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126954258 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068039517 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096784375 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091419241 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08966228 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090720227 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088890255 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070286438 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113470093 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069609035 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110063793 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068681246 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067431287 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103631837 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067145458 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137909818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072292376 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090666072 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070584625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065625537 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139801286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104277332 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078177237 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066796013 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104804754 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082570222 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087462345 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084443344 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094431193 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08160843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068343304 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090637801 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066648198 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071817067 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100514892 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06890736 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090448971 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07057392 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086624929 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090897356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081236579 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089303138 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071013495 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06875712 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095493836 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077664572 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090312008 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088081108 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068903551 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106409158 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084207099 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104065119 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083262546 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092779865 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081584607 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104518267 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070321221 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069379388 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093157829 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083787215 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087964603 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069291806 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078684223 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091362433 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090935697 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112871714 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069106999 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100532367 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067839352 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067666322 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090375399 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091225237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093100958 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067375819 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071800584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092942342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065583061 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066106176 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094005393 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066446319 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091158627 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071242304 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06803549 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09194899 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084164287 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089618157 seconds)
  done (took 9.282674152 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068244539 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068536865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091969792 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068457554 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068399709 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091388767 seconds)
  done (took 1.439491078 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098047871 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092034988 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081433434 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095025709 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10716111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104339473 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083774943 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105517528 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084994037 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102321917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082244554 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105365867 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088351449 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095610921 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082723968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094446583 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083388552 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09898876 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079084353 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096528725 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088424438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096176514 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074450352 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105553199 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070879936 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073045173 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100152184 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080049108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101695744 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083580171 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095623011 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071548903 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094313539 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082757654 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104819701 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07307742 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095238575 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072965471 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099796338 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071360802 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105607805 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074394646 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077942331 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095406429 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105279907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072192903 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072576562 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099924838 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081739798 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094024571 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072164573 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094925068 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071298318 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095166247 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072534722 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105017475 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07168832 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105112823 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073564746 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072636678 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093040473 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071544999 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105902112 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071185763 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103637754 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071811064 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094864575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073671665 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096327813 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072795926 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071753907 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092450078 seconds)
  done (took 7.313707667 seconds)
done (took 27.812483641 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.645760807 seconds)
  done (took 1.626812325 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.75918525 seconds)
  done (took 1.742201569 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.739894752 seconds)
  done (took 15.729349659 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.623132296 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.744506288 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808302468 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158715535 seconds)
  done (took 3.316960998 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.888778744 seconds)
  done (took 1.893281825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235196763 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222584246 seconds)
  done (took 1.447410234 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730525247 seconds)
  done (took 1.729239273 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.280478348 seconds)
  done (took 2.270717908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318935099 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180849181 seconds)
  done (took 1.497743701 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.518274787 seconds)
  done (took 1.516245398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.584140407 seconds)
  done (took 7.586615436 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230888538 seconds)
  done (took 1.242945241 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270497959 seconds)
  done (took 1.2711884 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.123406992 seconds)
  done (took 4.124195368 seconds)
done (took 47.985659035 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077543939 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082335059 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104203957 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078829246 seconds)
  done (took 1.340104663 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076887485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07402449 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100068186 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072392833 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100519948 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073767796 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098794024 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077726506 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072690932 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096675168 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073927586 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095627514 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075358866 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098161954 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071026294 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075458856 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098965546 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073262933 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099164165 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073393278 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070686711 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09833238 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07603829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095776646 seconds)
  done (took 3.0269833 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077340336 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073373588 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097015523 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072464685 seconds)
  done (took 1.325127256 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077472715 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11553395 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.0887125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100743775 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092133858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109846994 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06919975 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069143012 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093538665 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077362164 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090917952 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097739238 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111197914 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077137126 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101737818 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066000006 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069126781 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11053409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077704376 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100736798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070335603 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080059187 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091534537 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089902292 seconds)
  done (took 3.138791561 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077310528 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128057841 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078826395 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114092488 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092048887 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09002295 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075583746 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114931514 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12594877 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089715002 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07065292 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066126479 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096588666 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066151695 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076334825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131351515 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135314952 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068584803 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121276093 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065310643 seconds)
  done (took 2.899055579 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075359367 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071156325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088391087 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068417973 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07593013 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096284032 seconds)
  done (took 1.491057748 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067860931 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067352855 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089913689 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066251295 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071329389 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090244754 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065554371 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067061741 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090626724 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066760179 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066892071 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08836956 seconds)
  done (took 1.909253053 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.380969894 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091636346 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068707633 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087974928 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070858573 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089508572 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080161282 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068417685 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113856792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067120591 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090611618 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068520843 seconds)
  done (took 2.293044107 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259290887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077082385 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322080273 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168080028 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139879965 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154650043 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105598975 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13926488 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196554895 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137051184 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20056615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224360563 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134255453 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166251477 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115407474 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131994228 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184799668 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220458854 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130139146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198621011 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20554941 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155833607 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179532961 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12740743 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133753235 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149904616 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07212228 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10501183 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231369181 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160198021 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200817519 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13789672 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096764301 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229849102 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224279126 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194524442 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16219348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084348769 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156914542 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163381838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255284542 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113735953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194760526 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132643606 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105460427 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172419735 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146537618 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146110542 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136520305 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115246037 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173598929 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239852663 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165506901 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112082288 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137049674 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140335881 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143449094 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103674341 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267178138 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192234779 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159076216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094797351 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123911559 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186779025 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159495421 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142267856 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153757512 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11777702 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167345535 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209658959 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145060423 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172596657 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179128704 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113497324 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147645058 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169726437 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155670243 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228628357 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15430883 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073504619 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15260875 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129473069 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106565886 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14430104 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100651581 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233418412 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099659113 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138745167 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140141638 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135741185 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137455719 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195555694 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201847045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129843263 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066810946 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130449783 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149521042 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175208833 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112520858 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134069512 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14737428 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104948585 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16748942 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075740734 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151757406 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103873939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151854074 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16182075 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100614988 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154930471 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103264015 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127441191 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162798443 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218655736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115231992 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082710139 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224978408 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154948061 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131831485 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175098309 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213688723 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101650385 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128501539 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204702051 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241914428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090223954 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221439533 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134486287 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108493463 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088893489 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15504341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139014384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14839317 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107816179 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152754726 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225727403 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075342149 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121807725 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166660215 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107182994 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081944833 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139338699 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127753434 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120724677 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103053343 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133698297 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194746138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15433424 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134250483 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154676948 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124324715 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199035868 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115170625 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130786059 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129834683 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070236002 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163336374 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217239534 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080321976 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223247884 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154072942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130865965 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148177729 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108587895 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168077618 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07932604 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096594006 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173756185 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138546563 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136335256 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18569842 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130720548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154018891 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151094756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187699301 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161455824 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161526291 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13367451 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088063808 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139593717 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179145672 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073414595 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121073115 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084241069 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130272688 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122888447 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084207054 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197412688 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156313808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127015232 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140071857 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099155395 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204465497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077860848 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185553793 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148317505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095506366 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211883466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186827988 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190631359 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101203148 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201963838 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071686577 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09987098 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092931937 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180507432 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084003847 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110565604 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145401801 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179399112 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156024937 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191664218 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112710777 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149281811 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213104628 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072528223 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144058972 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178536471 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178914209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1331674 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111694005 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100508746 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201102244 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136299267 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246983012 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143207457 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153348879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1815417 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129641611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106102849 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107324463 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191551892 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133924757 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181382644 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125657336 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114811784 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138157203 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082363574 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130848504 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156874375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147146902 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18875596 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142815177 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160993796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103139225 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145800543 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152604464 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151554432 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064863413 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147906138 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220882395 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121207258 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146410463 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185267608 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105786868 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153518352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23878021 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175302 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111057309 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137841986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154435126 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158053793 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146771931 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170335695 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138444595 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163037105 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138568748 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111132179 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088159894 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12522258 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134065215 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121903818 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140196875 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145640503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095018739 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186441331 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139455455 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11176103 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146342646 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125036244 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117172203 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098000898 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235592736 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150633425 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23496706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127651427 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180070322 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225987692 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101561119 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080410088 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107783212 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170274496 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08465302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188921766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098425776 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132200376 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155651251 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198520019 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096282452 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095125582 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111750833 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18982529 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112932015 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124427003 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133326213 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222374044 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130489313 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079935698 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154264958 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132384539 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104341026 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233107876 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08810722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098745548 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101620451 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081960213 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183561423 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189130641 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108978619 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.132856629 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142878275 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173877981 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15910143 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128143188 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100650661 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142289594 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206051677 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158653421 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09098273 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139674942 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186564272 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187829844 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133320038 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122713815 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232108133 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187450886 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221892351 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116288622 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143984708 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144051618 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110342175 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197793116 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11033072 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200976169 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110174653 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166668488 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132218486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120350912 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15820059 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126874619 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115661438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18012788 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149593027 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126949872 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080290303 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146196408 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152258065 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134793608 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101410773 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169694085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073480651 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193603997 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203618774 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108354756 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133661543 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123388668 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083581481 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136104078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131764194 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113040116 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119630251 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229679045 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117674108 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181515174 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198168362 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142770372 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166902262 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127214867 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664423153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079326195 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212457312 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148154121 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236327869 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125272278 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14695194 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139184955 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1526426 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174807003 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132687734 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204429989 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161351577 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148292797 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106292276 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131325537 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139549214 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092300336 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133431079 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142970542 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145182446 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127953781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149971248 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15542891 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109643675 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122613805 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19153992 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145277745 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200251777 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17035583 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085471353 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147278279 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196247269 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080502773 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177466281 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188727681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13593375 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126009664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107881833 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107369134 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233589631 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100145978 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194753652 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152590483 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138157298 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142543194 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.174002176 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162925025 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135411367 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154974532 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122921619 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14054004 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14561398 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086058077 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105091623 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134930113 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141289684 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099968466 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130012335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144705577 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184078357 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097192643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097114512 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130154849 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20220306 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237019793 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090317826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109725433 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148220195 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1419616 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14479884 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154899726 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082914633 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110015775 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109475965 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113602219 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135484468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142814256 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132517984 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138740572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2010421 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111430122 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24962622 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096454971 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13383173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069759796 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10599962 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123523907 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125223605 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10911882 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127224798 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234269408 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123107969 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091081614 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120533489 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074224149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110762029 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159098963 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139077241 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150587351 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125312964 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063271392 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138029824 seconds)
  done (took 71.247144358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131377949 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103203209 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117626966 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172411233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145472122 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237835191 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182049812 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221680855 seconds)
  done (took 2.404697878 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068799262 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116201881 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101934081 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115357125 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088569664 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068447096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293833182 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108913967 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066763902 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113371489 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118314557 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091251284 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46807489 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066285836 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094124449 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083977269 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067658012 seconds)
  done (took 3.216416114 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426187441 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630049359 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449909346 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073317909 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.912347983 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10616957 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.414269531 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161867887 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091135829 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430440693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.723632474 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147314208 seconds)
  done (took 17.661919498 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074112699 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069006076 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10841789 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083776756 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098181706 seconds)
  done (took 1.530439089 seconds)
done (took 114.479980528 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079222755 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341987302 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052933155 seconds)
  done (took 1.524938543 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082044835 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084486525 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109838197 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082782428 seconds)
  done (took 1.463500389 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074829282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076739537 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110406019 seconds)
  done (took 1.363663115 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277005978 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163980504 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087916196 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082205343 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07730789 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104122726 seconds)
  done (took 1.367776433 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072085508 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074719531 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098441409 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076384885 seconds)
  done (took 1.419209002 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075802385 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052189916 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054921092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081487117 seconds)
  done (took 1.368079967 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090001364 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105095995 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080905456 seconds)
  done (took 1.37699119 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106937799 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11210375 seconds)
  done (took 1.323213696 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08123546 seconds)
  done (took 1.18019327 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094745062 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138221734 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153916002 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136134278 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164600254 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13597846 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113858737 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087421541 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103088565 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114298757 seconds)
  done (took 2.347224755 seconds)
done (took 16.436828705 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077164911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.487185318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360254462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116524355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667924179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356163437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004127872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118783975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119708196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093781781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083769234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67436304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967184802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.444490385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954411969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.410529687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675959931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06794006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093247431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068163429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962068267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093148584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067885352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068450641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675871355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370494201 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094292395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.40995008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067203429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094722986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354671398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09368301 seconds)
  done (took 16.289304783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070097947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144429426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07270822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083308231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095956778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069562463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097306538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069250792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152996241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067729501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110619461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067444288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097785743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069213465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086355131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094284415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068066354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068364524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093979215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068427377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112313593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067373881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068221066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094458448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067552677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105521949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068707755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068003401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094485155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070336647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097282997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06854834 seconds)
  done (took 3.834336873 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113929612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151594455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073558108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12818415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112503734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095879819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168757926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092673641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153361945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0677886 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11028635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067959569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127416328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068273898 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112839381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068615364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06914472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094161017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067891466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094242294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086945783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092836028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068777013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068303295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095068033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082037968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093715441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068625896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068189199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096586805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071445462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094012692 seconds)
  done (took 4.137669596 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071909526 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075047418 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108121623 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083187371 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095663858 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071305371 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073181645 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09532379 seconds)
  done (took 1.781194254 seconds)
done (took 27.142652512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077789187 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069928373 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098706555 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080456217 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.09918041 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079083846 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067654561 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100738963 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076177896 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073532525 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102015378 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067730538 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098049464 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06738093 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074975561 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093507644 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079735576 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098124628 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079019398 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079339843 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095824774 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077007273 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100173437 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079409653 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105978734 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079329012 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082070796 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099357395 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069793328 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096709309 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076576196 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08355094 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095186777 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079552575 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094293224 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067843868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067149781 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094081696 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079867206 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100364608 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070871566 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100379583 seconds)
  done (took 4.661633469 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088010643 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091076651 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111277228 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065125904 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096629029 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065116598 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114570001 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063214177 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059834742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114876994 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055815767 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059213884 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089201442 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053740946 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059004885 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056847668 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088698209 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056025082 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059652515 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085940624 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057819832 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053991904 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086388447 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062649531 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056745531 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.088107864 seconds)
  done (took 3.056641612 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075307915 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083568905 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11364485 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128066509 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131163519 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077299794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10483814 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08791916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112682999 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067271184 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072114676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121948939 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087595148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100550829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067753593 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113997898 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082029032 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068956222 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100535329 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090996104 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110755886 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078524223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119091341 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081176775 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067223979 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096186238 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07213682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107943384 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072877798 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077061722 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099035901 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071245199 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096292167 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078795654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072419538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095891318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089264532 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104574518 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078132901 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068653056 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097957539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068554352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114775764 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112356027 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094233545 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075135285 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074380328 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103688186 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067907783 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112367253 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07693518 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067168541 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097451584 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066575233 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094107334 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081098895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069190875 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096606394 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077144808 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097514336 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080500145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071620508 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110210652 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067468132 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101994656 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067165935 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068916474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093197845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09171429 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06953608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135143776 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068668288 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09513862 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07634413 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101560431 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073667289 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067562866 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109521488 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078370159 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097656685 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075724433 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071033959 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096864028 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087600291 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096111622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069820526 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068744098 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101119942 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070496732 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0954836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080797312 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068029053 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097176507 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084597098 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094230878 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069787071 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074159682 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099487683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.076392134 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105841642 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073149595 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095318824 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076537326 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068052288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098005193 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077333085 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098906023 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066340781 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072659716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100535578 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068151288 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068870787 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097734688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069225722 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103477095 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07421977 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072435455 seconds)
  done (took 11.283234499 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189539165 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183969271 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070165446 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177954733 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076483295 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107797759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179354539 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095998307 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096619382 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068628698 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069278355 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129497479 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124463912 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106610065 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105443221 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067834806 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113010791 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104401706 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181662278 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175346608 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114782225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07619646 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069682529 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096899096 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069454745 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105398657 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083866889 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102811787 seconds)
  done (took 4.27801431 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080889751 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12926726 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074167442 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088665838 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118724167 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068127914 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10062888 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068979645 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107740522 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079943996 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095290275 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073503403 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074942364 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105061758 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067915713 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105063797 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077885875 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069104985 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097883768 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073496522 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104871532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080574449 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099410599 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06776163 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073866594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094608673 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064460666 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113173007 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067729166 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116990893 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066104395 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073433723 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108737585 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068322552 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095485811 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071035681 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070433142 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098865625 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069517589 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06617664 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094097912 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057548558 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066692772 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107807174 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073296452 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087120199 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073662417 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073128215 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100416421 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.0655652 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097788655 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070192138 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071074477 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10406066 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072169645 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072978187 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099933908 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065635608 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103131111 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07126823 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064623643 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094058459 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072263677 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066494972 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10315349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072477579 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095049638 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07122963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072791725 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101595209 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071652752 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070318272 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093312234 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070163551 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100273592 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072224069 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071380485 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094606469 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067654174 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068397627 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083755767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068048551 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053781479 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09876595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066405584 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06699899 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099236077 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073628508 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109173833 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068724815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101681444 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068781272 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066822014 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098577298 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064567424 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071378943 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110850382 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111339994 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067632132 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065855137 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110147483 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07239928 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067185153 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083738225 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07426489 seconds)
  done (took 9.807568723 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094557002 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092153097 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09729802 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08291276 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123480332 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092773682 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103247316 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073446711 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0688258 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11278435 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067837281 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104048967 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068550085 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076719041 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123785779 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075163602 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097551224 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076412269 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071682094 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135211998 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083226386 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109677837 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080703479 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096162498 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07287417 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080140463 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124597497 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07957385 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106295041 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084378509 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079617479 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122795753 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085597046 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099958045 seconds)
  done (took 4.289444628 seconds)
done (took 38.483997445 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211629192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422104471 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191809729 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.087571882 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.198030401 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.222037894 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203048862 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194180258 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.398059787 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19185352 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440344954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842056371 seconds)
done (took 58.741897904 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.195763296 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332821076 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461103116 seconds)
  done (took 3.929541988 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.633572939 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.077254731 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45208619 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191405307 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203176222 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500637769 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.785004065 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.025279446 seconds)
  done (took 27.370289538 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.194845457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.554142214 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.513347009 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.508999672 seconds)
  done (took 17.90760998 seconds)
done (took 59.173368705 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.187866646 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.232659493 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193308518 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.177005394 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299309953 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.21224992 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.591837891 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.19850923 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.193029038 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.190921653 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212719928 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.19385057 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213283947 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.604263076 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.192562985 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194288163 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.273533826 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.721237041 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.580079317 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.201722229 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226617247 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244932073 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.195440995 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195153217 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246880582 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192585113 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200172954 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219085812 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.392764524 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195727025 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.282024875 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.730582585 seconds)
  done (took 190.323936096 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.193007576 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.193207167 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.264770153 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229285474 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.610502863 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393761279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329071098 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.661562526 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209578648 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203450542 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.530493634 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194207815 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.583824084 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.157874763 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202884206 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.294664858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.455302527 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.537877669 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208893118 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467039748 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.204066816 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.549112472 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.481517469 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.44458307 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.193322583 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.205252652 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218490284 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218952744 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386871894 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.388515986 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216350748 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233588285 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.758108819 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052513769 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.197882149 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.206378708 seconds)
  done (took 150.014356858 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448034861 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19434865 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196265782 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194409134 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194376778 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223113632 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.1942946 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.707024111 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720750952 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693200601 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.448010839 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255647281 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194668731 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.423320943 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197690949 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287070907 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208028057 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195358127 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196844153 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210773556 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.223310344 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195930502 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196078704 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.724212559 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210133625 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.343637542 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202297872 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197159711 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225779616 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590139024 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19836283 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227071709 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.511325768 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240670905 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196984634 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.496172057 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.113222375 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305012167 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198559747 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225979716 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197481043 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464214631 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197512144 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198522169 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200433752 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.781258543 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199138668 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.711656913 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197916988 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.08942441 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198307385 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197591473 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.412595864 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.67139219 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19991259 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198225206 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200962125 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197842415 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197501676 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227123736 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.418224249 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295193747 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199759179 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201041259 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227450319 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197832511 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.279994833 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200141457 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.646701768 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.25449154 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307917215 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.725484259 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200058653 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289633188 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317120464 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198744773 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199317114 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19799925 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.1984309 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303633157 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198833823 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.590584096 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205630289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20189268 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257675191 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199643091 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291308185 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198574408 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493295349 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20075722 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198762922 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882984066 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290793195 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199864726 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199741702 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199568012 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.589932358 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730087748 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.386305152 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201557575 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.411333031 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19959147 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.602013187 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.706897891 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.796209235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202296036 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305072419 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203741464 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201325628 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199469567 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228369595 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200987229 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258388665 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200719152 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596181583 seconds)
  done (took 343.731653048 seconds)
done (took 686.654463764 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883185781 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.863020877 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.967939318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.859394171 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.842633127 seconds)
  done (took 10.560563897 seconds)
done (took 11.704387009 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.380378101 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38326775 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25987162 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385089599 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231404043 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399823217 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360947909 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223938107 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300053485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276692533 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301358751 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249775851 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228857733 seconds)
  done (took 18.125736141 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.505525452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506031194 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267951556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503869705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242151043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517125799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397802706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401179336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391669297 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217752604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216151293 seconds)
  done (took 16.313498107 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518006731 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506072635 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270055677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516460167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242415715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524754333 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395981864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409044049 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389362681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216216049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216280646 seconds)
  done (took 16.351186406 seconds)
done (took 51.935428972 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210333934 seconds)
  done (took 2.355944475 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244387957 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407488724 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226057811 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21443214 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212719255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212039438 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215177549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211874391 seconds)
  done (took 11.091277307 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207855956 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208462286 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210284385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211199656 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210836357 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209298797 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20784568 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211123278 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208956591 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211323202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208128412 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212157743 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209546839 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211273018 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208362965 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211246959 seconds)
  done (took 20.505386475 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20995338 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209290735 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20923864 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209550432 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20928469 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209353107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210557028 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209269378 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208957265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209269027 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210230586 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209622972 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209881521 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209876561 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209446748 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21030126 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210256207 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210066692 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216216807 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211402337 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21173306 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210986229 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211507812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210588808 seconds)
  done (took 30.195752559 seconds)
done (took 65.294487495 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.190296196 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.768930687 seconds)
  done (took 9.108095286 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.21215401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21247107 seconds)
  done (took 3.575145377 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212834472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21271105 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21255627 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213135798 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213187995 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212461629 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213387349 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213280575 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213104258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213484529 seconds)
  done (took 13.279207902 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212678946 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212938932 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211127428 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212951375 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213262051 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210460167 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213114728 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212549527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2139806 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211326317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214533633 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211928248 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213997722 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211615981 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214224285 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211135527 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211380354 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211963202 seconds)
  done (took 22.974428703 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21448306 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214492057 seconds)
  done (took 3.579043972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.211285146 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211609929 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212085365 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211987277 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211624946 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212014983 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212467482 seconds)
  done (took 9.633952278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215279421 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384340644 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.459117172 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.801257943 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215421821 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218735142 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.07056662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218498567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221407643 seconds)
  done (took 13.955666749 seconds)
done (took 77.255075131 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.209092187 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.210630869 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.016241506 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215675377 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.2263008 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.507172594 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.224911518 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333315694 seconds)
done (took 37.094713891 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.211382 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.927023273 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.930783162 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.22503791 seconds)
  done (took 11.234384429 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.197262429 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.120212916 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.212460468 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.204163847 seconds)
  done (took 17.885228346 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.812339576 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538846177 seconds)
  done (took 4.500889896 seconds)
done (took 40.983414947 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215543101 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213922652 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215617233 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213102937 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.212951203 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216410802 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.213543153 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212938746 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21568667 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215974951 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215596743 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.216908731 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.215714236 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216464263 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213231214 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213013144 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215386868 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213125765 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213387293 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216457145 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213830749 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215934944 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.214002483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21303972 seconds)
  done (took 30.302923937 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216008446 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21434794 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216007986 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216587846 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21415134 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217092371 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217070264 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21409945 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216872395 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216339903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215138963 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215878383 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217674805 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21451622 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217058297 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215147026 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218594995 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214926689 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218305292 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215596273 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.217974375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216149324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215040758 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217433509 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215329793 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215719184 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218363183 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216455221 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218405577 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215355731 seconds)
  done (took 37.640362156 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.222424919 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224398345 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218201669 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217945192 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218044944 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218684505 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21764728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217604793 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217737413 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218846083 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218669085 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.218935108 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218391796 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218317431 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218649531 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218219143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.218883679 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218391802 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.219012331 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217969986 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218698052 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21921189 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218450937 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219195538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218998134 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219339192 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219261998 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219389456 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220307834 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218352972 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219323805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.219529826 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219202842 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219019688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220477714 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220050543 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223920246 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226875513 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219671881 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219760783 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220542888 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220406683 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219523228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220685945 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220745118 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222293815 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220724943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22071391 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221051311 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220594273 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.219866111 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219894003 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219759326 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221774713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221385935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22041013 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220866546 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.221186316 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220723315 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221752559 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221247048 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22119493 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220337418 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220580771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222099061 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220564639 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220415739 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221167591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.221149901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221561563 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221214419 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222183981 seconds)
  done (took 89.001657203 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22085384 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2193997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218561108 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217794483 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218849855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22178254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219110865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222234131 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218370448 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.222764133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222306011 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219795546 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219729411 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223110122 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222162861 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219702031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221478421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219498347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222249504 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22272975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222217784 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220287701 seconds)
  done (took 28.013445507 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222329144 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222276518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219413241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222940825 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219858907 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222906107 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223289016 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222794226 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222992097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220136319 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221251687 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223476434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220488712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220975172 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221176243 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22027469 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22338589 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220672425 seconds)
  done (took 23.150057905 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220836718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221065408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.223867718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221340228 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222568953 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224991812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221990125 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224595214 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22489189 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221404045 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.224090783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223698622 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224404488 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22076485 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223894372 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222135159 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.223953854 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221978688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224050677 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221504906 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221302311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224062993 seconds)
  done (took 28.063474726 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224443674 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224578714 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222021609 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221753841 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222370319 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223710696 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224829693 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223212467 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224394959 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224882569 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222308178 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225337881 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.222265713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224027703 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222874938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22289652 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22514424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223185716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225292507 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222665738 seconds)
  done (took 25.633086255 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228165556 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22783675 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227590717 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22737475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227754414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.228202498 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22746608 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22845444 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228359192 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229101255 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228731069 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230262194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228596926 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228259894 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227845896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228601769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228687326 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229196117 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228022169 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228538675 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229110235 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228184498 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22908001 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228894194 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228227177 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229965107 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228747623 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229348669 seconds)
  done (took 35.561122512 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226835712 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226903475 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222987446 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225097933 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224704334 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.224568842 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.225443552 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.224810938 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226899989 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22530392 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226629896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.227312989 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226863345 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.227340473 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226749671 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.227603498 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227366961 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.225973117 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225580093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224735078 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22838238 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227498652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228187236 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225571721 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225401289 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228509779 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226106096 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226085036 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228562022 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225392619 seconds)
  done (took 37.953489768 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.2468321 seconds)
    (2/2) benchmarking "in"...
    done (took 1.247255891 seconds)
  done (took 3.658923271 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.226017091 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228404152 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.228683517 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227850493 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225903045 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229302714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22940485 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226690276 seconds)
  done (took 10.986550244 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.229019811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.229503425 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.229082416 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229720364 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230006151 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.230790439 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238865462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245834884 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.231383952 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.230038512 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.236288174 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.238213567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235155034 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230235804 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.230141859 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232784725 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.230126226 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230223779 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230418907 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230059843 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231144524 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23294216 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233409264 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.227890522 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231663765 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243556428 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238785577 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230258489 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231126623 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237704836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23108674 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.227559992 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231557403 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231054351 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230832718 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232158885 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243529688 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248179306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.240333474 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23260957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2311404 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228441902 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233663992 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.234247411 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233504231 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.231623621 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231855595 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228880285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231476596 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234812235 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.23601671 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231077721 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228577011 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238973539 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234907226 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241448593 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248094851 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235103724 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.240110425 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244102866 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.247681837 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.239977242 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235344888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.233257044 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24220072 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256559769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24265185 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.246242892 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230502355 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232179145 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242996181 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24899619 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.242117796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234313448 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233328775 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232998042 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234641749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232750484 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244231552 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25387599 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.234558776 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234090984 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243434707 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255606656 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233692549 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23353442 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234442513 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234387767 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236085744 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24608325 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250726001 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234513226 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234509634 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.235217759 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237426728 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234540114 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233973972 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236677914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231727185 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.234735253 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235077137 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238570204 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.244976011 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235240816 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2350114 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243747716 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235372634 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234630302 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245551839 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.234803996 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235636435 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.23558643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243001649 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232368146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238763955 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243050904 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235071419 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236870175 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236345577 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235512443 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245898509 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26217189 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235747672 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235952932 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241032532 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246553231 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2367095 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.241063456 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235507364 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.233352883 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234332983 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.239497239 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236205834 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238165425 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23639322 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238486613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233743719 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235469112 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23738588 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238544234 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.239337094 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237983484 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237706293 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.240475824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237083072 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238592081 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246275408 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.238417834 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239906465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23865855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23483523 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237421664 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240028809 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237842786 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239147783 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237654733 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237088159 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23759291 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23831083 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23789566 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238036696 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23876182 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242199038 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238516858 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.244886303 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238462647 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235431632 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237927447 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.238986144 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238725314 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238216566 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237727599 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242663435 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246296902 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238999009 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238782977 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243175243 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239485571 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238598491 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239598018 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242374725 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247387999 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239467181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248976477 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.239533301 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239001352 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239219886 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240602545 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238389092 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23949838 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242444583 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247663919 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255562901 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249446158 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.240535652 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242413025 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240006891 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243769785 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245990262 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2393646 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.240111573 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240426551 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239464507 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240256334 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243213853 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239602431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239962756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239946763 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240052175 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240870425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241065671 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241790144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242383059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.237532957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240758378 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240446297 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239207291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23694664 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239997277 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240887173 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241151748 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241787129 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252243343 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238457226 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24224942 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242057735 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242036583 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24000536 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241277732 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245215172 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24247897 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251192536 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259408455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243279046 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250740359 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.258321682 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241726611 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245410663 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241258494 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24004355 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.244853093 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248576684 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.242580322 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243212781 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243215273 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243167085 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242352291 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252273444 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.239885129 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.2421618 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242745404 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245763396 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.240542874 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244452423 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243638636 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244396365 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24642596 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242870277 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.243650524 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246270823 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243404659 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24403852 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243766559 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246394822 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250343548 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.250963216 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244573349 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247121714 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244344107 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.24717867 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244980195 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243457212 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242551063 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258327511 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252000667 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253449429 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24744907 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243773271 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252356167 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245807223 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248806705 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24447 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245480022 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244725553 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243233326 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241758634 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24690594 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.244324374 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246355138 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.246321768 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247971353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245064396 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.244637619 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.245060511 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24544073 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245174182 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.244853412 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244622702 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249829639 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247792329 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245449864 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245199829 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253923589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262121389 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247477031 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245137789 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246198275 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244835148 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247152797 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246316785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248744653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253667769 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249310776 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255876534 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247162955 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257725786 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.247432294 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249850501 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254125754 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243766959 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245859189 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247259145 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246541716 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256947616 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.263225429 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248203083 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.250212051 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247281913 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246686981 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246823528 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247136588 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24654027 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24818924 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257938203 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.265344701 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251125877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24987835 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243905976 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247984764 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247203092 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.24676539 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25373329 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247313177 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249698506 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.24719071 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248867995 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246956077 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247979597 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.247648862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244653062 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247467509 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257635201 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265561187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252272591 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247289433 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261155229 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249007138 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258189358 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26449023 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.249191321 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24845141 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248382337 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251786836 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248786414 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251518805 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.248106039 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249763065 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252161214 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248377162 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252547816 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249693026 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.24940092 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249660304 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258595072 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272156919 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250282827 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252728019 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246716185 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251255711 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253064582 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248992918 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248348558 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252107445 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260109954 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256238619 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250954693 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.249864668 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251239229 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250035607 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249107353 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250191173 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250901567 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249650409 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252720774 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250253201 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256924985 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249889515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252415842 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252723832 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25203445 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263636656 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25167708 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252191018 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250865459 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25086907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25238388 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251424972 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.251182669 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252266265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251381788 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25286515 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258029374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257617247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254698031 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250513295 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251917145 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252366112 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253246294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252029863 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251249946 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252025715 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25310467 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251230874 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253759264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250044726 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.251309439 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252799079 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251541958 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254834248 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258151783 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251893056 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248960021 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252345966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251687083 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251261493 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252947385 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264370471 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256439317 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261483058 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261579307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257161769 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252985776 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255275321 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260640557 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251872669 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25372 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.252581816 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255450304 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254136921 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256540389 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253730087 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261943596 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.254679124 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253329073 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264487228 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270892856 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253430268 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254798253 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258567428 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254621398 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250694781 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253706314 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253708393 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263554171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.274043478 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253999146 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256874482 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.251734985 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255998588 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258420173 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253787614 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256730821 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25131286 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.256065312 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254963674 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253988436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.252226155 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255142143 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255450614 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257672333 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.261636701 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.252076259 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257868797 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256064341 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255945831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256052458 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255162749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251958229 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252244227 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25621649 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255129901 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256505721 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258959942 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.25733322 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25666671 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256777536 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256516345 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259558521 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265635613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.262315446 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253619608 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255524261 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255932429 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260805723 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256552367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.255644836 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256699204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25986061 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256011959 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256871204 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256313634 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259289617 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274873741 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272822247 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257343599 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257782978 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262707926 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256483681 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253874558 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.256478678 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261630632 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.260358834 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26392942 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.258384672 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265053135 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273769315 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258329445 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.260653227 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260473751 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.265214584 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.260297539 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257684582 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257094258 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262226387 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275158109 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258268086 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26750872 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288787927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.273999967 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260533796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.257837636 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257692851 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258586142 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.261749022 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.25859198 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257457348 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258408486 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258886393 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259304604 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264249444 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260463006 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258168065 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.258263118 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25885751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261522673 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256567859 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259489746 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25969665 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.2593064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258821472 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259185976 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260279179 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2737565 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271300455 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.259105413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259429436 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256696033 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26440482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262798123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270300781 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.266688271 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.259783802 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26007581 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261473771 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260543776 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.255833146 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260442575 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.260247376 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25920009 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.256725765 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275227414 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269931789 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266817948 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261646128 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260452204 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260827123 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262534047 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25975756 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261057116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26254409 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260662155 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263435881 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260708446 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260530649 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26358641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26745035 seconds)
  done (took 744.931962691 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258771369 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257749579 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258133896 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25833067 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258024673 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259240086 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258835919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258158297 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259007511 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25837808 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257701191 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258051163 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258385231 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25847704 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257940794 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258521169 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258802565 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258628405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258058057 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259913791 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258935354 seconds)
  done (took 27.623990684 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26120582 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.258611828 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258603808 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261723187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25940146 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262061977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25937198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261716709 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261332551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259903294 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261345433 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262115268 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258593956 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259041032 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25949567 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262037454 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26254799 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260101008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262643686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260161922 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263296099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261114673 seconds)
  done (took 28.934121143 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263096277 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.263849185 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262344298 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258861505 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.263548181 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260630238 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263264486 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263444896 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263827987 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266389516 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.262433078 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.265331264 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27110403 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.268977122 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.267111679 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264085556 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408663047 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26451272 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26408166 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264369262 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262217016 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272984334 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.263633264 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.261958771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263981355 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.265157841 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.26503837 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.265243438 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264769453 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265808922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268503773 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.26599607 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264593139 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267166508 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264753054 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.26632089 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.269011423 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265487471 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262120771 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.264019486 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274914742 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.285143631 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.265988048 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273759738 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265841262 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.265312244 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269967167 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.272652716 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.262508791 seconds)
  done (took 63.374000963 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.265545056 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266552423 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263585639 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264918912 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.266173665 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.265868245 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265928839 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266290013 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263172293 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263038499 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266222298 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263543246 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26338043 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.265428664 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.26585378 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263776051 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263728512 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264175039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263318582 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264127287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264120316 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267140163 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267563148 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264721084 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267078018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263850365 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264019675 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267202319 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265561618 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264121594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268006285 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265977712 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267034292 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265727476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264785048 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267701988 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26770968 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.265421288 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267728903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265473507 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267726209 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267198699 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267538037 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268108016 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265869211 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.266220043 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265137776 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265689828 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265315424 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267667319 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268360683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.26650588 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267665837 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.26522668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26824766 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26944452 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265722966 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265840585 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.2681559 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266611433 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266433336 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268718953 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.266308022 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.268900059 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268756931 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266624349 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266622391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269861008 seconds)
  done (took 87.299376452 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269377717 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.269309031 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268864837 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269938096 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269453519 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.269969553 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270634029 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.269273546 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26939556 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269666983 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26954608 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269403737 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27009746 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26971965 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270125894 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269448067 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269399212 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270061801 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269760424 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270152493 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269596122 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270581236 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271493157 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269854199 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270503507 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270150274 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270516886 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270625454 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270403067 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270976603 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271728058 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.271186609 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271112103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270940197 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.272106999 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.271755359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27133131 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270616682 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271385303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271924654 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272099602 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270896192 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271355279 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271054273 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2713487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2715672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271608071 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.271927305 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271453942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271154283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.271987558 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271353151 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271100967 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27208691 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271890635 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271654776 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271950274 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271515909 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271959918 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272376009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272820682 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271734578 seconds)
  done (took 79.994713946 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271461651 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272267099 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.269033706 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270281371 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273139868 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269498335 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272273622 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273513035 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272985563 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273155082 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274047376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270883179 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271527034 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274043694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271441486 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270812225 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271337467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271462685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273452468 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270609103 seconds)
  done (took 26.644310272 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.270650288 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273431412 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.270827972 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272322056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274751323 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271752454 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.274591745 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274103949 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271547461 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27434368 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2746904 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274803732 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271508118 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272287147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275248463 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27201577 seconds)
  done (took 21.57663532 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.270794866 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.273692957 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.274994606 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.274394206 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.271144431 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272007853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273551209 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.271492361 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271703541 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275059511 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.273952085 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273749718 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275028326 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.274752152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271467711 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.274818689 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271930509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.272754552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.274243432 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.27601254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.272545391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.271966437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275576967 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.275399898 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.272230279 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.273199718 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.273099563 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.272495392 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.272469571 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.27542719 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.273593785 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.273298021 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.273182605 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.273139802 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.276322172 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273113599 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.275347474 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.27552415 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.276057053 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.275861208 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276198384 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273449228 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.275920046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.275606563 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.273700716 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.275689046 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.273101601 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.274017206 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273569955 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.272919686 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.276904209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27693858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.275977676 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.276710693 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.276496508 seconds)
  done (took 71.284479892 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276935544 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276691159 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274643173 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.276900083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276626123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.275161842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276922923 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275639708 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275920134 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.278485718 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276467017 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278579386 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275233707 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27811685 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276872345 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278604545 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.276269564 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275864572 seconds)
  done (took 24.191199147 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27522725 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274799008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27738983 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.275498554 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.275604395 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27948923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276657254 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.27881426 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278472139 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277249683 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276681801 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279885132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279564888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.279040867 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27725332 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275699725 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279918749 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279776469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277045138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277556986 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280025841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279664542 seconds)
  done (took 29.324297554 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.278831864 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.279065961 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.296872364 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.322451352 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.308873099 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.278738734 seconds)
  done (took 8.977942529 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277369678 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279456106 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276963787 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280576358 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279714879 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276947436 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277822687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276578004 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279220343 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278083463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277452954 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279889528 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280578223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27808499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279717023 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279291237 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276656694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27739817 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278650228 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280612984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278234115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279480757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277677895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277822438 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277170671 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277177637 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280777568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278855004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277383085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280719571 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280829749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278192644 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280346751 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278798925 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282032848 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280645084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277698917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281973836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281274214 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278622754 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281416761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280102617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280926626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278632682 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281594946 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278659497 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278684628 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278278727 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278963137 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282542227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281000181 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279260482 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282328481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281911955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282142234 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28268216 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279859527 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279595477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282431166 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279911171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279374981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282056493 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279506022 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281145184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282843513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280375894 seconds)
  done (took 85.6689378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280627294 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280372677 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280119957 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28149828 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279667733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280315221 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280027957 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280011865 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280117356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280419556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28359074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28060667 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280114084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280819659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280402928 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280429996 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279798009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280326111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281420191 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284334475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281272194 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281104054 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281548482 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281213057 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281413629 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284370501 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281613383 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280897828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282637798 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281161738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280969451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281953154 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281083736 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281152797 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281222279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280856638 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281286507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281984614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282351854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284884827 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28178262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284638123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282463379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282289255 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282478934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281337842 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282593463 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282579977 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281535756 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282318375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283046514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282662835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28342549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282607579 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282059933 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282311197 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282081309 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282917074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281989404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285229207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282932885 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283411373 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286369563 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283304024 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28315082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283124716 seconds)
  done (took 85.823960881 seconds)
done (took 1736.767028603 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.362119505 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.421131984 seconds)
  done (took 14.002246472 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4479003 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.402654461 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.284970686 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.317826702 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28435179 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297464955 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.30265484 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.285022204 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.285240843 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284924915 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285256027 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474472251 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282796423 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285685083 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285627648 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377899585 seconds)
  done (took 42.416246805 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.313550016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29241166 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402421471 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.309155832 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.313645411 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47031705 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.344286063 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292845404 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.459754545 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331731331 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.894168869 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316355344 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29160107 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.413306363 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309562713 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470677106 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534451715 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.830180852 seconds)
  done (took 29.812216186 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.733730396 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.28534474 seconds)
  done (took 9.240883735 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.288472492 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.309010993 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.285221108 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.310593389 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.299994143 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.343357184 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.348296875 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.341691627 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.328660599 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.343317893 seconds)
  done (took 64.432587893 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310036962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.291229417 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.291865445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289311053 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.281893597 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.282966181 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.289666492 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.288867481 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.871060598 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.41688628 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307335404 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298096227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.291129855 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.291210894 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.288099161 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.327735016 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445638792 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.287934462 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286595025 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296657392 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291309835 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.375302695 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331858959 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.290854488 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.414715737 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.892584971 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295434954 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298094934 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427771541 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.288570519 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290408327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291879809 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293321086 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.871714348 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.807087727 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.299916076 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314974017 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.300273785 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.290104574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.416120502 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292728472 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.299806327 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.283546165 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.774543851 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.453338675 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405676314 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.554935346 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29432631 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.292318122 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.353111983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293707389 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29296023 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.321270321 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.060084523 seconds)
  done (took 109.014396051 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.321951204 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.773674434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455148239 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.303332516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.069478447 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979690342 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.288658214 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.573696021 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.325413026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286373828 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.625468492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793651919 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.290061553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.307870805 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.929176684 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.342365961 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287336926 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.044624716 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286009435 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289763859 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707628413 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312715319 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287579578 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468676801 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325337523 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757745676 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.772205977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.765230379 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.287706729 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.286004227 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753908368 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.289912544 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.299077591 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288843866 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56536362 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653575707 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631946757 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.288818022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311001417 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287902316 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.307779685 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757366615 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.646597741 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.291188887 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304184273 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750800641 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.287503314 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.29091711 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.286145886 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487994371 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.019744564 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287082039 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.781361555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.290820343 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.556756769 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357817976 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.342020211 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775456502 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288538146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.376300521 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306434462 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288631431 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294511434 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290637555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288385178 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.644437958 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.403012305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292191509 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632984712 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.748644685 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289812951 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.813794092 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.205505341 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289320845 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.360147906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.28850363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.884080022 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78295064 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298393678 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288696104 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631268285 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.29209916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.616485657 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303420314 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289047416 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720175048 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308141392 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.356678691 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.29349267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.291322029 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.918338683 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290322012 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.560289506 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.317079613 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.290352861 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.289971773 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.337529836 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289875157 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.289335597 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.292044464 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.815844718 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.29352462 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.598027777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312374701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290792605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.292332601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.293440542 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.289685788 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507360669 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.818512789 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.298230937 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292428756 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.289746445 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.293209041 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.429586184 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.296266025 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.602947553 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.294549721 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290802486 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315659874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027814019 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299106336 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289867054 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307206347 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.127134416 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.498798471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310376725 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.291858359 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292089673 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305837928 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.721775529 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2930971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.330475154 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295111384 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995382746 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300626174 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.293384873 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.686810355 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.294999295 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292989329 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315595828 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291374766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596661626 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572185273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.334747536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.291809862 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.307563767 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.980712394 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321075558 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434131242 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311277413 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.299906171 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491150429 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686945305 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292848777 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.850323068 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.294943387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505089651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.292722867 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628441203 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784822404 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.295016486 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301073587 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001075178 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974567163 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.941005961 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.294734783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.626132793 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.291185196 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.747224877 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.293158097 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293479131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.724140207 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293458434 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.294969623 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.294155578 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.295426298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.4333348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469004344 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.248817531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293577726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767387609 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313789494 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294265974 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302749664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.296312092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.6482511 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368113425 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.299769127 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.321628574 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.294669407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299360389 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.777737862 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.242868384 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.297193762 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.449232088 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930377081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.297110796 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.29584036 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.961528608 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.497752651 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809091573 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342967742 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.614199668 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.305402725 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.335529755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020619524 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333064036 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807268392 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295722999 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.295543644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883449397 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.297687423 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.639277546 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.295928701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295607432 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842187659 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29702701 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.298182461 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.732874312 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297262794 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542394172 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.296501368 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.320820231 seconds)
  done (took 1102.919802514 seconds)
done (took 1373.057155604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.296687727 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299987143 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.284510245 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299748435 seconds)
  done (took 26.416845519 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.306316416 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.303569122 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.304032312 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.302374402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304913188 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.303322474 seconds)
  done (took 9.062134169 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.401300329 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300625198 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299436321 seconds)
  done (took 19.238824756 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.522677348 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.564968623 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.670393778 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.463335857 seconds)
  done (took 10.460136926 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.309619825 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305228113 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305627004 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305704041 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.306953589 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.308256601 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.306464435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306458523 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.307144593 seconds)
  done (took 12.998370583 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.264259311 seconds)
done (took 84.677374377 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.302032565 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.383798559 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.823927366 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.28548681 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.289475603 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.963044587 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.305041179 seconds)
    (8/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.912606095 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.325550953 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.548705739 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.414524523 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.172072918 seconds)
    (13/309) benchmarking ("sort", Float64, false)...
    done (took 5.606146303 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.155446784 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.339543332 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.675926812 seconds)
    (17/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.299930448 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.317387819 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325854249 seconds)
    (20/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.664695188 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.287000721 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.742465905 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.144302804 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.620535388 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.599552564 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.408006506 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.708490411 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.490591715 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.333997937 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.770999375 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.286427292 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.317480478 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.831552929 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.31076668 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223382939 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.34947128 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.30060552 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.408717834 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.285773074 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.893756188 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.409152843 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.407423602 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.430175299 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.560832203 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.199271598 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.37582033 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.815315871 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.728606747 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.499764115 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.341471098 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.300126168 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.722133873 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.500889252 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.31822025 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.412346249 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.607428005 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.563147426 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.141045683 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.215257821 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.357888861 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.704262265 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.615301373 seconds)
    (63/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.317249679 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361679491 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146822758 seconds)
    (66/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.408986577 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.235245285 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.703665271 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.562286607 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.303874253 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.404352263 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.935522176 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.610473864 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.302997436 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.655708176 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.902185197 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.530225794 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.162077226 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.381969874 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.68161535 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.348648101 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.306973848 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.347675405 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.330570855 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290573052 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.818382161 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.317756303 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.883849364 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103576311 seconds)
    (90/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.938986419 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.865873114 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.406049121 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.411741724 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.311462881 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.844458272 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.241188072 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.75830321 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.429876509 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.328769427 seconds)
    (100/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.638289952 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.494005112 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.400382337 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312479034 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.733468825 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.325923928 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51617832 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.776000519 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068669252 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.691466584 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.549262362 seconds)
    (111/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.953688725 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.691403296 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.305647415 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.315530743 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.517382223 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.304158224 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.290904945 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.745140371 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.389186613 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.856994494 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.371233634 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.329191604 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.803364298 seconds)
    (124/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426712007 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.813929516 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.329304851 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.581265703 seconds)
    (128/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.924354615 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.592979587 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.379994741 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.085904214 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.563627663 seconds)
    (133/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.943787911 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.309564908 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.320831236 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.467538224 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.254155281 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.524544467 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348549073 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.973039628 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.757291369 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.082604845 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116579217 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332964875 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444093006 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.038579318 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.554397931 seconds)
    (148/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.690731988 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.984080943 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.331473374 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.32783677 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.384335569 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726881142 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.407678343 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.951149143 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.806917102 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.894688228 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.669608709 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.317897383 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.35999773 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.371090955 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.317459336 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.9097382 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.316541732 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.388795288 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206219657 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.393274997 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390898328 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.973018519 seconds)
    (170/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.9233839 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.674461903 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.38811576 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299706296 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.619211455 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.085365149 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.14754602 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.159118219 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351711581 seconds)
    (179/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.430737256 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120328506 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.739266164 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353773032 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.313389897 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.295259892 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.421235816 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.311784666 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.337535924 seconds)
    (188/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.496233697 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372945511 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.350175995 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.406013626 seconds)
    (192/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.858051662 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 4.360242136 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.83509878 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.648747034 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.961215574 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.311446497 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.311726808 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.319681951 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.446098292 seconds)
    (201/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.897075951 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.676155004 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.311288716 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.768959245 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.940081733 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.396976997 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294051353 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.140227045 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.380624274 seconds)
    (210/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075119888 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.365377602 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.48931765 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.109000786 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.338733362 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.31145995 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.799234202 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.767755789 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.884397786 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.859688757 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.394426138 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.5199255 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.310069185 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 6.344461771 seconds)
    (224/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.97660998 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.541739401 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.374909574 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.670143995 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215486814 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.979401206 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.322308976 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.738666354 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.339613963 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332727877 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.335849377 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.337414063 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.152963773 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.343455455 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.351490331 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.186107987 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.338814082 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.311677128 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.175493876 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.896820534 seconds)
    (244/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.710096249 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.666007949 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.29836299 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.911933221 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.730835758 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.326949895 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.3417881 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.734456322 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.493632762 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.292330819 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.531137506 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.230074137 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.362588168 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.302710456 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080703219 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.409328174 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.743994819 seconds)
    (261/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.317334245 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.47691917 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.33878856 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.72394879 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 5.341937712 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329812625 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.703417263 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.314297834 seconds)
    (269/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.374843464 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.312186541 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.330454764 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.35985993 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.57743415 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.917425797 seconds)
    (275/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.815824459 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348462086 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.395422751 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.328236034 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.701352043 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.663490975 seconds)
    (281/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174708498 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.944789812 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.331708391 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.461381296 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305411208 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.363502911 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.311661094 seconds)
    (288/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.453752123 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.395202802 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.394267299 seconds)
    (291/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.311401168 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.631426349 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.426621276 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.484673596 seconds)
    (295/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.066123762 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.336033071 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.481240582 seconds)
    (298/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.313311602 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357487834 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607327281 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.422795974 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.3162633 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.014090635 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.756535431 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.338647259 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.395611175 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.175960009 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.300429248 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379916117 seconds)
  done (took 921.513219772 seconds)
done (took 922.752265224 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.346300304 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339589985 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.323837131 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345952742 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.435200093 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.351761063 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.334890608 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.32651907 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.372240262 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.373785359 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.322428947 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.350077306 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.325130444 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.32468246 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.323781523 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338228356 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.368127729 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.326230531 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.340938253 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334872605 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.340892482 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322749504 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.374027064 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.351419191 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.328837523 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.327820606 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.326851845 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.343905868 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.436846827 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.327851905 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.328595246 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.336542927 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.369511769 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.325773793 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.321009403 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.344153996 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.336577098 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.336086469 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.329669636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.357707815 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.748600254 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.325009718 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.327512713 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.327388502 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.326997284 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.332813288 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.326998618 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.3321884 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339052749 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340449308 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.734757757 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.341450089 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.329694571 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.327817316 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.338361447 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326096543 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.329882265 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342449813 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.345464657 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342253046 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.374852524 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.334972679 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.330418974 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.344939249 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334030065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.848955906 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.324600292 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333520584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.801816585 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.335466605 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.851968137 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.337114277 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.330206544 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.341135815 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.358967283 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.380734536 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325425595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.327554876 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.335174465 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.326424487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337446951 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340501031 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.332890563 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.329378343 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341907276 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.356126517 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.339031728 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329242535 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.338311066 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348600534 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.335513686 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.339408619 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.332609876 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325094313 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.339162814 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.333189317 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331644979 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331194512 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.334230629 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.339731767 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.80674353 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346280558 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.326014862 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.327206265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.328975951 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.343561001 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.753211075 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330233418 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.352530747 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.37773394 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331886626 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.377929704 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.335170737 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345636332 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.339670099 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333926624 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.326546189 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.384299455 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.747197818 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.344873124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.332325975 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.328873986 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345003996 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.332659938 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.32741949 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.392705611 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.334366963 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343515711 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.450488255 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341737278 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.36113387 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.328491195 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.334499423 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.359030311 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346980756 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.36128212 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334923675 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346536939 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.346664558 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.328339331 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.342256486 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342425161 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333452415 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.338542693 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.327155002 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.359439767 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343607773 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343389194 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.352523029 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.452045466 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329215859 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.385882254 seconds)
done (took 224.917222602 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.393459151 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.326224974 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.42215878 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.329084917 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.430879173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.42990982 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.326285111 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.326452147 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.32640609 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.70916919 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325367397 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.326976793 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.321428618 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.325979646 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414908745 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32938095 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.326266396 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.672196267 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.329648612 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.404628004 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.328651424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.327488851 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.329474655 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.713598037 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.324774245 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.32562784 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404428319 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.329694892 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677509633 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.330196892 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.325999819 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678638722 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.420722507 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.347107483 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.339465763 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.337776086 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431239503 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347855376 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413071907 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.413493152 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424086574 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.369037949 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.332695574 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.326362991 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.331712382 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.331907303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328439464 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.357646391 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.323992909 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.32906607 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.673383088 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.341171688 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.329926393 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.328971805 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.329561458 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361032413 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.329993678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.332675993 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.422406464 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.332229136 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39443901 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.7133519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.712024007 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.331721922 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.329346979 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.330587792 seconds)
  done (took 148.254470874 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.398634782 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.405592633 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.444190544 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.333548559 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.382739289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449477267 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.333296492 seconds)
  done (took 11.010960351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.338565779 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332251349 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382805417 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382180385 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.332080219 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.507336341 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332826636 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.344767934 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.330245208 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38667168 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.333859598 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333575067 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.339457289 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.331707239 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382800289 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.344317369 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.449082233 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.334868608 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.333954801 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490216391 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331848713 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.341868797 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.385974828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.345152582 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.333902487 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.340629071 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.979416969 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334365394 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331741449 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.333767956 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331904207 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.373096435 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333794972 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.333136328 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331888761 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497936285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.334413526 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331801753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.334517295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.330397324 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.335336566 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.335272611 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.335217227 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333563819 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.335275665 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.35908424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.334884249 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.335140466 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.335029783 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.337036923 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.386799026 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33556992 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334789707 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.332920438 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.391891149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343187897 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.336511896 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.333563328 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335966723 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333608841 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.494106667 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384684584 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.336089725 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384993705 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335276884 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.336334613 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.335697732 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.335671647 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405090111 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.336180334 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385278787 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33276563 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.491927946 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.360243007 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337729974 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.339424154 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.33942523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336634759 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.333220891 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.342794859 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.333818122 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.33771523 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.343063023 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334645812 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334479962 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479081067 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473949493 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.334443746 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.350680368 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.344014691 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3349342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.390772305 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.337522449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.33426838 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391744905 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.453035617 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39130049 seconds)
  done (took 153.627995385 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342512835 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345512111 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.339618146 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.353745558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.338686134 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.338360521 seconds)
  done (took 9.327501989 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.340741698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.338654719 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.337522701 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.337899807 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.339178607 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.339018006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339473484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340915323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34209159 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.338674441 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339530904 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.34027841 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.339696806 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.339919587 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.339532966 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.340017589 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.339515887 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33631144 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.339060296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339824264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.433913378 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.339647493 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.339368983 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.340910854 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.343107999 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.339134095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348103482 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.338929397 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.339164543 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.348777303 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.342667739 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.340185273 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.341264498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.34675163 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.343960945 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.341389879 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344856547 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.341728282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338175044 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.341196667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.342260081 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340928033 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.340844753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.341602453 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.343275327 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.346451051 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.345873444 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349849764 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.342140249 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.342010811 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.341716499 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.341487468 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.341183653 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.342386648 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.346620846 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346296466 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.345756112 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.342472289 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.341565206 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.343525498 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.342963036 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.341668756 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.344742441 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.345746058 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.348324798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.343839391 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.344325665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34613696 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342022931 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.341373661 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.343012918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.339391273 seconds)
  done (took 98.985717836 seconds)
done (took 422.467340862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.807942372 seconds)
  done (took 8.082319495 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.443280048 seconds)
  done (took 7.718940037 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.994626515 seconds)
  done (took 22.275336832 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.420339497 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.346902947 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.36549883 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.345110987 seconds)
  done (took 26.754016643 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.405634293 seconds)
  done (took 7.680423218 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.34230784 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.334628758 seconds)
  done (took 13.953925093 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.385424594 seconds)
  done (took 7.660901594 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.865272091 seconds)
  done (took 8.146306987 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.335611721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.344005286 seconds)
  done (took 14.223731757 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.321164146 seconds)
  done (took 7.596264524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.380413203 seconds)
  done (took 8.657274721 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.339938511 seconds)
  done (took 7.616847351 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.377675162 seconds)
  done (took 7.653490103 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.460848361 seconds)
  done (took 9.736535911 seconds)
done (took 159.030711314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.335886551 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.340524092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.340132207 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.337525995 seconds)
  done (took 26.629362674 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.377519124 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.37699441 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.378669541 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.388205922 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.379985739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.377306331 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.36915857 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.369476586 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.388511883 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381170184 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.379285114 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.380112293 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377498425 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.370183441 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.380271894 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.379631853 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389262821 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.379275239 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.370954613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.381240095 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.344801733 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.388802015 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.380500684 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.345473922 seconds)
  done (took 34.312094005 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.544534917 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.416981751 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.498681647 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.397441236 seconds)
  done (took 7.134279639 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.398061632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.39942502 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.409602686 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.448169279 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.484000541 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.408065705 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.372105125 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.368151352 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.352697037 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.399481032 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.474177115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.41429542 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.500284385 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.345455992 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53389186 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344814065 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.346030913 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.397448482 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.449261075 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.471394955 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346160994 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.398041566 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.402470592 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.415293953 seconds)
  done (took 35.156131951 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.343970502 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.353527574 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.351330417 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.345185494 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.345207792 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.345791236 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.351652599 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.346648235 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.366251702 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.346568192 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.345234607 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.346417704 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.345024427 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.346317241 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.345709313 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.358127651 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.35982499 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.345425131 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.350298687 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.35171316 seconds)
  done (took 28.268655304 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.339847074 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.239766811 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.691881563 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.596542144 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.340734536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.343630674 seconds)
  done (took 28.831757949 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.420212971 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.547072853 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.347551096 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.726442476 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.812749903 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.350808382 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348157724 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.584762349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909706591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90881227 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.406228002 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416164414 seconds)
  done (took 20.060005396 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.349293866 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.343305301 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.355459969 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35896457 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.403017451 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.351919688 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354261501 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.342250941 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.405207811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.408728037 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.352018202 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.405263295 seconds)
  done (took 37.710749653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429271067 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397375794 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.439965692 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191174158 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.72621046 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554931863 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231877863 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778800065 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.347449836 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616499805 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356670454 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435659499 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600203043 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352332907 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346412055 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382797421 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572396866 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866465532 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347708803 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.388220555 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370037934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342757622 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.585889323 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.373037617 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556160201 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47770395 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.604765363 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343419592 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634434667 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357090568 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356928863 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3432208 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618539911 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0301982 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436763057 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355192204 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21693207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056702347 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.350064811 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.485901385 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362162516 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348341899 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356155597 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345318663 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280392891 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358242987 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791542937 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.351383626 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.056908967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345426171 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356612477 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439572366 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.348618073 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163041866 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411272369 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346006369 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.3433628 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352910674 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91527681 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.944809703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358804254 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.282477041 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51128902 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.499333748 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008527513 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.449902838 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349933754 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350051026 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280724079 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.473742207 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365975397 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483657817 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.367439316 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008420381 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095091768 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356932319 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278861885 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941002026 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362416183 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.283940519 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576302381 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346885283 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287271594 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.299905198 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.282148811 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10138363 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357719358 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.794035319 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356711654 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.785267491 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.359701013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364109632 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370591209 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571866382 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.234153983 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348062113 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.353193198 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468527417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370739763 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789756554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282711702 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.351883506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605909137 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559760535 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348404925 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.390071119 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5559463 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358559054 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.365841754 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360514262 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359871396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.947411735 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362473996 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977466473 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368132964 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348722656 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118044122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350547937 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.450973046 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359233634 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608563929 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.14718555 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351667577 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431339766 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350596596 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349602832 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.521439269 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.870804658 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349262693 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.351558433 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356481277 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.361536915 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.351207206 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307454203 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.360618728 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360013145 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.353538393 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574930586 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367698142 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627165214 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284300896 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488392584 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415310461 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.574474911 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.609666711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.350059893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610211923 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359177079 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359853296 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363410307 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369480494 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448827223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372812448 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.361734222 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609279914 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.354171338 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.355091611 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.529039815 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.815488647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356596953 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355767591 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.249911194 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952087442 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326991467 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359267564 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245273033 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.365507066 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415754665 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356968438 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.361138815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.244139809 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326138941 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.356239505 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.351426416 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578325498 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362864435 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.528929074 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434910192 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.553514034 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95403719 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368032666 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.286631014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.063658788 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.045584476 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352445447 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288232025 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353317988 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362654875 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364241709 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.675080565 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958200393 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355827978 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.435238669 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361601559 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363601209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.357808623 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352959732 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.229463818 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978620651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360240607 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366265114 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497105109 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.366184089 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2876485 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.356762335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358136668 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352533639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353279776 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386762287 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.443584381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85125457 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61464882 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.236428405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365273512 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.622005552 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.38661828 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356977833 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368948852 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363687293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.369781404 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364464428 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.365112053 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.51288288 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02546601 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920907732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143808882 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907406608 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362878596 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.371731203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357191539 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.806822042 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290875057 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914807865 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553736971 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.801433319 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311033146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559528627 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.61350302 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153609035 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368026 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583142812 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314252842 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.357039512 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383002829 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567493558 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389738652 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354125599 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28599922 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.644439031 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593093837 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370044867 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435323731 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798557865 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356700888 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357375917 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.353714102 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.753439409 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531652534 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.071277243 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53490534 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358618491 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372948021 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852368352 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365189288 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585799151 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994466697 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372081735 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.560725604 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297528108 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.366911416 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.366199936 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.357755612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.744588227 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.355678909 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614390366 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367559771 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29070959 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368659084 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911708352 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.214599533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.362862821 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357139521 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133690906 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372772625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652128089 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.359782509 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.22236243 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363878795 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292058897 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292237804 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.050921783 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364457944 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327895115 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881156287 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.470422056 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416388126 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384041958 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204167951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613272307 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.372071775 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959975904 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586491667 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.295375149 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38193958 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.459204261 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357557749 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.346592702 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358228867 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594028707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249370247 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585052084 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.465923452 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.261889277 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.357825856 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57353578 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359790125 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37195874 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6159407 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.071932178 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.376120756 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13525614 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385754178 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373349319 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281853612 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526891025 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366596195 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439432874 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370232015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.369902352 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.371025448 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534881245 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360546211 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363767363 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373202442 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453358588 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.025722479 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.236835972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.364751353 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970429326 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138883102 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974717792 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374880889 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360367231 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36495615 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295360493 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508983433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.591277642 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634471411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480649328 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.57450071 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384727002 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366418339 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372104448 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573722657 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635613937 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260445784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370335007 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376997367 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.361668653 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372135046 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573318864 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891413379 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973061775 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53948947 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372395756 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803944955 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636127971 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361778425 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361462156 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958915795 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.369421196 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.763954207 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367941905 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365139414 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511167481 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371802023 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070581335 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.373692998 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.521982944 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.135939738 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.56637411 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621167198 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.892667545 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.375240231 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972973923 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095293268 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629035705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429903071 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374637905 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.476630809 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509519228 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.370162102 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366138184 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363875659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214312664 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.074163316 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373561954 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978889908 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632143484 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.361770445 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.370247982 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389656455 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.374839606 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589372792 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126535442 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591638663 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374092157 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370826587 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.181186918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973482907 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379122978 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299018518 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.368624488 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618973152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603108037 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388764037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.818560002 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.076451974 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964081108 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.342159265 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387723093 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380684256 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.103285068 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978749327 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.250134166 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896988458 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936363187 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373247879 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640976668 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.371653013 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376665369 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642952484 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.369576806 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36513559 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393626293 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.972654762 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172906955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.389441453 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494563487 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.304521907 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712031131 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063603134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304910449 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365069658 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.556235537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367492151 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484644903 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378131085 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.366020797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381550439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.124431798 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646594069 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.372651353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.362122847 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.368756283 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374556843 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375110508 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608523753 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376076047 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.16496877 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.717848071 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624175737 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368356483 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.35443805 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.371249755 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367848348 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365643795 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.575290892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.688441651 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976145862 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.376995003 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.379960852 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371977787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.58477025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58011817 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368059629 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395781725 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371562585 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385068976 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.274029808 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.87594375 seconds)
  done (took 1610.754656243 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393047759 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.383534176 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374394544 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.470108039 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423592838 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.379158033 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.416435888 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388355445 seconds)
  done (took 52.535077427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.383741745 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.596430964 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.400581347 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.381408512 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.379800911 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.375711728 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.838591467 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.386355175 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.378164765 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.37896602 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.381500158 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.380594792 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.030650218 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.380979883 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.379576628 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.35749451 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.380038393 seconds)
  done (took 66.102946536 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385088048 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.55916611 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.397635601 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.372582905 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.756638153 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.377472531 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.61206337 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445334368 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.370003417 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.503042714 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.038556751 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.379216093 seconds)
  done (took 80.50557523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.375984069 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.37574907 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.377546811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.37711055 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.376565397 seconds)
  done (took 8.191010624 seconds)
done (took 2037.469048986 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.622791559 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105086633 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.07134307 seconds)
  done (took 5.48445551 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.518320383 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.568609818 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.737719686 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.733346318 seconds)
  done (took 7.86634053 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.647949587 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.761612597 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.561281892 seconds)
  done (took 6.278257905 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.840752611 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.370812568 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.468407408 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.368345258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.372296368 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.373094143 seconds)
  done (took 20.42071182 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.375272745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377673464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.375574421 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.378265548 seconds)
  done (took 6.815602059 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.356520756 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.110915057 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.359364801 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.372941366 seconds)
  done (took 18.508014207 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.12117806 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.133072135 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.118712126 seconds)
  done (took 7.682053536 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.385201814 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.213837395 seconds)
  done (took 9.907661442 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699211161 seconds)
  done (took 3.008065951 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.506299118 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.642249392 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.450962763 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.405285637 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.485792191 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.435811194 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.113966269 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.667898019 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.393683073 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.694103221 seconds)
  done (took 29.105978375 seconds)
done (took 128.687755298 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.300107063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.775353457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.577951472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.313210847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.606175636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.579765927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.656068701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.282323199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.958091086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.773842079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.318159455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.604646211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.605147645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.775609145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.605263831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.764468729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.605434997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.341552839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.960185241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.158569341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.655576846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.905510411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.141676549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.120795247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.608980837 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.548540204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.490083563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.770125789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.13421771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.507117578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.533046058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.335511313 seconds)
  done (took 194.623772954 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.389258266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373708724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.373708678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.374609261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.378751457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.376848206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.375121493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.38837934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.390026233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.376898686 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.373865294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398393379 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.373401518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389205276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.374155046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37411432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.376847626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.386611648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.373707731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.387961824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.381869081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.380057904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.374392754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.374863442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.376510707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.373773717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.374710878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388998908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.37418697 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.375471919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.378821084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.37729771 seconds)
  done (took 205.449407355 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.375746762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.390429376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.375169752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.388902348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.3870802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.379256459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39659176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.389978463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.375634987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.377367618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.375709834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.375664947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.37861305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.394891583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.378277096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390736407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411615921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.378662413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.392802633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.376302683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.385701642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.389547069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.376785273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.376559215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.39271329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.389878803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.376090322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.391102235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.379609092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385899325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.380621128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378788949 seconds)
  done (took 205.607392652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.581534413 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.383107315 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385786361 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338991057 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.384727691 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.384281595 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.378684011 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.583139785 seconds)
  done (took 14.736359589 seconds)
done (took 621.727707743 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.810886541 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.514558971 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.586878551 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407192809 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.212521007 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409008161 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.405248407 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.582897341 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.345640351 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592637511 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.710401392 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404671729 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.858876914 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.404902093 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.666452093 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.505374746 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.292403274 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.411592576 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.736999913 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.994628489 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.668428358 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.926145854 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.586332474 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.340166522 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.809913491 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.922980747 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.165662579 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.294278873 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406395522 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.735029707 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.179925683 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.480217555 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471910705 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.450128736 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.508559087 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.49013999 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.401973039 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.449317835 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.592882803 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680256185 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.984050489 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.152700164 seconds)
  done (took 94.867966876 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.376308826 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.375030341 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.374369857 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.375413795 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.377220987 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.37590698 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.37446219 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.375122806 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.376528649 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.374781171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.374389846 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.376850328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.375255635 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.377644241 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.375838819 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.375201374 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.37575818 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.378651095 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.376250635 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.375791891 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.376341029 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.375628505 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.376424051 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.375206581 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.375832768 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.376471531 seconds)
  done (took 37.091719683 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.388722297 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.628304367 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.827238704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.396238581 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.389278317 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.393480871 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.470791643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391777107 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.39296121 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.39221027 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.550789486 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.393984316 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.426951505 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.832912067 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.393467834 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.390337501 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390142038 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.390531955 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.630843694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.401187229 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.471477844 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.391776087 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.469888442 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.401235618 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.393683645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390851611 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.395084388 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.885721782 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.391831664 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.549352981 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.19754689 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.469317948 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.84533015 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.837882807 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.199950071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.394597268 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.392079494 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.557825629 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.393510216 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.39212207 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.471859506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.392771588 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.829192075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.030940632 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.411034479 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392946812 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.917196283 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.555833382 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656329923 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401623608 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.85190548 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.396654425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.393967655 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.39378132 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654536886 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.402170959 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.392875364 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.933794473 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.399948952 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.472571933 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.394244884 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.394153456 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.640662564 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.394381223 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.628939444 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.394238557 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.402590978 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394029387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.831825601 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.397728523 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.047007896 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.410952686 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.393252636 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.553006877 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.635196737 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.949547444 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.398897563 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.649025849 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873984446 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.474513446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.398614964 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.883491979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478951994 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.399234222 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.39611432 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396451063 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.393587245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.438082057 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.472666062 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.982022744 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04473504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.957463871 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.479818111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.408641984 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.395217749 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.943708346 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.414437675 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.395830424 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.842927655 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056990052 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.411588751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403147309 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.037415849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.414714472 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.477238452 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.401508345 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.841268238 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.398700365 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.438550495 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.395488836 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.402671476 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.399195554 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.478611329 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.400157363 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.395959257 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.03145769 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.579762184 seconds)
  done (took 182.914532093 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.393233041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.388423822 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.390542151 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.38834936 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.388850755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.395243018 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.390051035 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.39019297 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.396006251 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.389392606 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.390616054 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.388677744 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.389342715 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.389697506 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.42039824 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.398436866 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.003373 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.392219981 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.390634599 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.390814468 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.193369505 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.392647584 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.391165447 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.390704612 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.390768145 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.391549512 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.391419485 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.413727278 seconds)
  done (took 153.749128784 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397178183 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.01203988 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.40114022 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.535783646 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.420216892 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.393977336 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.534911274 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.458882008 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.400521647 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.395250269 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.394977127 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.726051572 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.401628998 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.95366062 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.596077065 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.538822036 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.95505291 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400658446 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.395827436 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.39671665 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.536746177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408534142 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.713722577 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.987068135 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399005266 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.987468746 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.388428249 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.398520756 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.397522526 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.988794496 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.39643073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.715345904 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.478393171 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.460074346 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.989781468 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.956556548 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.961356714 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.550400375 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.398921269 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397235226 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.397858026 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.387595826 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.987428819 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.400431296 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.400903669 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.98216316 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.415733227 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.400030026 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.408444979 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.396937427 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.460798861 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461863309 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.718846004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.992907566 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.47862811 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421130001 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.534478392 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.790632544 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.404124126 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.955966811 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.389185542 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.019820623 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404787782 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.388439218 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.400504005 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.404690488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.556879763 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.536522168 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.958314869 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.403291626 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.960239235 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.559008103 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.402096917 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.400256838 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.402090997 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.015005525 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.962785418 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.559127311 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.542459365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.60401549 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.392269218 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.39959066 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.390990592 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.480193023 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.400895698 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018803569 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.962804956 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404829589 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.402021164 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.402682763 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.402934548 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.585244607 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.023505871 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.484996224 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.955129231 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.749883996 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.735572436 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.404170955 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.461080944 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.401145126 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.736062656 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.40560117 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.459845728 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.858705398 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.738179984 seconds)
  done (took 167.476006785 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.652228609 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.672549064 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.497850785 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.517365185 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.958892692 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.981567737 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.665734752 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.534400726 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.514801945 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.655166142 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.639373827 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.492118724 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.595361103 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.481943675 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.146896262 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.473908605 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.496602811 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.527047058 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.515463758 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.44429114 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.052154705 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.700705054 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.582301083 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.586837745 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.503119805 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.209480498 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.96651452 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.920313864 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.579350583 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.728416543 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.930718956 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.550185904 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.406081453 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.11033368 seconds)
  done (took 67.625010623 seconds)
done (took 705.039155761 seconds)
SAVING RESULT...
DONE!
