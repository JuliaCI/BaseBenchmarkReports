cset: moving following pidspec: 30144
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316541219 seconds)
loading group "string"... done (took 0.563572933 seconds)
loading group "linalg"... done (took 7.287759854 seconds)
loading group "parallel"... done (took 0.171900342 seconds)
loading group "find"... done (took 1.13924383 seconds)
loading group "tuple"... done (took 1.792960774 seconds)
loading group "dates"... done (took 1.231416374 seconds)
loading group "micro"... done (took 0.228214832 seconds)
loading group "io"... done (took 1.033900989 seconds)
loading group "scalar"... done (took 40.770741264 seconds)
loading group "sparse"... done (took 13.022755961 seconds)
loading group "broadcast"... done (took 1.003881144 seconds)
loading group "union"... done (took 13.792445416 seconds)
loading group "simd"... done (took 4.687629841 seconds)
loading group "random"... done (took 9.490975472 seconds)
loading group "problem"... done (took 1.979158964 seconds)
loading group "array"... done (took 22.334899505 seconds)
loading group "misc"... done (took 2.045805421 seconds)
loading group "sort"... done (took 3.404177844 seconds)
loading group "collection"... done (took 19.376752226 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.566516374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155919803 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148228098 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147421148 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188800884 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154947269 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155513548 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095847426 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015905476 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172786563 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150582476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518821096 seconds)
done (took 5.294480289 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217474487 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093173434 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103113566 seconds)
  done (took 0.966518159 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.075515891 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1434848 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096637661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076799824 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094984859 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076685895 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094148161 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076108831 seconds)
  done (took 1.434946056 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.084367547 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096242383 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080283057 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096301251 seconds)
  done (took 1.132533993 seconds)
done (took 4.607860485 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.876527383 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271644478 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200848767 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457231737 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19481041 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211570626 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671466361 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328384708 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250878957 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098720389 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133205958 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388960154 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135926633 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668516925 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089519309 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122505905 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178833725 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438891715 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082743805 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10941668 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115902803 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.138720248 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129805451 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091353096 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183114187 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.079855034 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192777 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107651213 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07918728 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.271135777 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200348084 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676576898 seconds)
  done (took 10.989820548 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108889996 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133288879 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097342888 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135709488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132130127 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098730821 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082579382 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096186081 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120541095 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173361598 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113172906 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13437523 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094048212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081113599 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114099595 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242710676 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101174523 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114653704 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098971559 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086251906 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135586159 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110498021 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090539455 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108151701 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165427421 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208078049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.123908901 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12549132 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095856316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094449737 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144466651 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15675259 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092554585 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079959746 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171126329 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121941089 seconds)
  done (took 5.174381228 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.124056173 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187870463 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12088541 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16776928 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079425329 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142685764 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094974922 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112903814 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25356047 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182253383 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486401311 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1397963 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09742944 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096997047 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081294047 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096813572 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.444756181 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155260954 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132596957 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097099094 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10296163 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098982677 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362647054 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078497719 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093938415 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079792296 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080004164 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15919156 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084439126 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.18741968 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099005864 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100641514 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131816706 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197942224 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.151223784 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125544604 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134457536 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076621943 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09677797 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172826255 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083708544 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096746367 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118819911 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132948798 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116075278 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097910948 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096043001 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.193096697 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078421756 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112763529 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.902189196 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18010034 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118224639 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095686435 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300905032 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097199197 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096710936 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0756719 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25543856 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19079568 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101985804 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09570049 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078962623 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097033216 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377962578 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079398986 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09325143 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080112848 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10688018 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723472556 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083776162 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096772115 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101843599 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085524473 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11428256 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077997958 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097888109 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077908284 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096255275 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079972847 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095239333 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106751109 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214437494 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078899027 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097577372 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076276459 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116624925 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124404225 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081605124 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09448127 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112085077 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094929185 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096712027 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080503418 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133150224 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078868344 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109504362 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099223027 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141782289 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079688509 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137489141 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080795354 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126110524 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099053826 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112209796 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110776424 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097991481 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166744895 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076763432 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09472829 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081305678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09590438 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078905609 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098473273 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089372401 seconds)
  done (took 22.561458728 seconds)
done (took 40.622419073 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317458585 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102833044 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103058677 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103129699 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083370014 seconds)
  done (took 1.561381678 seconds)
done (took 2.386822475 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163467391 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114270846 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096029126 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128446801 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076115192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.133693486 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.13043801 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092659604 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132968967 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094209037 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109090178 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09540414 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074999445 seconds)
  done (took 2.292995235 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094215568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113761986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081340708 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110862197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074587272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112317198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090450336 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117003172 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108707279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084176908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09310013 seconds)
  done (took 1.900733323 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093071715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112332808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081731556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109884776 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075645496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110821725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090844575 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116269942 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109156421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084570817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093841147 seconds)
  done (took 1.895042623 seconds)
done (took 6.90609021 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090341151 seconds)
  done (took 0.90700848 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921703506 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.936372162 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.093043161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166754305 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.306497019 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.168463812 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.494720707 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.122763236 seconds)
  done (took 11.215144057 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112214289 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.1141718 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102614059 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085165147 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102981645 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081545531 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100209096 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101540214 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081319619 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098572695 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081910125 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099345963 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082793051 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102550084 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101175074 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082007462 seconds)
  done (took 2.407110848 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117003553 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11521089 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107362229 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107116155 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084367156 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105450979 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10630636 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08730377 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102546438 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102849601 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088473557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105509205 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102964328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078663158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105951412 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106687968 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084633874 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105411869 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105276076 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08938725 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107171597 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.076232192 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10366559 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106020917 seconds)
  done (took 3.33326317 seconds)
done (took 18.683009385 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157745038 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106883899 seconds)
  done (took 1.088021176 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095030469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113131522 seconds)
  done (took 1.033457652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095653821 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097392041 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121249787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10848904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079314032 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097060886 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118042327 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078537566 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097221122 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077595163 seconds)
  done (took 1.799651844 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081920682 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109557827 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100684018 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093049444 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105130908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093980703 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087294627 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098820521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108445704 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076584075 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102301313 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114209326 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084471691 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115160679 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103755869 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.080844451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101893712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098003047 seconds)
  done (took 2.588290101 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079130687 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096641721 seconds)
  done (took 1.005471989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080865431 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093702265 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079219926 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097290875 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093095515 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077581782 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093459292 seconds)
  done (took 1.445582127 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.431640106 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116258974 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.277045363 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082860996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120664735 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293859428 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097853381 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08315406 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10369473 seconds)
  done (took 2.494788545 seconds)
done (took 12.283213669 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092910973 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114900717 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110054679 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457869953 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105487614 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099101553 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146272643 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248047195 seconds)
done (took 2.211330962 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.141553228 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.563636948 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422326257 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229682959 seconds)
  done (took 2.052877721 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40186353 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097198542 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083717881 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080444714 seconds)
  done (took 1.503698138 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079258178 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098887756 seconds)
  done (took 1.016625665 seconds)
done (took 5.556984803 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080531328 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098792893 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077229872 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096548566 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.076619831 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093871535 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108457712 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098992909 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078109725 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099399678 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075213597 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.098556854 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077729864 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.098489746 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077925112 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095060334 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075798243 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098186005 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093421071 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077511572 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094077547 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079354226 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093545945 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07745557 seconds)
  done (took 2.994209452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098853568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09902134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102351062 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084865513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101895008 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083557806 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10336838 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096411992 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084320508 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099307011 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082851904 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102128098 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098574925 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083394673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099586071 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082268921 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103930706 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097560698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081394097 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10203976 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08355942 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099287423 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099973105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083558969 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103317775 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100416743 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081861524 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097982722 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084264479 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101435888 seconds)
  done (took 3.664145296 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084404446 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093519772 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077471331 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101615165 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077187973 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096836555 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076400418 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09553002 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077516654 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096210624 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077738556 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095602876 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076155707 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097245227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076545561 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099839775 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111415556 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077401292 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095887414 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077922919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098160667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077528687 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094446239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076472476 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095185793 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077150335 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09491724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076535015 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095193513 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076440593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098177486 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080059156 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096174519 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083039411 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100099769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075684526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100044092 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076293097 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096241723 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07468089 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096085655 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075675849 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095679534 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100422782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077626687 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096497516 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078123156 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096253688 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077752137 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098450359 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076174904 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095654089 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078965921 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096173685 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079890372 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09501588 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076486195 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09564887 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077369843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096112579 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075712286 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095612108 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077651092 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.096596338 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110127228 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083758252 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09500847 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078998815 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095954179 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079427687 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098059348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090502932 seconds)
  done (took 7.185045624 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135705376 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125272851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079441502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097815333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074294255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096425836 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079448041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096691593 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096222658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083794297 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096247877 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078480395 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097327841 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091558773 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096062997 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078364489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102813092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093319411 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077411403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099045837 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077659413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099863107 seconds)
  done (took 2.904312555 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206270491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103734347 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14152488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106128693 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082459518 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106375545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100286734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084291728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10164641 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081243727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10152627 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100955423 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081713393 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100316033 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081651974 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100258755 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101440302 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081632007 seconds)
  done (took 2.713241386 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091956907 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098817219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.211748115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099331778 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098652484 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082428996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1037146 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106838096 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082914105 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098128036 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089131597 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101913804 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099862876 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081341728 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100077574 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079674896 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100623149 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079663694 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107727536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102998672 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084594402 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108899419 seconds)
  done (took 3.064893358 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094661444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100982635 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117034687 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084005676 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095806195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079320732 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104886704 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07913011 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105478752 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099970918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081128686 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097897556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085537104 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099094497 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083890688 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099837678 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100020019 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080053209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100503158 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076316223 seconds)
  done (took 2.71839134 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101301526 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101542833 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079889848 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109169833 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10028542 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080612759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108607476 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099900231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081601417 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1256218 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100462521 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080036802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10921264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106217026 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08028664 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109061126 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107783062 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107609466 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082130237 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100788412 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122737981 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081417061 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108684038 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098390088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082310703 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099792452 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081496455 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104879185 seconds)
  done (took 3.609158615 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080879889 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097621844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078407147 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09575505 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078308767 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095824218 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078071083 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09480611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080825161 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095258372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080086164 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097794612 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079886349 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097890748 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08046415 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09858179 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080971139 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095713376 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077826587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095569095 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080803428 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09804575 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079953753 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096615773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077701619 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098738745 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07687956 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096907597 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079384986 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096555918 seconds)
  done (took 3.499375721 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088658578 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106086391 seconds)
  done (took 1.052522878 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077840955 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113841066 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077189765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103362243 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08279954 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100754842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105820944 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083620034 seconds)
  done (took 1.605018364 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095316045 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108827554 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081430635 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113033588 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108896721 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095906001 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170111692 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100935183 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086388258 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098693463 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112591322 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0795517 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105185016 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080243909 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105377481 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085391276 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097747174 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103687256 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083044548 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097764742 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082224088 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108890125 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082239883 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099745432 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099925843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091066221 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112539608 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081028041 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10417813 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10547894 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086731682 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09292882 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080407072 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100375645 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078386281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109779343 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114894881 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083068997 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109133804 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081103472 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110666639 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093397515 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085160912 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106494154 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090046316 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101002677 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099368439 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077165568 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09868807 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083294378 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095978582 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081336269 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09423265 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087452581 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103727039 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109289142 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079791649 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099976224 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08424877 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103585161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086649847 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101789851 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082202043 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100972277 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105406342 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085025369 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110220123 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075899355 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094787151 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078267022 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111261015 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123220363 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086247055 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101555958 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079866816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09880717 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103020859 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082367523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105992162 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086361204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100823545 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105061001 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088195262 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100270598 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082687845 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108688435 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078366246 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102990625 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097387055 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097320568 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09968281 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077393395 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098319281 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10999383 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085390993 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098605764 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077931519 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107213225 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075051114 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102007593 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080909748 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101609197 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10992471 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085530245 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106557044 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10849743 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087815654 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100197741 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084790302 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097320825 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080807652 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099468213 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087326087 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095778373 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102433753 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082571628 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100033047 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089240623 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099636618 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.079918941 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109340747 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105617264 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080620091 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097055523 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084125783 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101045604 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084964798 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110188579 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097854659 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077891661 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094833158 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085160747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100160689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084270551 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10625288 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101618622 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076164033 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097457489 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085506984 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110287644 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079269089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102469185 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10576052 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08289405 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098937932 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087250295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103193822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079232743 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106701995 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080106717 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097392845 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1037659 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083964206 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099001653 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084082506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104627149 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081861519 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101872139 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098348886 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086780347 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10130819 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07942924 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100778991 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078818067 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112639024 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101341727 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07610575 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096885295 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088671098 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098314448 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08015204 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099691547 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082845455 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101967009 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096671202 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081637905 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102050608 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092349561 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105931 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100798699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086735314 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112346255 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08094827 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103364632 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.079817184 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102096542 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099530533 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090023003 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105944137 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085361043 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104328283 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076772128 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107376027 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107924765 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080468657 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099158091 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080536689 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104611157 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086737578 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105096436 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100424738 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079448257 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100335708 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084063832 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103971202 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080128793 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100425911 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105080964 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080422396 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107043449 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080595117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111766103 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104046835 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077273777 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104416207 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078919996 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107034462 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075279698 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098589613 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079198359 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103054685 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099087348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085100628 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094035344 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088050237 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108727103 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.080957372 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100805176 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.079871125 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108562816 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10108297 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086304787 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104061355 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087773648 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112074464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079550285 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105032965 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112218068 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0811584 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095072113 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086099843 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100949484 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.079872739 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10124954 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.077668818 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105308392 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109785705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088170928 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095849789 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082331843 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100302057 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098270525 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077670015 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104120329 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084534088 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101546721 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087392599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103272585 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.080455386 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105604505 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09959374 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082939278 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102174785 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083658417 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102132312 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083086527 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101510905 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102854904 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080712589 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098540807 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083376436 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100763263 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081254348 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107426989 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079658637 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10162309 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082940701 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102742348 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101092269 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082451843 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100573387 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085653311 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102721562 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080914059 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104449633 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075747867 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110197287 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100398521 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089611517 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101600976 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079380845 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.1079215 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08292493 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106734257 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101120577 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08273473 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102695025 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081267323 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105340413 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087444861 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099722871 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111626889 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090226418 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102927846 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083879031 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102878637 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083061018 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100884752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100256463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083278523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101772147 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081626142 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10585745 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08426752 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102234832 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082359902 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103024548 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07995317 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103557569 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095284584 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081384853 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100865595 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081750729 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111980658 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08121344 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102146947 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099992629 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083065128 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100197026 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078408514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109958535 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109127665 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083164125 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10980628 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080861844 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103835177 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09133828 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096675498 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098308923 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080669192 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098305445 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090173749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102567881 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091027991 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102068553 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079490081 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099362431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100229186 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081640407 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094498252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080164499 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113991794 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080941265 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100925849 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082600551 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105921867 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082901704 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112116083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101184957 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082783158 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101870946 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079069532 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100868218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08049277 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10492968 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081504419 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100403794 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078089936 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102055816 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101676348 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083523596 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100537569 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083301569 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111265485 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081241033 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10569146 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104191362 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07754434 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103779168 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081175386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101449449 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080367721 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105944618 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084039245 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104362698 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109293431 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081487047 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101971562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081198452 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099938016 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080919586 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102038867 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.080883526 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102623502 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103098044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09148644 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100200421 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084229964 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102541098 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081751878 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110031542 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101746685 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085423467 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109655429 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081257111 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104418575 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089479773 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106408529 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104978294 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083400793 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10421056 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08763634 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102388238 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107073682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083545944 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102443739 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083743102 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100738002 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081531168 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102391994 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080241506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109191269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101664814 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082930821 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099645644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080134825 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102358159 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085156072 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11017312 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083050164 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106352863 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096144804 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079946454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102392222 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080322582 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103045592 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085431915 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108234916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083666207 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103239045 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078910564 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111403103 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107941374 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084641645 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101222587 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084989929 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104502968 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103173333 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084577914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101638977 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084474219 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105959992 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083711557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101523316 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088210734 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106211254 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101670923 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084072523 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101536301 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082215873 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097634528 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.082901199 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104868153 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086262612 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105140593 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101221574 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093302046 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09945998 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08303194 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106616495 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080142671 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107073198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096464904 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084772934 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102121207 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083934303 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097322912 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080897558 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100542919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083145511 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102683338 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076717947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114377359 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111038122 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08566712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101848602 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080673186 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098174624 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076122614 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102881693 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102264652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084308328 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112539815 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080869907 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101442327 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077049173 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102860441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084131413 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106402097 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099071633 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079106474 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099796056 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086134111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107799685 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080349631 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10308332 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084494851 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105321669 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079638088 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106396774 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098289823 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086017109 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115868088 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082207123 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103624628 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108178011 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09031265 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102732474 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.077799783 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103532865 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08445488 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104039166 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101912716 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084062013 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118893141 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084646556 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102437316 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.079926821 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106079606 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101445606 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0913688 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103943313 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08309053 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108572141 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083855337 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1122885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105555197 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090347138 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107310709 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105056019 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0821349 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102425047 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080523416 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101404094 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083743098 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103972637 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085899215 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111788509 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101132692 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093907024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112254334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.082994071 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100499437 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08021342 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102646092 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097192594 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08395242 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100119153 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080458409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100833029 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080527676 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104112506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087119555 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104021244 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082125391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103588567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096264832 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085422694 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10447104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0831276 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099668617 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082741464 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103930247 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085479111 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10782074 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099501851 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084853448 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104317476 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083795747 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097654454 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089093771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102524287 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08471464 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103029523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081968379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10424951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105094728 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088375215 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104013875 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083753519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11273582 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104126212 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080847517 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100059425 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.087914918 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100591835 seconds)
  done (took 57.354056073 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145692944 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079986871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098255812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078000336 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112516368 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098658869 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078516864 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098050278 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079752702 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101975889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077384596 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098542322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106677221 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103459632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112052501 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103303713 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076847799 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100533942 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07681742 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1006011 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107447492 seconds)
  done (took 2.946907621 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102509201 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119934012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114136441 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117607496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087783995 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114514092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114213304 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112438617 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096138074 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110988437 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117507349 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112432478 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090774571 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110834102 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110547036 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091350517 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117235808 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108365918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093342578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113659568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112017143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113473926 seconds)
  done (took 3.291811943 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083406048 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101476266 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08410847 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097654716 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081937389 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097761371 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08511157 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101205072 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085358481 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102708194 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080172434 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102812669 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082280601 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.099609705 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102019945 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080866187 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150664858 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107299746 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081658862 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105126706 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076779982 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106063379 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097564527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078733711 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101305971 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086896644 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103953441 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080265794 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10280577 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08069289 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1031823 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079375093 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105200338 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082545143 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.104047226 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080523832 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104160623 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102029152 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078822062 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100795181 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083291998 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098734179 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083040825 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104765251 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0803242 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101789675 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083180465 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103564031 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.076583611 seconds)
  done (took 5.49688548 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.101208148 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159794772 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084548747 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142682146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12013008 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111193898 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08702072 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140629583 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102603071 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084314831 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122709166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119267968 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10279077 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088194411 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110757787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081933641 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106205135 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101846579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086068439 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103824585 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107111921 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089479489 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118545078 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117364282 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085515974 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10343872 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102764693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086638231 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117282541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108899013 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086687757 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10934062 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118616602 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104096891 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082768036 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105838312 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120290709 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083248526 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10554638 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080490347 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106856647 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106802521 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089916733 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12100423 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102945849 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.087838038 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104803549 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079630662 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117593802 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105800325 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11145478 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.097650205 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108221424 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102532939 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087886867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120102802 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102642972 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080825749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107533064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115668195 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081163441 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10855151 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117370696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085003489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111761549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118450531 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087726842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108888226 seconds)
  done (took 8.127455657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092889438 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110361195 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119777683 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119583125 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08937089 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111060219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110207855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089118014 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110366578 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116200979 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109837424 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131438161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08559444 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114337022 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109188448 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089606675 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110492874 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110424075 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089641188 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110595517 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110212943 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118751523 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090581528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119212427 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141553702 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104822026 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089516909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110661579 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119160052 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088154224 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124692218 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11129694 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109966772 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119257704 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.101026585 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111582166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102901212 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088767558 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110569745 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110863565 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083326188 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1199556 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111233058 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084058887 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111175049 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111506878 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119464649 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121533441 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093484119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115497985 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110905862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119520043 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089438547 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111536912 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119636712 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145202322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11923539 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118635287 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090491154 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119696047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11946689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126710745 seconds)
  done (took 7.698385018 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104434871 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115133165 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116167925 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077196594 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104385424 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108209219 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081602354 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103237342 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0924107 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.113767751 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116520951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107739665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089115352 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117073959 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108657316 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110305124 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087484717 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108788985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112671195 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087187616 seconds)
  done (took 2.986807041 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092778949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12360694 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083199654 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111281007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108352902 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08960315 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107664763 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084704969 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106236871 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107048548 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093858486 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115827264 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105236815 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089377933 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116552724 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110048336 seconds)
  done (took 2.573076435 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096480779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117147456 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120389421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083014595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104047723 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078772906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106141091 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100054302 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080279582 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119637587 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08277181 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10906835 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103689951 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081725903 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101221676 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086361696 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102152246 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080918756 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105891369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118179962 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094506473 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105020725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083448231 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10722214 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104953517 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088739118 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10542268 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079975244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10403999 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10536121 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084649957 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112956984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080179659 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104541381 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10300503 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082145568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103820884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084061321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10848021 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083516588 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103917839 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104361214 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084283143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106313986 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079583755 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105988337 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079601783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111853385 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101764353 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084201412 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105539557 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085643901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106911983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114326847 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087767967 seconds)
  done (took 6.295301688 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098255159 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108793945 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07910439 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103603529 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086175192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108479227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085677502 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107881154 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106697564 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081679711 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106592002 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08587311 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107991425 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085943567 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107382947 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108633358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079868442 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10683832 seconds)
  done (took 2.688881636 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089875861 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105321849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090648978 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105746451 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084041319 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108618944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078474416 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10483387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080836039 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106894452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10417624 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086180546 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103055958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085234259 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105264314 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083030454 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10854793 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081433237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105940355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078258542 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108318881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102800253 seconds)
  done (took 3.03915077 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.090297768 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.131987594 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.186603799 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105147024 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.124075225 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.118616165 seconds)
  done (took 1.688315592 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108360446 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120226297 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10574041 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106043063 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114493718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08457888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108473229 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107633815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115410589 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100833804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108741636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116849115 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114690973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094980996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114212209 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113527627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084806936 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107937658 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104786436 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125656872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086137468 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117083174 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10652226 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085973041 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108048466 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115861754 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094922406 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121089556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10737838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116416984 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091726595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107885098 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117147698 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121095032 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087529924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117793942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107073691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125432902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091711781 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116504672 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1079884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091565555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117104771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112890164 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116100937 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085510674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113104852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10654077 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085268763 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133274481 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114571782 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117272514 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113468066 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094891794 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11754316 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134240413 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121335506 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116000922 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091705697 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121235972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117199894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114319333 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115899292 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120064904 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092680179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119466296 seconds)
  done (took 8.132594559 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100621195 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126665037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107399929 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099354996 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116315198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108017606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107663966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085461936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108817299 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084639837 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15024408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108451025 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11671599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116314563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086039415 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108558907 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107719456 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115539098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086536164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132722255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107727555 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116759581 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094900641 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116204434 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121646476 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114029161 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085115151 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108718574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106945763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086416711 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113526747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108048215 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115748485 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085995628 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116670329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107029565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086834909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113880105 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107064578 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092128025 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117226331 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127141718 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106713103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085101739 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122519653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108758458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085391571 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108296408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108176494 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085554794 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122303483 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1220522 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122011336 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115799563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086379288 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108177242 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107250234 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086194925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108089705 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113284047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094129427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107920673 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134555421 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108454181 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084837277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117061553 seconds)
  done (took 8.018450664 seconds)
done (took 156.182938065 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216181088 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201412313 seconds)
  done (took 1.358955754 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086873862 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135475319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094531246 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168932418 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083084249 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140651251 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137188805 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096394589 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106539121 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085184833 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106972476 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085667593 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171385745 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084103113 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107775873 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085181307 seconds)
  done (took 2.724797502 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113368486 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.24024004 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121896794 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.081723965 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.110987573 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108585032 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083918831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110969682 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088366544 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103826684 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086923625 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106900551 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082235753 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106607263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086903677 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109049771 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.082457149 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109204955 seconds)
  done (took 2.887027469 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149741611 seconds)
  done (took 1.212320883 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240588818 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162589598 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233457626 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.477076704 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281061845 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.358971484 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.203316958 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213279431 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162180564 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.199099708 seconds)
  done (took 3.477453685 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117465674 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179730498 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314981318 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153848147 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105279295 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125483013 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155360286 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130075091 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121814385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100033321 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12224747 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117830686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136184946 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093644786 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115852863 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116213687 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118534474 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11409623 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091027947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115624662 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137122609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083062323 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115887304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113002524 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096307934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118099209 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105080031 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084251977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114399321 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091360075 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112820124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123298653 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095365223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17326675 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0988258 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173783814 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095257951 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11172295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11300117 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090271571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118268797 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116889759 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102036395 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118479202 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083085846 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.1186644 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105664837 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084791793 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113638975 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.094668967 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114995228 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112303596 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150008842 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117299848 seconds)
  done (took 7.398206445 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780686993 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153747521 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088134741 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.871650194 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113946718 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125723254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.766740372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111037646 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250124426 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.744755055 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129679156 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095391498 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224950814 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231926518 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951917244 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310537448 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.633788596 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123592517 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148010693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.149750356 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095056851 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136091822 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129732837 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45341518 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112427489 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089955057 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116091168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093874893 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179209401 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099325694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113668078 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171976268 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268356443 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179254001 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114247202 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086479095 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111184648 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16573334 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262795011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211335506 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177587855 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084522729 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110101437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096505518 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130469619 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10794761 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158733257 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17054118 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189224649 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090683468 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118542049 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117686625 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096501351 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183436954 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09648135 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317215478 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306344969 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109733627 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097401733 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125385939 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258778295 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09814057 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219900309 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137537166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20809394 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087564413 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776432443 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164748301 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110662569 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093680135 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119021542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114243076 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095722085 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163411678 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388889724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122208833 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113391895 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087318645 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251560592 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099296402 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111932781 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156828212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115439773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118943397 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100454338 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121094603 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164294773 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251867271 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099488528 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118903483 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113596676 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100904278 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115205109 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207641482 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215074837 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158436122 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207179356 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12091261 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158433959 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189077395 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095074346 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19221534 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095490262 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122597307 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120415669 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212020801 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.142341446 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10024604 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11470223 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116604303 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144358372 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103485291 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117986837 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168226438 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.50351036 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164825472 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107462334 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103874674 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119572664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160029632 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116678445 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230154346 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121368598 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163927324 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119769544 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107003107 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096149234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182305068 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097220167 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120347504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121079241 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094217912 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.253720175 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188914262 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120626718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239581661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180509015 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093905562 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190120629 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096373554 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184794819 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097131802 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123448097 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090671431 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792068547 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122577503 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119088086 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091958842 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195106393 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111177656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098280851 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123820032 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107752245 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785044615 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125315755 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11937924 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.121797495 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095332204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118889582 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115400622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093933241 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156907959 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225358059 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119189315 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11664643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100156308 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179019015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092482224 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123651189 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122352323 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100529434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120923307 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113020068 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09959485 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1867032 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158523117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.214143477 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.563926903 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112120022 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122647984 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200386886 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111908034 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284706777 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094851357 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220598547 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180961804 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097006575 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302998741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160765395 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193198397 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126284379 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169560326 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109071322 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114915327 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161602028 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087617732 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117383594 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158465073 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124288542 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12123104 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.932152127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1116648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221048883 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109252651 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167257735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115172293 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095238524 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293729624 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111488612 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102172715 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184079113 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090533917 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123774503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717193178 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100020258 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12113101 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115968468 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21481456 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160817247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116304392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097232053 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118523423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158551609 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207394106 seconds)
  done (took 43.426102612 seconds)
done (took 63.433097823 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27620556 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213794922 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26586826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169301308 seconds)
  done (took 1.96917394 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170650489 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147951517 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119669003 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10767226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15008848 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083175067 seconds)
  done (took 1.75073864 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360440428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275306863 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240992155 seconds)
  done (took 1.852528876 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28540325 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242385232 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468736618 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.321868041 seconds)
  done (took 2.41602014 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204489457 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131667646 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110305924 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1024717 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195117199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242243193 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14029268 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199415753 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.096741304 seconds)
  done (took 2.44169683 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194402739 seconds)
done (took 11.600353542 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.258312826 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.225718094 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.127891004 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.22022183 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117764809 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.216376117 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.260507933 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.176955078 seconds)
    (9/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.192836321 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088741864 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122079746 seconds)
    (12/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120271497 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.166806344 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.095227499 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.136079241 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.137820284 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092608455 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.218768946 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221864813 seconds)
    (20/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123331879 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.220837249 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.197530201 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.172313536 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094008269 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116620565 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116295756 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092707427 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125285444 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169295214 seconds)
    (30/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.185234217 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114757872 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110912998 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171100998 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11440322 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.17610298 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.160632352 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114449334 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211543078 seconds)
    (39/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.160753286 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116718233 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.203779984 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115745514 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09146885 seconds)
    (44/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.19574367 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172248345 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101013113 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138288806 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137526375 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.106129519 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122839893 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218390124 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14397805 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113599326 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122858544 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096944864 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116159943 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.12923719 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.109058171 seconds)
    (59/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117088239 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091500595 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120859923 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.113477686 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.1356942 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172981116 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085282001 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110132291 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09023557 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.137210725 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.148681718 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118394763 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168441803 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111765112 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085911004 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.180869393 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.084065666 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.145463575 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.135429418 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.084984174 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138306255 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115506637 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09633541 seconds)
    (82/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181383132 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094677895 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107991358 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189437771 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08888976 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217806713 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.070511886 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117870455 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084109329 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109262836 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222865987 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08756199 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 0.175907185 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137531786 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065079419 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171906058 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.13033494 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076644606 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065658689 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12742423 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064748145 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111762105 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117356658 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13073517 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107939534 seconds)
    (107/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067413495 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115865321 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090530461 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107710915 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08549535 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.075133754 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109641105 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186061319 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192025223 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153056719 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.148880928 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089600803 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126019632 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064915458 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110562765 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.194115076 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.227219622 seconds)
    (124/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11457705 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.188698037 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.17962698 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093409498 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118317069 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.433195577 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192949624 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.08902641 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114932079 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090869766 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.189439682 seconds)
    (135/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123671233 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107062306 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092896061 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164353137 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.184513123 seconds)
    (140/309) benchmarking ("sort", BigInt, false)...
    done (took 0.216900137 seconds)
    (141/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0820368 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108097032 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093197467 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064640189 seconds)
    (145/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140062569 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 0.184301572 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.179205406 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065028106 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109095013 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091524403 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110640918 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085552953 seconds)
    (153/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136023862 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090942848 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132154742 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118272589 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092824846 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091124458 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09268087 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111667911 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111054406 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109148727 seconds)
    (163/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145745693 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110712297 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114888742 seconds)
    (166/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133661383 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114717186 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109757442 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215120481 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.118997525 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090941587 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066851646 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09494708 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175103333 seconds)
    (175/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065525338 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.182561705 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089726157 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067322292 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136079333 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092976837 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.177295462 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065645837 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122045283 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068516664 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109444949 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086355997 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100516312 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094155409 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214464667 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.075483647 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109984407 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066095958 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091097366 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066464745 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.135187208 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.174880056 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.204389713 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107950165 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093826048 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090100488 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.213552075 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153600095 seconds)
    (203/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116361086 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089962682 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118064284 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.176204106 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084037695 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091281788 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.083579369 seconds)
    (210/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138541348 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075987846 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117271051 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093208526 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104694273 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093661338 seconds)
    (216/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.075181214 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138759491 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115059342 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098914725 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.148584654 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06615339 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115208384 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06651545 seconds)
    (224/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120291095 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066762776 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065744524 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115747966 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085049231 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109119826 seconds)
    (230/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066863766 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08962876 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109181825 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101123382 seconds)
    (234/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.07661076 seconds)
    (235/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076171359 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177587809 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.186446324 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06661268 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090552474 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129732301 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111232545 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109301296 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133791705 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066746155 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112315671 seconds)
    (246/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.085626196 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132759956 seconds)
    (248/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077152735 seconds)
    (249/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.101562105 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066365238 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178041443 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065857898 seconds)
    (253/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.101239854 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085383676 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133875851 seconds)
    (256/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067869155 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091319586 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068642238 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084785499 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.1103204 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214284489 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08493071 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109517218 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087491183 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090419199 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068667362 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195498183 seconds)
    (268/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088004498 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090307489 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067059401 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132049024 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10940593 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116451111 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169951506 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085270408 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065596195 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118458478 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066745915 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109807769 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067019446 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090449548 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067178294 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084021297 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090764532 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077736166 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110051778 seconds)
    (287/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076523017 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.085940328 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.21918697 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118079369 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214541768 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083992268 seconds)
    (293/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125009618 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.083729846 seconds)
    (295/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100666607 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13527673 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118221586 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108934544 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.130220961 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113743957 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154797336 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091351855 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134709882 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085781634 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11534158 seconds)
    (306/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10902498 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118539909 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127086252 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 0.146447163 seconds)
  done (took 39.467312656 seconds)
done (took 40.445995641 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09907326 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135879526 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095081856 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134923698 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121919765 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091439589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117621167 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096578894 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123084544 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123601552 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097888995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067922895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119795765 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118976862 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095446554 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135319389 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121285844 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093482482 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117352841 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084806663 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117476531 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085200194 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111221995 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06909224 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12005515 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092973447 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116549149 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093974458 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.110624333 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084948237 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.114172486 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091631919 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110737384 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121857738 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092666542 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116919295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095352504 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120095273 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088014574 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110166651 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092859305 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110055087 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091724405 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118168778 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.091120568 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116264984 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11616958 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099407548 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13397692 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087157403 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118958661 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09471068 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.120150481 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116033544 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091113766 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120436833 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091419487 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136718408 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093222892 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115868611 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11741715 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0944839 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114308785 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095337441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117912135 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095535662 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1214931 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.090868716 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120886698 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114053383 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087242312 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117805741 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089603632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109336381 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095428445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120221769 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086037026 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115623605 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092062868 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115121228 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085044142 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112653214 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088097284 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116655654 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08688678 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094577424 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090949026 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115867198 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086286577 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118882469 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091308367 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117035043 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.086586795 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122271404 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.084185663 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115435721 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.084662562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11098571 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110681245 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090839719 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108886033 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089359914 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118771124 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088664989 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115469799 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098647404 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109724771 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092600068 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109557442 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085431115 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124347218 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094462608 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111949821 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086888648 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110977157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116386498 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086374335 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109128481 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087045342 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108859413 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092493484 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.108943484 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089194243 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116928311 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10068313 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109630588 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.088968064 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112207938 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.085564649 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115492038 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.085808544 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111214936 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087694445 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.101897113 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088167372 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11073234 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.093251566 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112552197 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09437106 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112855894 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093819451 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115373507 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.090386184 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11663527 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084182812 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098655124 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08760972 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112786767 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087295088 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110823172 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.087562594 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111377073 seconds)
done (took 16.839182605 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087260309 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183249556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149310169 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140549158 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105188633 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112260816 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119394243 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117828698 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11341953 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140861001 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108741669 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131444344 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145611047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085775725 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110495628 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090441598 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111805705 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101249844 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145140987 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131029739 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161227184 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084903191 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146407868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134395755 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094869995 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.128947777 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110495611 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090548811 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113862022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111550484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131872231 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.088885268 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112667174 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131833189 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103803973 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119235926 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085660362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118546347 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085715841 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111219644 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137510501 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107349362 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117394899 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114961164 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091210098 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11267217 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088654175 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118722276 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097093263 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115268865 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100246992 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15355058 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116020019 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119676958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085768468 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12159352 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.095455018 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.114232028 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089571621 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114482204 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.085189249 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.115345077 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12478731 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138120888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09189452 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120295869 seconds)
  done (took 8.615490701 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104447664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138373743 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102795214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129996199 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110762225 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088373708 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111897963 seconds)
  done (took 1.828442407 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08831154 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132565192 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109689835 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135286266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129753093 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.124385896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122662492 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085980046 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129872792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.086849437 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134046683 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150619568 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088115478 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119710529 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13456484 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088009529 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135286636 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088100214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115921833 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109534551 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115978805 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131858064 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089570747 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112028078 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101077732 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112991811 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159469749 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092895651 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113896097 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091000799 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109990978 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163239979 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100792329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124250212 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08576986 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128134915 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126150075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086583602 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127443429 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092455823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127156395 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086800737 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114662246 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084951038 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117458965 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096094119 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.114968002 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087342235 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115817947 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132419841 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088953314 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125825589 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088101378 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116473274 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088771745 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119032617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097012662 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113753717 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131147396 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090788019 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128823258 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105013918 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127495406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.127532679 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091750218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126588383 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102280915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115554855 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089798974 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116274033 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10404223 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11149936 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087527296 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123571328 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.088561523 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.135528581 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135743965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089002108 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124256473 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086750846 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113725901 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086991771 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137030932 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116055202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089017554 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116634779 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091402584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11072736 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086837458 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116108057 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087186078 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114054433 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090208821 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113790037 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090482367 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130496432 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.087502675 seconds)
  done (took 11.753267486 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090741727 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112497858 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091047814 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113844827 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.08880792 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113761354 seconds)
  done (took 1.669782481 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113263947 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117052916 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102181816 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120032209 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15440118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101713143 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128999266 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121978028 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105715039 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126641689 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127139516 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10302966 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134921056 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118443329 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103203047 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119794671 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102665702 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123765666 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125439098 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095219627 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136183829 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118423695 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096022664 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129636963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091203073 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120286366 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122989176 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101752915 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126853776 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120352585 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095593677 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115913939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094806936 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122288623 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.127887873 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09455593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119245379 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.091596628 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124861439 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116868461 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103077905 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120257918 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124619 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093686897 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122570592 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094147452 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119126784 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123025011 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103235056 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118529237 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09181456 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120414053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116377541 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09268758 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120119627 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095927639 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118658602 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127201405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094874303 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121010943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090572393 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118331372 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121245458 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091849462 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128345018 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115883161 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095760255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120361769 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09496683 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120274597 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.092149091 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117549248 seconds)
  done (took 9.198460338 seconds)
done (took 34.101982666 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691648738 seconds)
  done (took 1.743399491 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.711737412 seconds)
  done (took 1.766072233 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.140411378 seconds)
  done (took 18.19427912 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502709942 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586026313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805038257 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179912344 seconds)
  done (took 3.127134675 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948470896 seconds)
  done (took 2.021388136 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242441155 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228343246 seconds)
  done (took 1.528274235 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.787557389 seconds)
  done (took 1.853826397 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355360394 seconds)
  done (took 2.414010285 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331410893 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183061256 seconds)
  done (took 1.581896852 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54729063 seconds)
  done (took 1.616258929 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.936269781 seconds)
  done (took 8.007646082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255109652 seconds)
  done (took 1.336521162 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29738324 seconds)
  done (took 1.368247655 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.570127667 seconds)
  done (took 4.641300779 seconds)
done (took 52.265149604 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098783512 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125373812 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101183008 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122896807 seconds)
  done (took 1.513609814 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100461432 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119525181 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09889704 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119536415 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.098994272 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121338497 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121102557 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099593538 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119054678 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095446803 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121216557 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093179998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123732376 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121085306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092489625 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122368591 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097617782 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120997041 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122170836 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09640533 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117134558 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097555564 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12360483 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093415958 seconds)
  done (took 3.710491628 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099416799 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117552739 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096204747 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117330022 seconds)
  done (took 1.511056901 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098895866 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141016421 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136916661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100590835 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141790731 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133789252 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092117128 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115586163 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093829316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12377688 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089775856 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.146683076 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136356464 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09768859 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126391342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086597044 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116484084 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135232687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099398164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125021931 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091489133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124055656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089268096 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138720714 seconds)
  done (took 3.85707507 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.102714776 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.149446113 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105232129 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137513967 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140375287 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.086589483 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.127264826 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139084365 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.146881578 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.114621336 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116345918 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.087970455 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.118846286 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.08807848 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.125070707 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.1315772 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.160363674 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.115243694 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.116884119 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.113993109 seconds)
  done (took 3.504812508 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096120891 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116097187 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087296366 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114517598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09857592 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119598538 seconds)
  done (took 1.714460235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089679468 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112814737 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0893051 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11241665 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093518267 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113598321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088180823 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113105962 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089661002 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114005044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08919541 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111347639 seconds)
  done (took 2.298975773 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.485466249 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117881163 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09356346 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11285998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119443339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088369519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127819254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091059132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140379449 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087515886 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115725814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089188953 seconds)
  done (took 2.75134375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233091249 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125266715 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287591955 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188250097 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156847569 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168003827 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149734289 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164188084 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195340102 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154984805 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230254085 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191260939 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149972658 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185941034 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138175489 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143147077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194072442 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241260723 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151983586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201765195 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221454549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161645027 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175758797 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147509387 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111583376 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166237222 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120159409 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127122624 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203749069 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200331626 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185807473 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160631188 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144466095 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233792865 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245512688 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195077356 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184827248 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134302474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.140317949 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164790733 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265234716 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136995647 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203449186 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156291747 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130336862 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189288276 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1920388 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172809188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147690177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110614624 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222527103 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208743572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.216747215 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135056876 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132409378 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184923305 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164523438 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123128749 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245714403 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220478142 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177269216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09242677 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145160129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187747491 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206871266 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165235686 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17803604 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14497795 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1870918 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182969896 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189305175 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188322422 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180477941 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138148468 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166295861 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171022709 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167378199 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252249431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174597227 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122163053 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165443669 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148188262 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12858244 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165344479 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124115104 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209464691 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149212791 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134789372 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160382108 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157943958 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157332848 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195225453 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213724668 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119507625 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110548775 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153247609 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126625816 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212014871 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136999486 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15575134 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15901006 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102147057 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173418172 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123419309 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17371984 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116387672 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174765035 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17997416 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124745964 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155988911 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122989447 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149871044 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172816364 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223671999 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137504882 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106164711 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228789143 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173088039 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147647666 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177014417 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197502587 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141476792 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148011131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194636171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241614251 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136762887 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202117747 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152024961 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132112289 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105201642 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174858488 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152462643 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159202663 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132076754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.177887744 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232658283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096878881 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137780936 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184529083 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131964398 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129642219 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158262683 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144625338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11101336 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145266528 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148454174 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176526108 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175081039 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151096722 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162928363 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148139691 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246454857 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139507774 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148386109 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145189052 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.092329729 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.215291926 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195126142 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127497992 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200961697 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168032028 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153934002 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168710854 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133374817 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174530763 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10169753 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11930762 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187839243 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163371561 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158640094 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218116647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12458897 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205975213 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.17814591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169056497 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17006407 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162175164 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157341086 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137427603 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156976758 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163330165 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.094315056 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140442498 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132181742 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15453339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140243345 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104667779 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221935647 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164227459 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145910807 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155380286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119728734 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202931798 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101003252 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173252801 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199970188 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117666211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220893285 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188880215 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181737673 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14198863 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228463274 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092470175 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125167455 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13935319 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169076935 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105031162 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134800076 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163615222 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177557939 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207581293 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1744238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159557447 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172740888 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186587052 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092955744 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167021825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180671853 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198326075 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158717847 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140607871 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149353013 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173369483 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154535338 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251626142 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164490925 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174490454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231954569 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.120315306 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131161863 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148335229 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181427423 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151657156 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173165731 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145247854 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140732004 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158522612 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102569606 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183345576 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180276842 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160152347 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186136899 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149945037 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181236347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127407104 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162634132 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156542935 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161765968 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.079490227 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197813164 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199127423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146573548 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166602519 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187241958 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130177465 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.175160712 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233217684 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191165431 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135078638 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155832645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156038019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16159634 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170022286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174824511 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157364754 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18619805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15543979 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106608124 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137852768 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147440411 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149414677 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103266084 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145257322 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.198540703 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110734961 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210334049 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158484189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154184386 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16880773 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12025713 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142396801 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149040969 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210073174 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196896491 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208989021 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.147598046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176013016 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2264429 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097948044 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130394636 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130119 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175055996 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107781622 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212239924 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.118283866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154913177 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17650964 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216718658 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108808893 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119635407 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154227606 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169723027 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160783671 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149508854 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156615162 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201922999 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14166803 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102032967 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167523572 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155667637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146468669 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191171618 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107779322 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145266692 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100464297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132063239 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161264083 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202287263 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135542107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182090602 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171986468 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165003272 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162452059 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14629252 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118493188 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163009813 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226229934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181721763 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130850511 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153900418 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172782328 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191485824 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157799956 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138982277 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197847901 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216343305 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195295412 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139935819 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165003096 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164925585 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154325912 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183304568 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134328165 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202036159 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134136883 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19221605 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150132221 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140156452 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169958708 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.145585586 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139555392 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183054465 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169745872 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134533948 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131707561 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165563984 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171943041 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152976093 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125296895 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178642669 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094651117 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216738151 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250832991 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105196755 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151656101 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146746229 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132575463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152973732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154944999 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110125455 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164682456 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202108491 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133416083 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185548392 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226498253 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165738645 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170698249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14247647 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689874809 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129045828 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190515096 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152128507 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227250446 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120569551 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16854428 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15851476 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165163056 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220243438 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1559549 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229000068 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189579954 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17368296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13142699 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156130175 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158327211 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141840419 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149341576 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164848681 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156631449 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149591306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174982063 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166001259 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131697494 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110946922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220996842 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123792709 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210170743 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17678098 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10824084 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196249289 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183840173 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130807557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17779079 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229397155 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11231131 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14953526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131642948 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152715577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25452146 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097012488 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221275186 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171784657 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154760569 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163825103 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143556078 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187399395 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154901663 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174341779 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144855634 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156454723 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153244609 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13450952 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100772938 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152462058 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162789664 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14749847 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155891392 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137805023 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214268565 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095082746 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143827285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154083454 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184375342 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239612079 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10696688 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13419278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159906305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149458851 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17243546 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173702456 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134119127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132461995 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108089162 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157334804 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111673031 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153610958 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154193802 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16230165 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227921519 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108224123 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277958652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139065776 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151003487 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089101602 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130963903 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147828259 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116100747 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154253736 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149637003 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256682142 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144257424 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103790631 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146263734 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124632234 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105522867 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163307467 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162858548 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198837018 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116528312 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109152533 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155978929 seconds)
  done (took 79.383174232 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161510118 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1330474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147606896 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205447857 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17536757 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266970322 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209755953 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252739676 seconds)
  done (took 2.708809743 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093540444 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146165036 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150479815 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132617196 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090893222 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116824545 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331976139 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129818494 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090128737 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139326456 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144342548 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118570555 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.507635829 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.087054205 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119498821 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109576463 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118455064 seconds)
  done (took 3.778257058 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.457240105 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706185506 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475145936 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.125271435 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.014218909 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.136191974 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.706794605 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211993541 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094527182 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.477291347 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770687798 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.181121219 seconds)
  done (took 18.513575466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098883404 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.118706627 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107121007 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.133955982 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094788744 seconds)
  done (took 1.712002853 seconds)
done (took 128.023762609 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103659892 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386512711 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072579816 seconds)
  done (took 1.654855447 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107873641 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135150531 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107722363 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134819148 seconds)
  done (took 1.655744931 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097021218 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124662826 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107893734 seconds)
  done (took 1.493502423 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320719943 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189308206 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142214596 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10624123 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12752488 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102446624 seconds)
  done (took 1.500821249 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096814064 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125342121 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097068783 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128162138 seconds)
  done (took 1.614214435 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095117319 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070428518 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099876729 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074966791 seconds)
  done (took 1.502914391 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112568345 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130881716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10238567 seconds)
  done (took 1.514168394 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128252916 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13776314 seconds)
  done (took 1.435616886 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104514886 seconds)
  done (took 1.268121006 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116801504 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167488216 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.186697303 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163538104 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226985159 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.162022979 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.138643031 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112371689 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129906429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141773118 seconds)
  done (took 2.714068461 seconds)
done (took 18.275367497 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102856638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422082209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383127373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144139749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718895812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379760074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05679394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144621832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162887138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092799957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137620902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671182067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045836433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374953164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005443362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.469299419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675542795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120573299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11749556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093715625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040633788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091322338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120226146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092074249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701530832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422610618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095415558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469611905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093153529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124342075 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381822372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12191502 seconds)
  done (took 17.231677276 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095012614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171983517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096637674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136006122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121515279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093573754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122835359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092296572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176900844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121384522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108921372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120918214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123428438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094539531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140113897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09174261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124127084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091117062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121000821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092221268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139173165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119190015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094445921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120200895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092496163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133856699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093037531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121252816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117901927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098661639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1262536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09370329 seconds)
  done (took 4.858975126 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139862467 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180624543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127252464 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12602869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167826234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122553437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196948334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117436566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18148622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122333074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137725051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093113429 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155011043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092888588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142436297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119763237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095950126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120696538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092333808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121770416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13758067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09364382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12060501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093283128 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121404432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10701687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122853979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091609388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121590187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125059961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099148087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122269149 seconds)
  done (took 5.189284961 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09741942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125260938 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108087026 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136997069 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094144619 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124823236 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095463036 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123957987 seconds)
  done (took 2.081010917 seconds)
done (took 30.525921986 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103013594 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120774899 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09809775 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132594197 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096647564 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130486749 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090110796 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.127881595 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098188694 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125611416 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.126333618 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092651442 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12085731 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091985989 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.125581121 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092872144 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130966373 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095351467 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132107025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102369111 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.123688745 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.097894972 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12691084 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13092249 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103626789 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130898793 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.102641278 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126466615 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092222758 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123233098 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.093471698 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.132399313 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091808958 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131599995 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119971704 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092395338 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118923536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092065944 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130583473 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098622715 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123702461 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098066734 seconds)
  done (took 5.886490106 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106911471 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.136831109 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104111617 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080420057 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11584147 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079680658 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136133761 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078793469 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109169035 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107411986 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076019609 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106527782 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077968836 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071497463 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.105894505 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075575924 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106962162 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076711324 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076062113 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104522689 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08019664 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072265977 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107490073 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077993051 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074238809 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109744018 seconds)
  done (took 3.643350231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099992087 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133162016 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111493848 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18144462 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158869274 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098019923 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132036906 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108825322 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137370633 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118328684 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096972645 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148360594 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109096638 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127686434 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089712876 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135955987 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132963337 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093884061 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126002887 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111963675 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136668014 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100823312 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141946071 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.102153298 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119852286 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120270492 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09625662 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132714075 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096462958 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128833419 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.094035688 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124066535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092243194 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.131786275 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123593936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09418137 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139579718 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099685204 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12954524 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091097487 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12467231 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091042675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141226758 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165077871 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090353137 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128149036 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098694925 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130545334 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0906027 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139407659 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128398057 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091326433 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122839153 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091010364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118737604 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104957999 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122132246 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094404988 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130506543 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093063811 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133613384 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093554581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136355586 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11917244 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098975119 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118777404 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092882424 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118417297 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113291154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121996637 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160555415 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093304761 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120334413 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100995491 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127910941 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096654463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.121578388 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105252211 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130508543 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122679452 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101035374 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123191124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094827594 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138069065 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093656356 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122524375 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.091946131 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127045568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093511801 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12152027 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131920333 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093290057 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122442936 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109657206 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119546846 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093806478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128311032 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.095951362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121043086 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102753439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.126830796 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120602925 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101894188 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120550641 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095013807 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130766858 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.095923411 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120058177 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094972243 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128554008 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.091863543 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122560065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122634477 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094703332 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129776405 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098375716 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124682372 seconds)
  done (took 14.709183034 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223524277 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214288909 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.121938959 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.216096319 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.103806172 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.133073575 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.206986617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.152466598 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09283425 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.12142549 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09351756 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.161784967 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.153175055 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.170356456 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104612247 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120211609 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1102458 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162888585 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.209151997 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.202735973 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141373705 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099462262 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.124713992 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.092294435 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.124116758 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.128822312 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109373648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134022731 seconds)
  done (took 5.226431074 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106942808 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154462044 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096069849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143566426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146131333 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091588542 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126968873 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092527989 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134124261 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132910224 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091550826 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128175767 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099185824 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131199991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091348285 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130586969 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130108396 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094169548 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123424153 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09629144 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127561631 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10032481 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125927103 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090768193 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129374372 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118251102 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087242137 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139373714 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091676693 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144111929 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118128346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100649285 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130754797 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092977482 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120588523 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095013565 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122859993 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094500597 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122254894 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090207599 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12000701 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077660161 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119431803 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105006568 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127622712 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078976765 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127146659 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.096908495 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127457081 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.089237202 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124693858 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093207802 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124465235 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12605429 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098684421 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125230634 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097113496 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.083753731 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128692984 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122287938 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085705765 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089847372 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126860447 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.085682326 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129999586 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.124721162 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092368405 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122481887 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097596663 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126441262 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095188392 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.123358518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090068787 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123493405 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097347448 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126296908 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095810027 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120309716 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091650574 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122107471 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07480385 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121559609 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07468762 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123188119 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091007432 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119601636 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096280584 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127205353 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104548111 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.123457935 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.125917224 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094326604 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11863813 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096911598 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.081518875 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125387073 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135764799 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.10931969 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122955574 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.08966848 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135684144 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124533359 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092946161 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074738934 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129449385 seconds)
  done (took 12.863216981 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.116276036 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.147356312 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093420747 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135780054 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.145330824 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117132564 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128444784 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.099616324 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.123839096 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108679733 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122934482 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098924609 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126413974 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.099152618 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.145272704 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128798176 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.094928643 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.13066752 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.100940099 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.157342565 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.104621194 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13652789 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13193237 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093371614 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125425896 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105252654 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.148072331 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102936894 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131811335 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.105931013 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133714654 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.147189816 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108553946 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126712535 seconds)
  done (took 5.329349956 seconds)
done (took 48.834182586 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.279758871 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.50469404 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.271912251 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.229641427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.314915707 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.310210943 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.306784675 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.272388692 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.93169738 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.271957669 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.542296665 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.95796943 seconds)
done (took 61.398559834 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.280787109 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.408366759 seconds)
    (2/2) benchmarking "String"...
    done (took 1.537905877 seconds)
  done (took 4.145120215 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.628071844 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.271192098 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.566660968 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.272569842 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.29614231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.724303913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.961910746 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.601735529 seconds)
  done (took 28.892038586 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.273017342 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.655500314 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.803615751 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.800320526 seconds)
  done (took 18.731382052 seconds)
done (took 61.87691788 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.274081719 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.334649545 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.291460814 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.254521448 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.38382111 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.308503757 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.637142741 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.343687653 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.29435001 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.256328687 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.301801957 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.281464733 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.287378218 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.659101517 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.276708973 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.274892325 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.313255763 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.865069867 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.665639317 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.284894971 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.292717154 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.348549648 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.286099531 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.278883303 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.317816314 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.284605909 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.272563287 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.270496135 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.491866744 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.271022667 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.376666635 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.809720346 seconds)
  done (took 193.090366988 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.268999022 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.133946293 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.293875572 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.29606615 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.604850093 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.471914692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406791686 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.734821395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.290613763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.276435678 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.453551802 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.269160063 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.518387604 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.32931753 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.274957873 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.375720946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.498636662 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.5172521 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.287073146 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.508418443 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.290008594 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.345340848 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.271083433 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.428881406 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.288789308 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.348014455 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.294816573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.26977155 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.482399425 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.432131239 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.309802652 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.308944978 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834013274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.126797839 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.284139828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.298225194 seconds)
  done (took 151.620114545 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.554648189 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.265945411 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.267659848 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268389657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.297673764 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.269242795 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.775991115 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777767497 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.766585533 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.734786809 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.331428825 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464095331 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.268268996 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360312628 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.281383402 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.269399655 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.284519741 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311391292 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272938147 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271033191 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779661285 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.288637857 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315223452 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.279098558 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.270282464 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299246498 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.65737438 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269856697 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299218948 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.580360509 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.316169636 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270287126 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.55034208 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.833521141 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.270295808 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376846694 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271248836 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297871158 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.27022507 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.534726412 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270436964 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.26949414 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.273283336 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.839685631 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.274923431 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77787095 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270420599 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140604676 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.271469254 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.271469196 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.743987107 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.715871216 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292846109 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.271853931 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.27348641 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.270631758 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271544142 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.30133534 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.623772833 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.371035889 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.288034235 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.274993421 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300518745 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.271775661 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.289385374 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273075012 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.271476513 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.330008409 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.495791665 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.614232439 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788716033 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275881908 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363317669 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388535323 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.27250899 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.271551723 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272349419 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.272283653 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.376517778 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.272692185 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271598666 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.655761059 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27950591 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.274332386 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330705934 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.364919915 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.273407188 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.557711425 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.276892458 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.272747429 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935148725 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.272966953 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364265134 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.273971263 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.271304436 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.273467976 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.655514433 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784022152 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.424521124 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.277735076 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.643653933 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.278168381 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.670592337 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773695148 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.827052402 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.274983221 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378808364 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27778008 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.275633743 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.273724506 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302995613 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.291805595 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331722498 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273442429 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.669983121 seconds)
  done (took 353.165335736 seconds)
done (took 700.630251542 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.955604631 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.904236141 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.037849895 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.919086327 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.902552331 seconds)
  done (took 10.920613305 seconds)
done (took 12.121272434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459539525 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458716218 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33350082 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.460247566 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304153783 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.476395267 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438972249 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.297358915 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.376186049 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.354546334 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.376127866 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326451707 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304299841 seconds)
  done (took 19.168361451 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.581661285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.576557307 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339193405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581172495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313784019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.587410774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473457808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.485489644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.492148717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310119734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289357163 seconds)
  done (took 17.233575249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.594206053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.5827585 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343183086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.588116976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316703861 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59033075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477144475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.490440726 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487742651 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310968285 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289541007 seconds)
  done (took 17.272722012 seconds)
done (took 54.874761106 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.284012257 seconds)
  done (took 2.487323901 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.318125899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.478203542 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.303505247 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.287812953 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.285751926 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.284798303 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.288359702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.286525652 seconds)
  done (took 11.736959722 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.282833548 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.283979505 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.285061249 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.283915925 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.283859222 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.282517912 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.281455666 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.28628462 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.281907306 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.281427522 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.281749831 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.281475615 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.284708337 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.284933891 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.285023692 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.282421086 seconds)
  done (took 21.737409291 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.285651281 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.283371742 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.28307372 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.283123206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.284734098 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.284558064 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.284287167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.283990391 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.283658771 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.282650041 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.284960308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.283336121 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.284070692 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.28292526 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.282981073 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.282878245 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.2822119 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.283769532 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.28737768 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.287077327 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.276909368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.277685549 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.278356386 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.277701641 seconds)
  done (took 31.997401718 seconds)
done (took 69.162173108 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.243617138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.823571472 seconds)
  done (took 9.266787331 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280229031 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.280154619 seconds)
  done (took 3.760271117 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.278612416 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.278488407 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.277889068 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.277888139 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.278589781 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.279651246 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279625283 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.278430239 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.276849645 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.277578859 seconds)
  done (took 13.981843256 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.279985935 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.278413443 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.275365259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.277877284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278597284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.276492073 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.277632175 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.279147671 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.278694099 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.276700237 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.278017484 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.275922898 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.27946829 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276365284 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.279376791 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.276464124 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.276779889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.277553468 seconds)
  done (took 24.196074579 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.279796878 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.280173067 seconds)
  done (took 3.758463426 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.27854215 seconds)
    (2/7) benchmarking "second"...
    done (took 1.277106636 seconds)
    (3/7) benchmarking "month"...
    done (took 1.277670803 seconds)
    (4/7) benchmarking "year"...
    done (took 1.276709499 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.277215323 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.277223967 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.276989803 seconds)
  done (took 10.13976054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.282058643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.451033394 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.529411659 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.874918752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.281339094 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.283918051 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.152647333 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.283317846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286420228 seconds)
  done (took 14.623553212 seconds)
done (took 80.924824018 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.283232686 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.294550868 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.38563797 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.281845218 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.306688238 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.574405694 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.280724567 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.398190518 seconds)
done (took 38.005603207 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.285857408 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.005397549 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.001159734 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.274076644 seconds)
  done (took 11.481591222 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.264571953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.168802951 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.264757163 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.26969656 seconds)
  done (took 18.169014336 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.270462327 seconds)
    (2/2) benchmarking "read"...
    done (took 1.61221354 seconds)
  done (took 5.083749905 seconds)
done (took 42.220833865 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284279044 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.284075575 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.280632743 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.282777886 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.281034389 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.280403873 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.280564281 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.283401439 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28366177 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.283234875 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.280542222 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.283160011 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.283343462 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.284587054 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282832209 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281026444 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281855441 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28384643 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281391975 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280584271 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282170526 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284211706 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.281703561 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.281657787 seconds)
  done (took 31.980186218 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.284440344 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.282321142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.28451306 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.284393082 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.282186413 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.283711146 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.284338265 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.282078764 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.285184206 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.284631582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281769561 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.283040342 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.285018282 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.283324607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284905459 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.282503814 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.285513927 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281877995 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285465793 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.283212119 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.284862108 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283118284 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.283126949 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285910177 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.284451981 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283821645 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.285578909 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.284857794 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285426229 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.282872205 seconds)
  done (took 39.721175402 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.290511769 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.290814222 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.285850706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.286284443 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.28607871 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.286617973 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.28621422 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.286649933 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.286286691 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.28664197 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.285769557 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.286861042 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.287233857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.287635328 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.286321004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.287024062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.286930628 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.287768018 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.287104651 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.28664025 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.287348502 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.287513347 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.28685429 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.285788734 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.286923004 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.28639545 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.287343213 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.288484944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.288337771 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.288327132 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.28867539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.288534465 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.288291686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.288312948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.288082054 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.289380803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.292828676 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.294416562 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.288312078 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.289529566 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.289739274 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.28809002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.289291824 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.290065935 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.288670163 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.289129991 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.289043305 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.288905598 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.28965404 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.289828924 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.290020658 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.289960786 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.290200415 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.288801407 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.291119735 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.28907096 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.289080833 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.289117232 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.289773683 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.289559441 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.289227064 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.290584211 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.289452989 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.289574732 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.291075157 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.289134627 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.290875505 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.290403021 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.289855893 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.290498537 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.289951324 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.289064115 seconds)
  done (took 93.987426563 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.291375977 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288142319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288794576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2863266 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287360312 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291013193 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288899607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289898736 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289281632 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29119518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291555006 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289156503 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288597166 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291651411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289782611 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288971222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29181841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288741846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.29017513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291618552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290762064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.289195455 seconds)
  done (took 29.583596602 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291827811 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290822398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.288181543 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292316948 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28959893 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293450466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290869009 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292436366 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292448596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290919009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294855415 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292951022 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28922277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289599177 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290427347 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290059152 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291918066 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290298621 seconds)
  done (took 24.452644997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.290647417 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.291397959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.293509541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.290592785 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.28995026 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.292493586 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290201371 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.292609809 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.293919678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.290883057 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.294139976 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292307107 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.293602171 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291021931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293616185 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.292202437 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.294499399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290866575 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294001485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291495523 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.291389428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293483042 seconds)
  done (took 29.641126758 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293911273 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293003283 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291704605 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291737269 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290720624 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294538959 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.294167622 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.292073568 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.293751396 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.293841321 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292435209 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295005207 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.292159084 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292890307 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.292291927 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292164193 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294915914 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293419013 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295172497 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292076344 seconds)
  done (took 27.075411055 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295122491 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295228223 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296308269 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295718308 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295360066 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296251602 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295892827 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295770519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296161752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297241486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296224347 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295651166 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296640233 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297327453 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296377427 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296044733 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296759155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297159703 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297298258 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297145014 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296276683 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296529272 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297556898 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297390153 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296510264 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298034958 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29735904 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296739643 seconds)
  done (took 37.516038326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298146288 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298390655 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.29591535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.297072165 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.296023879 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.295198715 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.295856867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.296212873 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297973152 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296435116 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.300044423 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.298755358 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298753802 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.299225507 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299042024 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.299579127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299122485 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.297042539 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297712001 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296528544 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299735897 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298680165 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.297991816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295570734 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294168571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.296531382 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294638088 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296336499 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298972573 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292182026 seconds)
  done (took 40.134963754 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.314077266 seconds)
    (2/2) benchmarking "in"...
    done (took 1.313022329 seconds)
  done (took 3.840376494 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.292102762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294437177 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.294190646 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288795848 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.29023944 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.292729098 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.292544732 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289862703 seconds)
  done (took 11.547732153 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.292315511 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.292611199 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.290202647 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.28943801 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.290456837 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.291549091 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297332384 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.309004255 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.291029346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.289748919 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.293568 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.294316047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.289664726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287571227 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.287038626 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288323879 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.289315715 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.285458675 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.285441208 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.285784854 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28635958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287238026 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287109732 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.282600197 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.287360171 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.29300894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.305012294 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.282848687 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282710181 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.286065767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.282471512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.281060124 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.283012728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.281910108 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.280641122 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.281500954 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289621886 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298400048 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.286949377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298987364 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281004696 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.276284616 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.279215823 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.278543692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280212552 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.279605846 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.278752772 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.278973823 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.274766552 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.277446517 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.278178538 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274824518 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.273526941 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279653344 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.277047581 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28177237 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291780725 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273624143 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.279455585 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.281787103 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.302291481 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.294730879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274809281 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.272531394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279924361 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.288483719 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276933121 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.28658374 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.268306712 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.2701665 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.276052466 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299613832 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.291914297 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.269326564 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267901839 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.268650725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268687013 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268222336 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274597175 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.289982917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266012902 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267202938 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275054726 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283981411 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.265072149 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.26620996 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266921185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.266932019 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264559848 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273969875 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.283888368 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.264214091 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263563544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.264444509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.267472543 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262213623 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.263088951 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263321928 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260533527 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263080546 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263327065 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266559451 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271167404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261429096 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262179036 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267141881 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.281216783 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261053978 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267344418 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262248039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262089957 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259733018 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265833274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25799705 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262872075 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.266577184 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.260639122 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261915953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261818872 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259940283 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26783229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28066193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260321602 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259503424 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.262992042 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.26965963 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261688575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261498275 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25960073 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256059645 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256331933 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260442544 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.258845642 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259623555 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260250436 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258409302 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254610224 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.258008772 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257432369 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259452533 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259617321 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258410698 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.258317061 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257831436 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25682469 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.259114523 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262025193 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274824744 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257127238 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.257207018 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255121557 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255840439 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257213112 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.25592007 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.256511037 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256058229 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255731721 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256357831 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257964797 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25472162 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256169892 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257114973 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258599786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255667447 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259544755 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254397303 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252674405 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255958633 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256234705 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254331958 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256082536 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25475106 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256461734 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259919325 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255666063 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255556336 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256564844 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254425599 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252949836 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255068819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256931182 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261013691 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254105848 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260193247 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271592546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2542548 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254950965 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253951369 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25442901 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254256201 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257561908 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259654378 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26493494 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27584672 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254527783 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256762303 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254003508 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257306158 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257727268 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.252133585 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253298749 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252929513 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253091537 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253373076 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255440094 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254260022 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255762204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253444593 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252605155 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251985326 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253620283 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253842809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253283348 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.250879389 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253085354 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252937805 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251685473 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249566054 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251533858 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252181629 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252335774 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252714282 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259382627 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249490884 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253205133 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253683538 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251714665 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251169609 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252124717 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254503133 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253629575 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257600317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270214653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253203799 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258837271 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27086193 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251253853 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255536058 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25252902 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249492233 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253368644 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258160024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252941785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253524079 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252734404 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252064657 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252348025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258582914 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.268919244 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252242983 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253212782 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254476834 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250392905 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25413242 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254055941 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254287461 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254922496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253363909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253518352 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254611065 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253672596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254916493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252760888 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25551503 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259216765 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256229006 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252432923 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254246014 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253988295 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255820896 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253221032 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.252694788 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252884009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263208007 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276157394 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259427036 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272274703 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.255278142 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258131245 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27125816 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255271962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253254832 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251837712 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252957664 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.253544268 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.252320106 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25231483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252208872 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253335821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253240634 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255548599 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252947225 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251602898 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252548516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253172079 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252989188 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252441164 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253408016 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254507999 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255141271 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252241391 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252965062 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259959222 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272345567 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253747226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252791437 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252892838 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25304869 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254090245 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253779987 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255776382 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258533048 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256754361 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.260654306 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255150828 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262048736 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252946454 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257065779 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260895882 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251370297 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252860575 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253876453 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254280373 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259398296 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273331105 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255761391 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256739111 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254201906 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255370256 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255115142 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255656002 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25595134 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255191225 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264741286 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.274280553 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257758339 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256645281 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252880343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254858652 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255238729 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254170087 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259203658 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255181103 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256274542 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255170368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254958604 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254696297 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256588963 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25668397 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.254483053 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25750147 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262265649 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275017458 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260292449 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.257024551 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.263442313 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274102271 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264645822 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.27593994 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25755509 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.257023522 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257544268 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258102227 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.257324698 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257377911 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257620051 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258819788 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259555878 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257291198 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259636141 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257926466 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258233883 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.257106699 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266825244 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276589212 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.258716725 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260909773 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256340672 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25910763 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261838508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258164342 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257038388 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.25993923 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265832055 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264134644 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258973765 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257608795 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258885823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258215871 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258243602 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258218988 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258326727 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259117796 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.259440726 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258595335 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262187632 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258393742 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260895143 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259139008 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25922719 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267146676 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277462481 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259440698 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259577769 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260622146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25922692 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25937616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25903493 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260014714 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2601904 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25981154 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265003515 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263781936 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261108979 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259585929 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258825013 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260192806 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260743693 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260716084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260557078 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260248692 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261506003 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260327752 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260865389 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259438796 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260542459 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260021628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260648912 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263682118 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266734216 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259641167 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258505736 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.261630029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261083388 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260067521 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261742749 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.268557357 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281232392 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268946514 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.268001835 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.26361251 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261705618 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262917163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268006666 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261009687 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262374466 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261217279 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.262856673 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261979621 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263790157 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261612723 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268982694 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279983327 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.260149671 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268072972 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279236018 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260638514 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.262293205 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.263332575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261000556 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258643372 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259276728 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.258919924 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26563792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.281155687 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261060236 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26126377 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257980443 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261195161 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261998752 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259820137 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259230065 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256371775 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258911711 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259219773 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259733361 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257532599 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.258829042 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258922996 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261167625 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264404035 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256084351 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261021329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.25921355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25988721 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260023449 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259442838 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257152842 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257038479 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259043626 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259622969 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.25999871 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262105883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259223005 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.260273471 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260438266 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260872872 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263129592 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268476805 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265564495 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25715928 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259482559 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260267388 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.262995607 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259490247 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261749043 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260460215 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260616173 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.260047381 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261073681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261282581 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263632612 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274746794 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.280111196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261241184 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.260875232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264100275 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.261056315 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.259161536 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261821236 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.263072664 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263874219 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268177721 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261762887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267951251 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280472528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262621033 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264511912 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263054863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268578016 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26413998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261572167 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261714713 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266665845 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275668948 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262266172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270993934 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287304446 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282548921 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264443431 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262051144 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262793218 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26337354 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264639404 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.26287344 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263096712 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263036734 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263245545 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263129973 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267304765 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263735714 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263562626 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263665604 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262597635 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265182281 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261269856 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263865822 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264564185 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263685626 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263313033 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264463856 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26564475 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275267414 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.287354142 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.265129873 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263951403 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261523442 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.267296766 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26531668 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272695892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269776599 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264500643 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264312828 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266402596 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263134934 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262420356 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.264703506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264585842 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264808494 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262367041 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275357327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287542184 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268219396 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265521044 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265382204 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.265163863 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265217908 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265793913 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265097677 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266504825 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265881601 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268073138 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264838033 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265117479 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268008242 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271476566 seconds)
  done (took 754.358168791 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263661822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263355309 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263794539 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263577882 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263866743 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263868585 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263534554 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264534532 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265612918 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263928307 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264646784 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265017186 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263916935 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264778208 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263962712 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26485232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264360746 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264730954 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264635953 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263883103 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265209 seconds)
  done (took 27.734861844 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267994946 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.265051878 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265090619 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268239635 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264846223 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267312651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265636415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267901871 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268321475 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264738322 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267413123 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267865097 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265965582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265132872 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265782094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269108342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268036716 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266456332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267573262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26638357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268253441 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265359213 seconds)
  done (took 29.055265523 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269456921 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268137959 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26862117 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.266268666 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269392131 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.266611725 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268114567 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.266890943 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269079052 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269402531 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.268481429 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.26992412 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274980805 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272404707 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.271494412 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.269620628 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.413811813 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269798087 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26988464 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269854483 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266055616 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273734086 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.285409963 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.267200422 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.268784643 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270002744 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.270351258 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270319619 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269187025 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.271110547 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273094719 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269639552 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270095105 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271161187 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269733761 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270085365 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273256287 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270111152 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.268525263 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270508886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279309242 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.28732319 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271069387 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276758039 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.289083359 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.270659591 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272057538 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277632108 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.268855473 seconds)
  done (took 63.632029042 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270711347 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271708677 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.268756315 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271453534 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271604176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271837766 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271293758 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272101639 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.268545327 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.269398763 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.27256542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268844001 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269472158 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271737116 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.272834913 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269882159 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270001642 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270184673 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.269973313 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269439484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269998631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272457432 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27228584 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270201019 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272856184 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270464551 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270321168 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274262095 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269810446 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.270592232 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.2725303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272829109 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.275026106 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270308572 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270824255 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.272619129 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.275173196 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271707783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275018671 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271380794 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274388995 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27381255 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274974462 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274249984 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271425707 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.2712226 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2719216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.271602959 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271767251 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275515076 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274117435 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272072768 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274770861 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271776895 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274704967 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275642823 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272968933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271957115 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274779451 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27276524 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272572959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275027403 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273570507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.275365971 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276079402 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272451958 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.273341477 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274952951 seconds)
  done (took 87.704956309 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275505384 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.275044584 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276500956 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275351401 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27633393 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275706652 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275219942 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276707433 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276371426 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276120795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276660426 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276298489 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27653919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27679518 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276298091 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276632843 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276121855 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276799344 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277275528 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276891484 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276830572 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276777235 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276294851 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276401195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27624205 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276745341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277008419 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27662614 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276532448 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277113679 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277270872 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277855058 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277411191 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277816066 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277076064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276579241 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277870737 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277121605 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277789446 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277768907 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277612882 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278490346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277287428 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278508584 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277721507 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278133165 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276251684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278181758 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277891698 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277761907 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278153651 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277326528 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277159619 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27781238 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278502721 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278163046 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278295878 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278246573 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278331065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279257203 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279162133 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278483284 seconds)
  done (took 80.379523752 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278314495 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279782763 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276840988 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276074161 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278701792 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276605519 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27938936 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278815317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27941671 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28008354 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278875881 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276456711 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276398121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27949372 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276524817 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276982415 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277128462 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277879604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279670935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277873186 seconds)
  done (took 26.758604578 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278180969 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279819134 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27814419 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278235303 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279787036 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278595824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281324782 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279843719 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279052926 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281455749 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279958973 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281145127 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2778857 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278834096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280277204 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27793298 seconds)
  done (took 21.669113196 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277884871 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280073775 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280855822 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281336209 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27919485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279793763 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280434159 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279261491 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27861145 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281650886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.282198736 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282529733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282123027 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281184758 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280028524 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281232627 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.280435215 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281095438 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282120009 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281960386 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279683051 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280290868 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283752366 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28246993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280009527 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281754135 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280679761 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279984281 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280850292 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283332595 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280727177 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280945734 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280265052 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280706794 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282997828 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281187504 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282741983 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284063976 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283339243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283399861 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283663765 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280922816 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28359341 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282733752 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281654761 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283826285 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28089365 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282537826 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281067831 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282145963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.285499202 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.284070544 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285293608 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.284973505 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284422008 seconds)
  done (took 71.695218066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285259097 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284849459 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281556093 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285527378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284616639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282530875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285059463 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281845274 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283459541 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28542469 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283012136 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285527786 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282230461 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286403545 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283590133 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286143615 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282872781 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28371698 seconds)
  done (took 24.31645244 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28533474 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284224652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286722899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283767262 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283192224 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287103342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284685625 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286093237 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286237038 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283985373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282962936 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287185414 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285555598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287499555 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285559304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284427427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28676597 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28582988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28359624 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288492644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287214532 seconds)
  done (took 29.48480322 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.28543162 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.284907211 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.301835506 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.323826823 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.326190829 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.285891242 seconds)
  done (took 9.012064588 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28644638 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28661748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284379004 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288076052 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287141203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284097577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285694263 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285214029 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287364205 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284289984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284853109 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287006635 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288814012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284881325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288717869 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287677033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285529473 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285074255 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28614679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288120016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284763923 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287504229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285898023 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285733104 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287213005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286638916 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289178472 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286111048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285724424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289203069 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289688688 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286771263 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289261913 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287147802 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290150168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287968064 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287007514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288319244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289103609 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286842415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289799361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289162418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290965818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287890292 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289218631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288387827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286660424 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287748952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288737908 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29074191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291649161 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289309573 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291893126 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293359033 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292134542 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293519107 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289408443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290738975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291571085 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290599288 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291023981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293456713 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289761136 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291400093 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29318685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289941752 seconds)
  done (took 86.235320039 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287802577 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289231113 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288137375 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290569537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289196322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288833746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288741511 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28823935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288586348 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288352974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291355457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288673216 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288839434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288480025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289585123 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288723234 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288536303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289827795 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289302273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292516008 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2900569 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289879619 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289002262 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290633905 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290060288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291447126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28969711 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289821527 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289589235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290368088 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28934439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290883341 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290768029 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290981716 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289659391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29106711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291182176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289998996 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290727102 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294062004 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291291242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29335315 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290591476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290832629 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290702342 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29104512 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290748106 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291966366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290600248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290881669 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291478896 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29369317 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292452892 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29107396 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291504853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29031657 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290805202 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291511759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291706861 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294863502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292216107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292642304 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295124674 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292087287 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292422403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292056123 seconds)
  done (took 86.392298492 seconds)
done (took 1769.111411892 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.352342164 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.393376532 seconds)
  done (took 13.956454781 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.456734027 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.409372488 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294493161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.323046762 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295477448 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.295365657 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317721647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295834676 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296633744 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295366701 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295112652 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481043135 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.350623093 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296509814 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295810205 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388382784 seconds)
  done (took 42.601638654 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321544895 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.301732357 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.410048407 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.316716843 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.321829303 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.484525163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352321446 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.300904168 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.466805916 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339933505 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.801361644 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32405323 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299851402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.372636788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.31999249 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.48492185 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.538999657 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.808347913 seconds)
  done (took 29.781478903 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.732701776 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.331516266 seconds)
  done (took 9.280654311 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.301785745 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.329733309 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.333900533 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.322591605 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.305966048 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.335009028 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.334022981 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.336646659 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.332420664 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.349976038 seconds)
  done (took 64.499445413 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321593526 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.301603054 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302338638 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299357396 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.292818402 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293192453 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300228146 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295083414 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.831668375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.424216586 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319353434 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306479802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320407114 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302722045 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.299322704 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.337627606 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440757127 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317307224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299221641 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.307342572 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302205168 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.411100055 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.342369565 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301045635 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424779717 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.849251225 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.305524433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308513932 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421207929 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318321881 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300998506 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302090797 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303741415 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.877047972 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.799305165 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319489496 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.324884967 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312363179 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299290029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439366625 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321331885 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.307846503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.294918025 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.772532933 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.459101712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.415168385 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.480966122 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304839637 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304421848 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362522549 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.30331534 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304213076 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.331170526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.055069239 seconds)
  done (took 109.41257801 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.35258853 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.784882832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466336192 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315894917 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.149483054 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952094605 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314476533 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574711166 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.335243407 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297493089 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.578672648 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797183411 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318738114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.362708692 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.815341759 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.380411412 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300270809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.024680183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.31767319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297951638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710444806 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315796742 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303541554 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.349293044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337992068 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755267285 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.712691056 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.798899636 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323254301 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297157705 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758487386 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329052584 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.338484117 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301598402 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56669092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645406067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635717325 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321399217 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305947627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300372314 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.319417027 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749607117 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649116321 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316334352 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304703107 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75853937 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315506725 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.309052795 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301364204 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507866418 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.223595636 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300463779 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.703285019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30484606 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.570347515 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.305438695 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37413959 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78045458 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315938409 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.47329449 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323314922 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300471375 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302752244 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299923129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302929635 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636417488 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664686194 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306469961 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637337487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76905406 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318056515 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.814392326 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.210771195 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314916976 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.342806182 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300739465 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.871948307 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799713219 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.359657528 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301779585 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621754108 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.32049889 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.573816198 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317157545 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302916129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724771811 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.319802782 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.340983156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.301288492 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.306310647 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.944506724 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301965017 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583774004 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.341351072 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.301104572 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.301879611 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328801731 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301889549 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307831318 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304975206 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.813212063 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.332142217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.427140086 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321373581 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300429769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323673909 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.30190744 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303313542 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526056682 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.789030113 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.309097807 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303700126 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303951165 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325610159 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.569283521 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.30748698 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599705669 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320266234 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302601948 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311193513 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.967271467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359551048 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303686243 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.310933339 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.142742571 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.526364169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320705244 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.304532259 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304493364 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.320123317 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.612344029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304805582 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.381330702 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308383089 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998572808 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331476315 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.332740151 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.880243423 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310845218 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212660855 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321785972 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306864465 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62360285 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572408443 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.633655793 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304785188 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.30429441 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975998965 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.357860291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452589725 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322818547 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288600095 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502834597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548433347 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30737096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.93805658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.306160968 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522968579 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305478863 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635206858 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784650044 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.321003796 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309751377 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999057624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.964178031 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.940219356 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.308045119 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.576908314 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.27741939 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.757248118 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.30223576 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302361607 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.834538441 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303797166 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304322221 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.301657041 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.301115372 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367337319 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47455116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.943891188 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302718583 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749121664 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371953919 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302224958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313043523 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302565845 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.654783503 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335587202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.301996503 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.311913887 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.303825915 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.302512727 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761851763 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.233720663 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.303615839 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455983926 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923029472 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.325314248 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302408532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.949025705 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.510558705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798539488 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.364292764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.602668386 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.325003536 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.343424661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.085615738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.403607192 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763877248 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320135134 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.321064347 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884522759 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.321011118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.373371159 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.30602589 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304228776 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.827800174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32112346 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.30561466 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.60249835 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305179485 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557225143 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.305413702 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.333782091 seconds)
  done (took 1104.806225699 seconds)
done (took 1375.549741616 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.30673308 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312194718 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.292174466 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312926885 seconds)
  done (took 26.452980794 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.316211265 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312787185 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313545151 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312250058 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.314023692 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311071398 seconds)
  done (took 9.108127214 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.368768957 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313144365 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312112436 seconds)
  done (took 19.22284397 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.524279316 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.582176992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674508749 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.492726289 seconds)
  done (took 10.502893125 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313167256 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312572135 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312481852 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315307339 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317067887 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318851645 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314951577 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314488832 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318677083 seconds)
  done (took 13.066766148 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.116524576 seconds)
done (took 84.698634665 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054332192 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.909805493 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341287372 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.719909017 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406514772 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.295478381 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.859600389 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.672972407 seconds)
    (9/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.88467191 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.549334626 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.325917523 seconds)
    (12/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.383692368 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.159154447 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.35073252 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.673233156 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.920838488 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341359916 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.309008989 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.293307905 seconds)
    (20/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.403436752 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.849536485 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.299580937 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.337394904 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337855586 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746688515 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.31024905 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.371781747 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.11108275 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.295475352 seconds)
    (30/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.684302226 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.135511623 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207321109 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.307180606 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.344750815 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.953999901 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.386821054 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.515172324 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.326270868 seconds)
    (39/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.330503562 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.312190171 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.146059505 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418784196 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.337256083 seconds)
    (44/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.677503317 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.159791053 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.686842881 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.76969814 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.31067376 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.2489178 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325524259 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.639374792 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.516713526 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.36302672 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33704666 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.396848242 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.422358246 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.352560518 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.321157213 seconds)
    (59/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.324817795 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.575622379 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.312037501 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.682458239 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.743442054 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.764747513 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.392023308 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.312518547 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.437155826 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.012744287 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.165956184 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.344659391 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.563135174 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.422289779 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.506537397 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.511446819 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.338989752 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.662369156 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.88050076 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.496355972 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.603670819 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.43920895 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.379900383 seconds)
    (82/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.608716239 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.394807806 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.411270051 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.908821977 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.377142401 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.790245224 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.648292927 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.341529935 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.032244466 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.662447213 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.331843805 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.323605644 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 5.30868283 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.235080797 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.744556326 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.435028419 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.732617389 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.07907853 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.862912396 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.645060869 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.642054097 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378997853 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.41394035 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.382399627 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.661871048 seconds)
    (107/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.340122437 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.529623332 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395703647 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.155633604 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.703362409 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.053752519 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.315415083 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.510535421 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.33496827 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.872019093 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.338070642 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.342701761 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.469221393 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.873175813 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.326576928 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.340256722 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.094470298 seconds)
    (124/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.134871609 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.416401542 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.851843083 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.35465622 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595016218 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.730457274 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.336146045 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.05583415 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335535106 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.577402674 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.307363036 seconds)
    (135/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.02452616 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.182217717 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333011792 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.389201268 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.603278948 seconds)
    (140/309) benchmarking ("sort", BigInt, false)...
    done (took 6.332274369 seconds)
    (141/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.862261565 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.214561975 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418066725 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.710164728 seconds)
    (145/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.942300572 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 4.377562586 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.892374581 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.140370006 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.057594918 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.343768792 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440144938 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.330325009 seconds)
    (153/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.504812539 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360873942 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.332737376 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.401949737 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.340617236 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.297433296 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426002471 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38085192 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.615756036 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.325809326 seconds)
    (163/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.537429919 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.322165135 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.403414538 seconds)
    (166/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.345920928 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.954897493 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.88044293 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.738041535 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.445522359 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.639438464 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.105357151 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.424647686 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.683816628 seconds)
    (175/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.891393134 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.334104888 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.577975786 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.526687245 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.140215868 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.345044979 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.317342818 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.55975884 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.518085463 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.31293726 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.329864502 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.336029707 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.148686694 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.361465891 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.317913172 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.570900748 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.957331548 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.167353249 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.304779754 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.80059774 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.159929197 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364670248 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.670836033 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.377782972 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429489885 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.845823241 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.342170939 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.416335437 seconds)
    (203/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.440800463 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346672431 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344270495 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.328711422 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725995187 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.33247676 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.403551419 seconds)
    (210/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.921989745 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.728098698 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.962923174 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.530828052 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.31983154 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.332015874 seconds)
    (216/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.096024003 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.337693151 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352887241 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.510340779 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.303286582 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.595429814 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343538805 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.452553428 seconds)
    (224/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348250079 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058936194 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.583083579 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.060677763 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.329976422 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.369601072 seconds)
    (230/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.869901835 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.143198461 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.40493637 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.334048351 seconds)
    (234/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.57274461 seconds)
    (235/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.587911347 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.478572505 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.340206974 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.333802932 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.610165309 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.309449802 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.091184163 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.368576059 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.256374828 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.186740049 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.429092251 seconds)
    (246/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.359635358 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.800035118 seconds)
    (248/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304734497 seconds)
    (249/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.713944808 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.668802485 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.323546613 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.690860314 seconds)
    (253/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.601424176 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.969017709 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.740115583 seconds)
    (256/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366183226 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.30969306 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.325555937 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.595933268 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.091791257 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.458011433 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.544896188 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249134935 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.458058421 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.63970767 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.902548225 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.324378791 seconds)
    (268/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388830792 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.608508966 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.756184547 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.879900067 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.340981879 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35028879 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.439108357 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.725027324 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.522697727 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725203751 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.923332246 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.808802915 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.312797086 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.142814399 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.702811828 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.092612088 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.972209698 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.743136583 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.426384272 seconds)
    (287/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.669779946 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375535194 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.323989328 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.41270829 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.325277646 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.414656597 seconds)
    (293/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.659398265 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.435233724 seconds)
    (295/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.740059143 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.368952661 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.150884279 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.334999392 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.314876543 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456963149 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.424541294 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.367769219 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.750498134 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.967472047 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.355519013 seconds)
    (306/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.40904623 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.33635888 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.676301968 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 5.637816122 seconds)
  done (took 915.093250562 seconds)
done (took 916.325823232 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360298683 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353719381 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.336042917 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358242739 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.448607577 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.360485491 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347440021 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.33883599 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386357575 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.38695804 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.336434056 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.360347646 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338520546 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338460676 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.336335395 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352217688 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.351617102 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.338270041 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.354500354 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.347848764 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.353882537 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.33809988 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387290142 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361104975 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.342456993 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341344151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.342197723 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.357874545 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.450362392 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341527287 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.341577137 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.348893079 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.351355427 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.337962873 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333447999 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357452417 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349816121 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.348509507 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.342752028 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.369299224 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.743030512 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35549427 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.340129355 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.339144379 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.338763142 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343033815 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339816564 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347716179 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351692041 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352843192 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.73477787 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.371564664 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.34238381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340688668 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351456577 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339049955 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343818204 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356452537 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.360487768 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35586928 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.34324066 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345187029 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.342317088 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.356858621 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347821712 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.774430772 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.352425162 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.345757451 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.74704769 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36254891 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.776968595 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.366547435 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.342284271 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.356119045 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.374731282 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.354211133 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336836621 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.341449635 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348851334 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.340912343 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352100505 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354481785 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.346394412 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.342935254 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358964086 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.366190485 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.353384 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.343590983 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.352460069 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.361802574 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35051109 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353203742 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.345726102 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.336585169 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352680289 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.345573996 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34596646 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345155672 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347361878 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353561025 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.747427907 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375466076 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.339363679 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.33837348 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343280698 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.357376195 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.749704886 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360215645 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.365395661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.391538945 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.34564765 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346790757 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.347040055 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358486707 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.351753957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.346831643 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.339373538 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.350044003 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.747198252 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.37458361 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.345489739 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34236585 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359832175 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347044969 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.340720298 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.360728304 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.346454877 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357972328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.465784199 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.355377461 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377289726 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.344035992 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.347626181 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.37341649 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361804445 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.375800162 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.347835418 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360644595 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.360954639 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.342012958 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356270218 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.355438138 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345186607 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.350279505 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.339876023 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.369591427 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358303161 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357965985 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.366815332 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.467010035 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.344052112 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.349905362 seconds)
done (took 226.346344807 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.406049929 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.338078236 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434748349 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343345546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.443089237 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459595532 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34073388 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339820686 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339729654 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.719830503 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.340633971 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339895339 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341290706 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.340938362 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.423375223 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343025326 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.340773236 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707720463 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344186485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414433693 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.340283456 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341048375 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342938813 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.751109478 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.341021002 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.338173906 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.414806231 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344070967 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.688004167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.342799192 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343381788 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715348545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.433017433 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.361329974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.354023701 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.353141421 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458270526 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363025462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.442159102 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425275119 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44669575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.382483365 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.345845434 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.338165748 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346076278 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345753604 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.34322218 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372222009 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.341803881 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343642521 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685606361 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355977428 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353233814 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343699363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344235462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364835767 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343870994 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.345992535 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434406856 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.347200844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408498798 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727118931 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.751592605 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346324694 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.345551306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.344419938 seconds)
  done (took 149.30146162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414220688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42037175 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.456759666 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363521685 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.396793919 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.461358372 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.36354733 seconds)
  done (took 11.135812941 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.354054227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347276899 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40305177 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395920442 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.345909535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.495369431 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346718851 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360065143 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345306084 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.399276523 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.348166197 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347223245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354325149 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.347869267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396692217 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360046528 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462250612 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349718318 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348840972 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50422554 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345014717 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354792511 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406264786 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360482857 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.348774566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.353756325 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911256572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349035245 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346001238 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347257287 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345588668 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.385169811 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347988593 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348118028 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345649648 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463744443 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.348279363 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346226352 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.348835046 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.344799043 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34919003 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.350048473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.349639192 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345864276 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.348739116 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.371960239 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.350331019 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349800197 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349187488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.351020871 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.399608018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.348977362 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347239511 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.348051392 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405314582 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356263044 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.35119613 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.347753183 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.350669422 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347287263 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506771227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396546436 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.351581137 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39879484 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350736417 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351025224 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350576071 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.351053859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.404359018 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350344073 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399123245 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.349562287 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.505600913 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374665847 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35185111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355397137 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353770298 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352175704 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.345705953 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.35671334 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349489345 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.354262567 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358501675 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348887026 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348779633 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453719354 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459990532 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.348824072 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.364238767 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.358167747 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.348964954 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.405490272 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.352106035 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.350339287 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404508256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.468862516 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.409553274 seconds)
  done (took 154.780995877 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356869329 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359976174 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.353413969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.368700868 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353922336 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351711316 seconds)
  done (took 9.409392963 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356305628 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353435513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.351691427 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352814364 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.353097744 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353913502 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.354302224 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35604424 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356512242 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353550388 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35347562 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.354871704 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.355308228 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.353467333 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35405886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352502059 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354890224 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352326767 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.354159414 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353904194 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.458502509 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354648584 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35387405 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354880454 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.357076457 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.354213166 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362992154 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.354829478 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.354139937 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36172336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373923621 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355034008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355505923 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358456901 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358074988 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3549052 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357922069 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.356911051 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353124817 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.35478884 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.356164615 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354885217 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355734801 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.356826076 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358872022 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.360554084 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358869442 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364698011 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356275793 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355887826 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358026556 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.356214576 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355506444 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357439227 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358281673 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376351491 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.360245595 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.356448356 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.356280387 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.357418677 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.356824366 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.355225861 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.35787077 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359355736 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353367743 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.357374216 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.357042607 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360226877 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356999384 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.357007196 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356975664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355144628 seconds)
  done (took 100.049783597 seconds)
done (took 425.933574422 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.673718563 seconds)
  done (took 7.942994637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.400391629 seconds)
  done (took 7.67259044 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.846413088 seconds)
  done (took 22.116672203 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.429728319 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.411784126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.382431547 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.360764082 seconds)
  done (took 26.852626066 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.636789462 seconds)
  done (took 7.905761874 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.360464106 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362998117 seconds)
  done (took 13.99303748 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.840869761 seconds)
  done (took 8.109865016 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.509257274 seconds)
  done (took 7.7780448 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375797625 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.379123809 seconds)
  done (took 14.276154736 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.331315939 seconds)
  done (took 7.600168453 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.180614653 seconds)
  done (took 8.450683077 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.363233799 seconds)
  done (took 7.632570538 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.76754712 seconds)
  done (took 8.036823868 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.332552605 seconds)
  done (took 9.601783399 seconds)
done (took 159.239230953 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.350168096 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.356017477 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.356783242 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358172543 seconds)
  done (took 26.690164665 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.391516739 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393360217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.391572441 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.401981962 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39285016 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.392241898 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.382447216 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.383218427 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.401551523 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393713701 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.392021853 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392758215 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390930495 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.383245334 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.39316487 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.393593008 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.403180045 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.392766032 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.383802034 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.394367264 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.35829857 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401661577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.395288202 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.358911818 seconds)
  done (took 34.629483934 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880802713 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.429790816 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510564754 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.410627076 seconds)
  done (took 7.502561652 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.409722053 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.412738846 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.422884751 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.462419889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491325093 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.421346724 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.385001783 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.380264306 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367539291 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.413415212 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.487985979 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.429022439 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.496624513 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.359523863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.54395875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.359895436 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.358977187 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.412027919 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.463495912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479514709 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.360803254 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.413265607 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.414849293 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429509362 seconds)
  done (took 35.447431742 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.359375086 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.36740415 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.366286801 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.359735379 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.360110253 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.360064829 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.364989739 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359884403 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.380139926 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.360761403 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.358322699 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.359729707 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.358372655 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.359785554 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.359673634 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.370995163 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.373784135 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.359893774 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.363418524 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.366581148 seconds)
  done (took 28.542604693 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.354258572 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.208731129 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.704801764 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610926313 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.353873406 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.361072397 seconds)
  done (took 27.867226139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.431575963 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.580684611 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.361314651 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.715151137 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.808223752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379040869 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.362411495 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.603093409 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918576344 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.905197911 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427055797 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430281289 seconds)
  done (took 20.196071332 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.357055146 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362465876 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.364029362 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395365291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.415466658 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382366776 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.369659255 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.356115984 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.42409293 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438853934 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.383507813 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.418148323 seconds)
  done (took 37.94269108 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446055234 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401537037 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.235285134 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192261201 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078789523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567859439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.129625768 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823606833 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36007906 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630285733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372400972 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454378153 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612613109 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372065691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364924766 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.3582067 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600104293 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859921658 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358049155 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.368055273 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390417132 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36195504 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.473077202 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.397411819 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568879497 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334978074 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.619157932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.133391019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64570251 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37889187 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369062776 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360491433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633658579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014458486 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481244972 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368618358 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.132961607 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.903600422 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.354584215 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.442215707 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373265614 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370142737 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370970626 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359952573 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294217067 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359483924 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829350295 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.364900502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.072322735 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359520371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370071968 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454172766 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.363823892 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.351093205 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445502774 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365915558 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.358600803 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366523057 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926915241 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.877967661 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370907078 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.301999541 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.817294229 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.451621989 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019171131 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487009485 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.364822243 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3644739 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295835419 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.374388237 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384911317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509101093 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.387108208 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010310745 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124035259 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391908543 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301074245 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921298287 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369902596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.302862992 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589318282 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138821987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297473189 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302681325 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297705706 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072057317 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368995577 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.713362241 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368772924 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819101568 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.372489304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379369698 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384983459 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585835886 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241366077 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36325306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.374543195 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498131128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384207349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.81913935 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297673018 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366355795 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618563415 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.574034249 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363793195 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371840227 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598670455 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371305405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385171922 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372255697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.380878312 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.953255451 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399387897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878859457 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388711324 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140930021 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096802373 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37031003 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.47125267 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372926313 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613618953 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.117153602 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522853614 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432189395 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369647631 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36353876 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.463974107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22033162 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.258178102 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.361921329 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374726825 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383207793 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.365382652 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312101552 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.362746663 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381812109 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.144752671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588704511 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379828609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647357156 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299387081 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529178635 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385170504 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587900836 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.567401551 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.382939948 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624447442 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366294022 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374654094 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384214539 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385323784 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463119668 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387998328 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.379146565 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629143809 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.370730336 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.369204982 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498060071 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.151376109 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368115666 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.372380483 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274062336 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95978967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369914181 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370777343 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288792455 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.381645491 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434545041 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37247689 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.37638038 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.165406018 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255447645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372657904 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.365834433 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597607344 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377301923 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.480510658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45576521 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.579478595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962175014 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406813398 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.301246464 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079479805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.061639225 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368520648 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.55725978 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366951611 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376911443 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379819144 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.97028401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962138642 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395275045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.431110336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.375641552 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378815345 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.373693745 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369688587 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.140200076 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908960103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389173078 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.387323749 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512643304 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383002706 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303281509 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885108706 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3749232 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370057778 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.145183023 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404119846 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.420951386 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859875359 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629200881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.13235876 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380973107 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.581447117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412268534 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.395504836 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372562141 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376364483 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.397567197 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379642179 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.380107491 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.516994512 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.809398646 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936589008 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100408752 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947752049 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316361257 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.379311379 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277341823 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834578766 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304390789 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027323634 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556822871 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853064447 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315598828 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58597207 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.571967544 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152535322 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381148188 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599384625 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286119737 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.374509275 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38436375 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584203653 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406518477 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382805439 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308355724 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.652617966 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644882176 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37752347 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450778489 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836424837 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375845854 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150714786 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.371807399 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.687331414 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564851387 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.916841634 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759662992 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373816104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388261863 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854900641 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375285397 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898735263 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020498639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400541737 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.595151539 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30842302 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.385456549 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.38463312 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.369881145 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.663681764 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.373404832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.625900699 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383201597 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303557103 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370786195 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946059718 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253818315 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.37740153 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373484207 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12426412 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383193719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66577633 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.383485961 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.173153872 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37800402 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308318379 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308064432 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.067379274 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383712274 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349167281 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882959871 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.806713638 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441769902 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397407396 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245481979 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632985001 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388943137 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973692773 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626655723 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.244700044 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396851073 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.474635955 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387957868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.366611657 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.257326838 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609486125 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285666587 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598646868 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.272011054 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.27470268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374981075 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586334289 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.255692201 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381974406 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628325863 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112274536 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398813658 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163400266 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426432789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38590521 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395201134 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.830491196 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38390866 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446263073 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386994155 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.386630957 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387422133 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549263546 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39100573 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386602614 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391393524 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470507212 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.921996479 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.168236206 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.150061814 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981152469 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193823567 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.004514449 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415226482 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378937522 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378405399 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311913731 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525084731 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901415726 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65122255 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507668239 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.895213218 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399904458 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377792472 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396841618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597212946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652524848 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.247697798 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391585401 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044483886 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.535867592 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389611217 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590610341 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891263122 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950022604 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496682143 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389763531 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845993246 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653003267 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468180538 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380428982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968361581 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.3920074 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.728623447 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.401894998 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383885891 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534339109 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3888331 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027689142 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415280037 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.539383472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.15377391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.518787261 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644537703 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841639329 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.39012839 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984069911 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128292122 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650706435 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451445153 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390730483 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.481883213 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526057515 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.380576216 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.285650234 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381320038 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228047837 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.090647556 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391220777 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985406758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668382661 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.37832134 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.381802202 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411254288 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390693835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604857976 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087457386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602791295 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39040049 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391584962 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.951253016 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987354074 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419849226 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316642191 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.385560139 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622985197 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644465031 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40680515 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.835074754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.092582632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949973829 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352947011 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402611251 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38243939 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115096263 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995041668 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.18941841 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89090371 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.040637754 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398805723 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664152655 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.38870401 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387935528 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666961707 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386443676 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39442421 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402896167 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.987858839 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180578505 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.389978979 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.487125936 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.328072938 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608934247 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094967287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319151494 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386169036 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.565598425 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382231723 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513175077 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395200491 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.381478548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400493243 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.146865996 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658382807 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390263191 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.36709274 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.395514472 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391683694 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399033665 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658682537 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389210985 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059304711 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.735600341 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639549083 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389474546 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.373860089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.389322692 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385808564 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101923717 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354266402 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.987520696 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959212471 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.388940851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.403796217 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389376724 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600257138 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596084059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399903106 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397273443 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387019405 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407830309 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.286080287 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.152411883 seconds)
  done (took 1607.604792601 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425804143 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.405948142 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.402596163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.423593199 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.409241062 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.462534012 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.449768634 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439875229 seconds)
  done (took 52.722038964 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.390170776 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.541982213 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.41916256 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.392853077 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.40394161 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.388516221 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.852104304 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.38800116 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.395830171 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.396901349 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.39272993 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.396577709 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.053037874 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.396483658 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.386391926 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.38139037 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.402631018 seconds)
  done (took 66.283297 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.401447566 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.990336627 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.501674306 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.395571581 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.378821002 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.404080572 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.221643913 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.408908973 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.399009484 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.673265099 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.055243116 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.436574113 seconds)
  done (took 85.571432832 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.396058045 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.396110178 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.396658112 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.395020633 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.397794737 seconds)
  done (took 8.286849492 seconds)
done (took 2040.557040223 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.632769917 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.096004685 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.008278755 seconds)
  done (took 5.409613485 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.536644319 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.585227945 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.706091045 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.735029262 seconds)
  done (took 7.869963525 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.667299975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776250004 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583338731 seconds)
  done (took 6.332060222 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.775623588 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.399531946 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.537730126 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.388514925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.399708495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.398017546 seconds)
  done (took 20.493394152 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.394828445 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396203996 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.39411538 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.397402125 seconds)
  done (took 6.89002243 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.372522459 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.080961214 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.373996653 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394698129 seconds)
  done (took 18.5283426 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145076568 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153396033 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137572824 seconds)
  done (took 7.743527255 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.40679305 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.244450171 seconds)
  done (took 9.958611151 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.675173176 seconds)
  done (took 2.982614064 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.526707943 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.719349509 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.475996434 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.388491307 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.497033038 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.197777651 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.994043631 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.597567594 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.358809556 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.5259604 seconds)
  done (took 28.58957627 seconds)
done (took 128.448735043 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.197661407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391021246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.592713765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.210167117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.616548212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.591069746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.603354901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.176500464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.718351729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.676408844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.170559257 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.616931273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.549733217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.642047191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.55042478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.770653827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.618086464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.240891915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.850637796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.047180347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.604270224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.802131986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.998113006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.820432108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.618079136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.546073625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.382062178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.767236289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.025353655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.398977043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.546501288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.223423391 seconds)
  done (took 192.872809138 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.396672755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393671259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411630361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402604258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.393382953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.393973184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395718382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.410569179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.394295015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410510758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412548193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403231593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.396078375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.40610115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.396592285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394966727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411345109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394533417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394768531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418054308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.393898316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.41263346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.406273698 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.396518488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.412288978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.395153347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.400722801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.402126407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.395812939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.394739758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.41267616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396739888 seconds)
  done (took 206.161529433 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.395284147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412054084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.414909453 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.412740146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412037162 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.397406157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.412127818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.404908016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398453118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398517987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.399472251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.396150213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408371902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411483209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397748891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412348877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39657205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.396921107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.414688802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.396154373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.398439543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.404330028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.396182685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.396552008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.413945722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.396129445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.397808899 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414583261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416033399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.396990036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39700766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396995231 seconds)
  done (took 206.225054224 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.591882962 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404010617 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.408823074 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341603201 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404867511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405628087 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40019016 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.601406432 seconds)
  done (took 14.871661081 seconds)
done (took 621.440554247 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.664265502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.38779323 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60546648 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.433423025 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.166637366 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451991828 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424993847 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.589280237 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.345057576 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.605369908 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.636313134 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447196784 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.763121343 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.424715381 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.673333457 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.528388228 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.279747868 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.386826603 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.739652714 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.952162888 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.687671879 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.900376105 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.61633942 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.339902712 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.80225617 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.899644458 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.128720777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.26733629 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.440798885 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.741151538 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.034881848 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.379084868 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.488440498 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.490169114 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.544741115 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.52652375 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.345715603 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489073116 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.63143873 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667297428 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.940336676 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.163000166 seconds)
  done (took 94.345939994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.391385213 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.391557013 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.391233683 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.392170378 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.390843429 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.39052031 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.390374568 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.389973455 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.391784194 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.390328966 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.390808799 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.391748246 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.390794108 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.393123754 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.390917546 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.391382886 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.391268364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.394285134 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.390875341 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.391631643 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392478434 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.391930798 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.393986018 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.392038716 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.391995358 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.393394697 seconds)
  done (took 37.502124375 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409818491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.657027867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.828205424 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422640645 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409395529 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413911175 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.486123833 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.418241191 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412868246 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414109464 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.578125314 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420443723 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444525826 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.845971493 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.420104488 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410818917 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411778036 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411666513 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.665103845 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427339367 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.50718246 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.419399066 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.48786734 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.428307613 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430959645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411768966 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415973716 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.929872378 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.438725015 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.579099035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217191874 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.493264763 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.888937157 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.854541292 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.220000777 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.422054596 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41276318 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.583710556 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414597154 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411930522 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.487878713 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.42052145 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828922456 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.042403358 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43900237 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.412609932 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.95180255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.610470238 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656335029 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421084598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.851644128 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.424632877 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414170557 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413571365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.655273404 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.420543226 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41216246 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.939865721 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446098521 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.488749009 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.415093518 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.413909585 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671371019 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.414581199 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.661858765 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416108275 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421649098 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433571857 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.831104705 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422067654 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.061869464 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.439062809 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.411842397 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.577229873 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.660400502 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992107377 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.441523673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.676316658 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901239437 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.512939636 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.417113246 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.918150017 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.509690314 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416422759 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.414190709 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414366298 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.412858758 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.463612123 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.487592428 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.97670794 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062968482 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.957417056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.519515256 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426472572 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.413338089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.941876821 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.441570142 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.413405383 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.825679421 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.063265832 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.440112856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420734543 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.061829817 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.442527315 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.49141729 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420077833 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.836960683 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.422904624 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.46523981 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415745992 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421326708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435766591 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492389879 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418390592 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.415295349 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.027533921 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616406439 seconds)
  done (took 185.453595598 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.409447215 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.40876981 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411085219 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42949911 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.407572599 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.413188795 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.407827148 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.408321154 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.414162889 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.408351693 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.40905747 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.410671914 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.410457174 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.417420314 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.41732686 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415727908 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.025053604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.408858879 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.410730282 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.409276274 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.206049949 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.41846937 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.409519604 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.411334432 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.411663896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.410114638 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.416443264 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.412277212 seconds)
  done (took 154.272987263 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416770266 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.973723578 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443330933 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.547507744 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.438441357 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415682172 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.544354753 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.47446402 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.44154355 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.41388873 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415920946 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.715644834 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.418839498 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.928389441 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.605619506 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.572086285 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.925688029 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435001836 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415730317 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.415352687 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.549692552 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.422017862 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.715291155 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973912357 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.436380749 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.974987091 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403151592 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.41813857 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416787797 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977638421 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.434898715 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717612867 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.494763232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478398605 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.999896994 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.954322214 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.947166424 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.567126396 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.417882709 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417411493 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.41658899 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.40170636 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.978033272 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437404715 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420774905 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.970194194 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.437840044 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421196802 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.427682137 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416897065 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.478488279 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495872064 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740968394 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.997623596 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.521803703 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.440274358 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.549888847 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.793111067 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.43003401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935184773 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412592142 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.988038123 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447514435 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404392116 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.419972534 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.423749463 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.569094943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.550325417 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936275342 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446165092 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.934993307 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.595604647 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.418311958 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.419751455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421708308 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.987395338 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956532286 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.587017029 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.554672851 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.611976721 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414158987 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420253083 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.404388574 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.497159795 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.42051596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.990513465 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.958920297 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.43961552 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.421537245 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422913111 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422900672 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.596416362 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.014298187 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.52379339 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.922487774 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.744251225 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.735127343 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.431977717 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.479596028 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.437511751 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.727606333 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.433196534 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479254788 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.858462054 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.736724877 seconds)
  done (took 168.734967386 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.663908311 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.585439421 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513471979 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.552023915 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.021227199 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.993326299 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.632063911 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.572261077 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539829658 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.677880182 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.568107096 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519459285 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.589095668 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.494721769 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.16300015 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.514950777 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.529663213 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563424179 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.534767668 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.418981267 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.048735928 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.703163081 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.590126678 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.259628684 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512652169 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.193627308 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.977125721 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.95933739 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.591156773 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.700053542 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.96371917 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.542030796 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.375502651 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.110930341 seconds)
  done (took 67.509837237 seconds)
done (took 709.133753936 seconds)
SAVING RESULT...
DONE!
