cset: moving following pidspec: 760
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.158103481 seconds)
loading group "string"... done (took 0.518119608 seconds)
loading group "linalg"... done (took 9.690468802 seconds)
loading group "parallel"... done (took 0.173017922 seconds)
loading group "find"... done (took 2.496604156 seconds)
loading group "tuple"... done (took 2.238538108 seconds)
loading group "dates"... done (took 1.424748587 seconds)
loading group "micro"... done (took 0.585241122 seconds)
loading group "io"... done (took 0.559776011 seconds)
loading group "scalar"... done (took 53.690461181 seconds)
loading group "sparse"... done (took 13.588820914 seconds)
loading group "broadcast"... done (took 1.316495551 seconds)
loading group "union"... done (took 2.561448352 seconds)
loading group "simd"... done (took 3.574818353 seconds)
loading group "random"... done (took 13.458755271 seconds)
loading group "problem"... done (took 2.268254461 seconds)
loading group "array"... done (took 23.263221465 seconds)
loading group "misc"... done (took 1.098400755 seconds)
loading group "sort"... done (took 3.724143457 seconds)
loading group "collection"... done (took 20.384239874 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76715529 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16121751 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.243170725 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.889276941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.300685221 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206791766 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200380601 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177498081 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.721943206 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.233732096 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.19393657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405781174 seconds)
done (took 7.309969872 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.285191814 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.095092493 seconds)
    (2/2) benchmarking "String"...
    done (took 0.212039856 seconds)
  done (took 0.952646029 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096214256 seconds)
    (2/2) benchmarking "String"...
    done (took 0.142339262 seconds)
  done (took 0.88653387 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.136108146 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.167741351 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.146873512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13073469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147260559 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.129948139 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.146677502 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.146624723 seconds)
  done (took 1.664595361 seconds)
done (took 4.573782454 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.538053694 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.91891864 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.531907233 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.205324669 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.357886782 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.315791525 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317638524 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.273499146 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13286735 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099679462 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.224213848 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.459391606 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.466892958 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.946607084 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100839279 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153380515 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.171318116 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.807693826 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.121860845 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156966992 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535916892 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.245300089 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159867869 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137887231 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.244156818 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.232096712 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173102797 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.147841541 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.708346364 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.176466442 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.2401642 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.1263878 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172044405 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201470254 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.282609504 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155749823 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.716941468 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.244489553 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127655967 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142448936 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.718022557 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.162449685 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240696024 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.153891054 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11559433 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179504734 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145789883 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.11957338 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.15678295 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142475461 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210229389 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.492248428 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.150080107 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.227599309 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.152622641 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.724268759 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.147156281 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.331454426 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.181725955 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149814571 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120343767 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.146590938 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.204648146 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138841642 seconds)
  done (took 22.657189581 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.207245091 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.224914234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138326314 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.184166554 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.187216067 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.139021433 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.129902136 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.138056674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157154388 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240528939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181982795 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.234611504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.117983473 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.151042167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.197308444 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.276971729 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.170594544 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.150216913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.150017451 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.152531657 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.169252919 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157485388 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.136709044 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.154793466 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.215021379 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.248912275 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.153697807 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.166507286 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.147030702 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139740727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.185659562 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.207160395 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120177098 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.146768782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.215491156 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.165389591 seconds)
  done (took 6.934394223 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.262960706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.145772355 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.272098808 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231140313 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.189342243 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.220223639 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.224334883 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317634179 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.322418404 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.244091739 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205459094 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.163882631 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154573085 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.160707431 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121135994 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.141506055 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.120491029 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.881916065 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.217595766 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203107276 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.215643297 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153867335 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.124949113 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.409577257 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127121528 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.144041476 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.135522952 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112936578 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.249331985 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135696051 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.518679767 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.143342557 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137570429 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174193457 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.247643118 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.164967315 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180052102 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136241155 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.145307579 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.254188979 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1571422 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.121644276 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120506198 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17600125 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.17544991 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.15089025 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162684377 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177553303 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.128017388 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168063342 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.891493855 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.236969498 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.179371915 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.143770757 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320642946 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.147407629 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158635765 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.15043103 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.236676806 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.179631251 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.140069373 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.123360423 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.153532001 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.121239057 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.14220244 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144217824 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.345528897 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.139930513 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199745535 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152702103 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.143325013 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.212140665 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.39093394 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128085576 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.144354496 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.16441725 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.129169305 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138354965 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.128549556 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.13817075 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.130797653 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.137342262 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12897776 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.138414319 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190763001 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.153737312 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.147334777 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168489979 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.147596237 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.126485294 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171039355 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140465299 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.130615534 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.219725943 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1554251 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123256587 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156232541 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.188052282 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.144844532 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.244815526 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.141986197 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.123699944 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.166153783 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142415483 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155782604 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.15653343 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122502717 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144965319 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.121033053 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14290951 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190077461 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.144250589 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.123998385 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147815924 seconds)
  done (took 27.212529399 seconds)
done (took 57.450565413 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.4068525 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112299807 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110915368 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.130773547 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111134712 seconds)
  done (took 1.599913733 seconds)
done (took 2.312466073 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.246851333 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.334070949 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.246837852 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.14559792 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211005885 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213690028 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197384613 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209059102 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216818419 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.21452967 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.143901621 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.234892884 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.223208941 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.194943641 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.144111614 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.249140838 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.206579442 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.198852572 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.251544451 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145710628 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144197798 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.164665607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145156812 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147040635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143441415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163109249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.143335033 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161213139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137770954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146817479 seconds)
  done (took 2.366420164 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.172223192 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144187821 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162151734 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.135939893 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142840289 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.14713464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142597453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161076087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14669952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16127936 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138704111 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148003105 seconds)
  done (took 2.355493744 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.12100142 seconds)
done (took 9.839697298 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074460838 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.460231343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194401058 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.267181054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36831871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.291548203 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.583727742 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.212648049 seconds)
  done (took 14.304305064 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.161562254 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.153546341 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.139175818 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.15197265 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.188968469 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.154341422 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137344443 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.15613276 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.135409683 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.154133985 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.139747635 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.151911812 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.136274251 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.15523164 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.135595276 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151607902 seconds)
  done (took 3.176994224 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16176858 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.178990863 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.14090312 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.162655631 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138887458 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.15819793 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.141372426 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.159882526 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.138889002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156564273 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143075675 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.15931999 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.14170907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154592273 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142341874 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.161399864 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.154814529 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.143978697 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.158353449 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143827258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.159392764 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.14204121 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.158154089 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.143183292 seconds)
  done (took 4.43432008 seconds)
done (took 22.641389062 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196280543 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146685619 seconds)
  done (took 1.075053975 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.197576268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.217072212 seconds)
  done (took 1.154498692 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.157948642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.154294351 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164149089 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.163328572 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136535757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.154123252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.15819971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.153301391 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.13469635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.152331436 seconds)
  done (took 2.272315638 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139114022 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.155075571 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.150583473 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.203622869 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.143939417 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.15561929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.140662247 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.156454426 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.141120839 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.151552062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.139403998 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.170792608 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.157037514 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155788585 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.155937996 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.140785118 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.160791142 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.138527368 seconds)
  done (took 3.498330839 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135989656 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136519934 seconds)
  done (took 1.016177898 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139063351 seconds)
    (2/7) benchmarking "second"...
    done (took 0.150272516 seconds)
    (3/7) benchmarking "month"...
    done (took 0.138883666 seconds)
    (4/7) benchmarking "year"...
    done (took 0.152317832 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.13516679 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.133856511 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.152209948 seconds)
  done (took 1.745834672 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.612041252 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27028664 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.420720877 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122549467 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136975248 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363360985 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157656479 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106281632 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105731562 seconds)
  done (took 3.066647752 seconds)
done (took 14.569713317 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137384 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224765268 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.649346695 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158007416 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.153317145 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196792642 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.342266331 seconds)
done (took 2.614034434 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367891882 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18563274 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120205773 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139085364 seconds)
  done (took 1.561412911 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128152204 seconds)
    (2/2) benchmarking "read"...
    done (took 0.143230628 seconds)
  done (took 1.026493255 seconds)
done (took 3.346089753 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.153458495 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.151968635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.138065151 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155940772 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139107081 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155941114 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.138638217 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.154241085 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.138600898 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.152223322 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139493366 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155783711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136343267 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.155296943 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137014979 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.157174636 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138067389 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154390982 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13611203 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.1556079 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139797422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15332856 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.13951909 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155966624 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.13949618 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156485298 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137305202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154580238 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1381152 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.157573421 seconds)
  done (took 5.165550343 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.164575622 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.131634461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153306275 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.142687211 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150159674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.135577165 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.150623767 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.132189182 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.15500099 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.133976985 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153554029 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135085948 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.266079561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.136887248 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15425259 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.160444579 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.162139129 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.13278088 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150680003 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.136647663 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155203077 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.134026527 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.151285321 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.13572158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134966552 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.150149267 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135626065 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.151731057 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136437085 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.152262842 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138309277 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.155519458 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.135215807 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.163466767 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.139033438 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.15238624 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142990005 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.150786732 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.136818477 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.149830009 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.132244273 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.151801969 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.133339247 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.158930594 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.136270668 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.135927568 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.150454247 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136077115 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.153651517 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.137730204 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150708051 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.132350966 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.156058938 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.136926994 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156267008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.132486957 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.153232217 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.132405799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.154165072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136284649 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.149053757 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.13421334 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.157911597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.136702346 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.167410609 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.143211063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.149195414 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.13826532 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.153057057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.14230469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.155082902 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.148249182 seconds)
  done (took 11.342495114 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137801885 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134795062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153466722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135467364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153862391 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135393177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153576624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137344184 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152555752 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1374743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153311114 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135526936 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153192868 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137446959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.152763744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.137181598 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135219287 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154193237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136524771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154295179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136733596 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.153953923 seconds)
  done (took 3.944119877 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.281320421 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144290989 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.205453459 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.169995949 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.155518112 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167797359 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141033688 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160958518 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142341029 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164694196 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146351703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161256321 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.153784626 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.165446326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16339169 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.148440079 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161565861 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.147379222 seconds)
  done (took 3.754819408 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.13779389 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136529097 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156443924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136582319 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156890712 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136947415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154114999 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.13728129 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153199834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137185691 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155479951 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137283099 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.154637702 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138256819 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136139605 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.156480471 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137004535 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155852175 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136928663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156733063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.136974499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156747848 seconds)
  done (took 3.979212311 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152585208 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.157847828 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155951763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161353021 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140185953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.156638985 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144315901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.157103428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.146242424 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.157583652 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140088832 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156656887 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.15505228 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159361418 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145292912 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.158575864 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139402767 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.15858148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140598676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158415935 seconds)
  done (took 3.820674062 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.2307842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175870301 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174796182 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163149679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.174150326 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155790217 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180284851 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155739665 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174684508 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165932671 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173995217 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.172623108 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164445474 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.178278814 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.157016106 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181205704 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161536312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18143333 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.173533719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155125143 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185432081 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155143731 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.181864937 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153886468 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173137154 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173541647 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156404452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.178268186 seconds)
  done (took 5.587707775 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.150151478 seconds)
    (2/2) benchmarking "in"...
    done (took 0.165599115 seconds)
  done (took 1.099222782 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.141349309 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139539226 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.1594521 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140866237 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159005534 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13974867 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159685675 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13972541 seconds)
  done (took 1.96235779 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.202881967 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.2272429 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.165142992 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.150525577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.226692268 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.218710328 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.220250458 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.145521902 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.159336378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.132563762 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.222836643 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.131722459 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.159936093 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139628998 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.161748529 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146223171 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.159125658 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148869896 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.167172442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.140725365 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.166250696 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144927982 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161789834 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.165484969 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.135799789 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.16149502 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.146121165 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.168303957 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.136958932 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.160840049 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.138818458 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.15996199 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.144197825 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.163298171 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.142616709 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.229318195 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146987663 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158052142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.140959266 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.166720126 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169229317 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.160172578 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.14290824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.16109074 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.163735942 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.144993775 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.164375325 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.142863722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.132323355 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.157198792 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.139619854 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156135319 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.138708498 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.16245501 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.141222217 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169110943 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.162024968 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.138196218 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.155684394 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.137609535 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.1594324 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.137845442 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162782598 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.143474594 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160363283 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.142752999 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160018093 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.141776613 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.160865495 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.143107436 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.15918959 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.187331769 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.162936802 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.146204624 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.166704193 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.141908983 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159666577 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147454945 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159515871 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.142306485 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.164337007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.168811191 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.164148065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138016845 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.158188507 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.146732526 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.162501754 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.143673775 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.155021991 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149695463 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.163550357 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.142506103 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.153946598 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.141059146 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.157729997 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.14503597 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.15501663 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142724687 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.160836545 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.14501137 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165440125 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140428971 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.163778106 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146049189 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166965097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.141510464 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.208443968 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137941535 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.15910319 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.14269821 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166562484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136097821 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.162120857 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.141284504 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.158915456 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.137782007 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.165603922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.143085629 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.163980025 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.148058173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165621531 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.143737462 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.164139016 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.14101723 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.159524483 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145290866 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16932242 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.144966596 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164758038 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.143529131 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.162893287 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.142579125 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.16557963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141067805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167147484 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140393162 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.16257989 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.142436919 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167110523 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.14402484 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.159757417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142372428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.165570786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.142376271 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.165615718 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.143564149 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.15815697 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.134495771 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.164933448 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.138493196 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163953671 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149744979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.159833345 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.144416763 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159497598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150001861 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.160026793 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.148070785 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.165463947 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.147566153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.16824117 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.134770425 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161791841 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.145619141 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.166848499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.139944755 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.163839688 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143950881 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171102645 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.137391523 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.167471091 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.144850945 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.16130445 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.145914413 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.16394168 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.146514633 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.160018608 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179939396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174655855 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147981912 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.163933918 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.143636353 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166846075 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.142479247 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.167256398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14798537 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.169100645 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142669154 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.163771334 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147731389 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.161721949 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144907449 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.16276673 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145809538 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.157009054 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144387038 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.156909625 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147752744 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.166517123 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.147403742 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.169495621 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145737667 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16315001 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15215376 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.160337889 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.146615978 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.156117466 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.148981291 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172821817 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.14919692 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169134242 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.146627963 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162380258 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.145037832 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.171614881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146815714 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.164666242 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.145515689 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.157193148 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.138621666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.171015977 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.146600035 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.160629641 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.143926762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165481529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145840837 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.16219045 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.137598285 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.167553825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148874489 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.160209942 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.145464544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.162125808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.143888361 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.173353355 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.138828491 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.161967992 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.147138694 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.169659272 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.143548004 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.165945803 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.148207613 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.169911625 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.148694401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.166975126 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144204215 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171951313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.142656726 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.163064661 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.142084038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.16659583 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.141880415 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.167319354 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.147322858 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.162923918 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.141719889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.16948617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152797133 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.169936201 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145384343 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.169455242 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.15026149 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.169997393 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143792245 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.170423441 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.14095342 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.157530386 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.143445775 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.158342007 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.146801208 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.160732562 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.151097921 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.162850604 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145009318 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.168098397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.148945317 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.164173572 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.15084665 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.176194393 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.139798291 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.159602149 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143477504 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164997511 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.143406014 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.165016686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.147611449 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167708729 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.149256041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168422222 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.141480958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165206034 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.15182183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.16235753 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.151616438 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.17035988 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.151343445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.162376986 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.152275164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.161729146 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151222172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.159598886 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.146182334 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165380408 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146675397 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.164576057 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.144214823 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.163109667 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.139210161 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.164162804 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.151242626 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.164798766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.149709513 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.166972873 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.143918057 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.163949966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140756221 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.172409424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.14406762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.17338069 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.145309266 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.159573325 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.140175478 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.170054513 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147179993 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.171178107 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.141074491 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.169150506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.152934216 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.169279674 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.146574968 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.173387021 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155242108 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.171258657 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.151470586 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.159129972 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14517869 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.170398422 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.146512599 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.16749587 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.148294539 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.159768311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150350332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.171735365 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.148652513 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.165110075 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.140462428 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.166907963 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.153551448 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.168949044 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.148721039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.147853048 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167856363 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.140956665 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171985206 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.152090233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.167578695 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153184106 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168225398 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.149911696 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.165958436 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.152685916 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.171136168 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.140623381 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.160877001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.145887738 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.175881221 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.141102678 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.172026918 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.151556216 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.165404518 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.145700119 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.171916346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.144450946 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172752114 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.150032814 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.165792246 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156819568 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.169151209 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.146486773 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.172513964 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.151661808 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.161660578 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.145611359 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16819133 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154129911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.166476302 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.151323886 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168380724 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153383277 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.169833009 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.151301155 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.173042387 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.151492241 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.161368924 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.153441422 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170649925 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.149475632 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.164369233 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145479552 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.161600758 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.146835733 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.174690859 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145707882 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175134326 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.151080213 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.166836467 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.145942767 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.172957867 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145739954 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174892811 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.144971289 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169975517 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.141199178 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.170140692 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.1470531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.175051157 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.144754686 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.163285734 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152289082 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.173276717 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151164109 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.17096322 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.154273008 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.163087124 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.142693068 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.170579441 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.14665004 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.176969998 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150923141 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.168336358 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146532283 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.170537836 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.149819323 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176356581 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.143715766 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.167167385 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.149419973 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170914209 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.146478444 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.163621112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.151990324 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.169445509 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.149914405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.168747655 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.144493801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.16908794 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.156593226 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.169872137 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.143894943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.167019645 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153732186 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.167990517 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.144849854 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.162949323 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154551112 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.17242386 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153519372 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.165097614 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.149686671 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.16830244 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.151179157 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.175503551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.146731246 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.168073518 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.147782202 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177674377 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154014471 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.160128307 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.146565538 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.181336155 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.154153075 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.181346254 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.155432627 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.172818589 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.155788311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176264694 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.151505189 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.1639288 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.145556507 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.172963545 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.143787912 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.173525441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.153494673 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.169536942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.145656943 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174034717 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152028254 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.171515032 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.151174903 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.165022143 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156249391 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.166684523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.153287394 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.163576096 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.143057355 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.172154445 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154480587 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147902067 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.171442432 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.15106083 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.173873232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144703134 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.169384971 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.152104651 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173581 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.154808885 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170048742 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148672098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.173938594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156434055 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.172176339 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.149367443 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177886932 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.154724985 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170703524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.148446318 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174913515 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.175557782 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.153504144 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.154062462 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.169266924 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.148094495 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.177764245 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.155199954 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180242991 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.168636345 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.143918343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.173315805 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.148967065 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.144165866 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.175370017 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177005633 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.155936082 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.170075293 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.146694515 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.178755808 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154632764 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170310801 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.148127625 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.16817458 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.155215315 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.16833463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.151612367 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.16694413 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.157199785 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.177889901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155828485 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.178707589 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.145954455 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176438093 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1526985 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.178705979 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.15127016 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.143372554 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.167796352 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.151405485 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.17807026 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.155593802 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.174620502 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.152880165 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.175448669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.151450403 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.17216594 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.148117217 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.178649677 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.154353529 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.173691686 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.151311222 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.171448011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150217543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.173106101 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.155244817 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.17829905 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.150875285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180963345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154410163 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.170510914 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.147684905 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.173186807 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.152578125 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.173669519 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156619909 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.167676458 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.146068815 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176658765 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.156740435 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.170904333 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.158149669 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.178037427 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.149062474 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.175135139 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.158024412 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.175309988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.151166952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.17388214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.15344933 seconds)
  done (took 94.967213959 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198150163 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180237876 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151519944 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172899574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170073428 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176218266 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152005027 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176771103 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154700094 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18423566 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.150881161 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.173638378 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166990014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195579047 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189376749 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161733447 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174164225 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155045176 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174042321 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154171726 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187837789 seconds)
  done (took 4.483042033 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.153004352 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151593979 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.174541966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152096421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174385048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.15216408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174019885 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.151828956 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.173978342 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15165582 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.17491615 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152680122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.173452392 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153379613 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15214048 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176101793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151569229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.17392576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.152657028 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.174322208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152174901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.173573738 seconds)
  done (took 4.454079983 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181959894 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155040932 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172955705 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.153117702 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177195444 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152239527 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179104224 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.152204094 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183425917 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146616573 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.165737781 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146049515 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.172318183 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.153943568 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.170900508 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.153080442 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181747431 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156267871 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.179562488 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.153602715 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.166821226 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.15442378 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.152813021 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.16813846 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.157780315 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.179188469 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.15769075 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.180148018 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.144109904 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.179962714 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.154073075 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.171216915 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.14443952 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.167983756 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.14443157 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.178661899 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.157180164 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.175633375 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.153847142 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.166878258 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.154758187 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.17863755 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146273775 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.153286983 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.176105515 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.147483371 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.180013312 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.153128887 seconds)
  done (took 8.719576861 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.182180066 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213052193 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.155863737 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206480864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.19027813 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163469742 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.180194699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181825744 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.179475621 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158446922 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194338351 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.166162593 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.181215595 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.159160016 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.181916947 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.179950571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.159200894 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178528959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163760938 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.180439051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.162550681 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.182481169 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166901674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1899301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.160816967 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178946159 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.156587795 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.183378768 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.165393264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.18436849 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.160742132 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183365248 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187944572 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.16008832 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179558086 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.158801231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.190492831 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.158312751 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.182647994 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.157113288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.182130095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159686091 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.182603073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.166609334 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181674524 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.159650467 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.181410788 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.15494337 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.190082023 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.15956752 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.186459191 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.189631789 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.160376505 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.18101978 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161410679 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.191319441 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.158406227 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.180469315 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.158765447 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188969892 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.156022969 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182655308 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.166787042 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.18195174 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.18561071 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.168207139 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.182972149 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.161014462 seconds)
  done (took 12.844414268 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189247023 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.184360334 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168345242 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192421091 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161332244 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185458497 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162104399 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.185353516 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161443723 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189098692 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185393596 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.295984525 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.166460068 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190528657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164202722 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.422445457 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16205594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.186153743 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163811043 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.186448463 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16309683 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.193532287 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160360614 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189557386 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194135192 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159070082 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183187406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.160441522 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191426055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.161681332 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19609206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.160126803 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.182802703 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.19106061 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.171902241 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.185625362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155067401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183851576 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.16110954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.185427983 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158471441 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191756312 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160939026 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.182272117 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.160911401 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.184299383 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.18980675 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.172331676 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188853928 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.166737326 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184473782 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168883298 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185807589 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.161388718 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190650259 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.197000611 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.169187704 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.191402156 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159883822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.192021246 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.191594368 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.176619253 seconds)
  done (took 12.266029046 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.157832913 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155456031 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179672762 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.15693014 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179627533 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155609933 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180666583 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155904195 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181113241 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156759103 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179511287 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156784019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17831529 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157705218 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.178944112 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159687112 seconds)
  done (took 3.587127965 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174885012 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197289058 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.261927247 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160685513 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.184349643 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.165126091 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.182511425 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161154858 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.181099289 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.162855706 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.184147673 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.161081166 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.19720927 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158940939 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181232932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.160822323 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.179392625 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.161762665 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.179871642 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.240029782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186102129 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.159103941 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.184462167 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.161595163 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.184476327 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.183858884 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.165641369 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.181092279 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.160402932 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.179731094 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.162802072 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.187570759 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.161338753 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.185335122 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.160889256 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.159860439 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.184334328 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.158741753 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.184202603 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.158527044 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.185083786 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.160616477 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.182605246 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.160552124 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.181310607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.158284618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.181569926 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.164313757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.183981415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.161624279 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.184001515 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.165093004 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.187414443 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.165717363 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.18939421 seconds)
  done (took 10.619168037 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171654947 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.183647701 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.17318352 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.180613718 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160620149 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.183570272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.160977693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.183964195 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.161457813 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157711463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.185035911 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161858482 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185030092 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161698726 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.184732008 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160444234 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.181269335 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159742023 seconds)
  done (took 4.023420911 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158644862 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15663855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182621679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156534534 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182602477 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157498454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.18187354 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.156986141 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181931027 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158061774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181654674 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.158302245 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.180974542 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.158862682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156963783 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182518697 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.157857963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182255424 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157532643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.182432647 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159908984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.183824027 seconds)
  done (took 4.648648741 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169518612 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.260773422 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188069532 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.244426604 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.183247887 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.153361098 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.189330206 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.180261402 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.173174751 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176984668 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.154895485 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.178426971 seconds)
  done (took 3.184743579 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186979195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.219161297 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159984741 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185292716 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168413278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188358554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165217245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188702413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171026856 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199511864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18840861 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172822226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194768388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171789897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192666099 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167555628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187886192 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16448392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184813584 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19965384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166800629 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195641005 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165672454 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188837416 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166183089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197820061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172438066 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199420817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187974365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171546634 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192104148 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164718767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196636569 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17603062 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184950946 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193215938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165965241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20241892 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168183972 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198234039 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.161249717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192558051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171001469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193589647 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19532117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165891847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193163045 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165378031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187738892 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184872164 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193359936 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19631346 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170506972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195382431 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171303268 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208951822 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198099433 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171997743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194412144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175633012 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197784264 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19207874 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173073496 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201020123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169017032 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196727562 seconds)
  done (took 13.066624214 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198368946 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187109072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165911834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200335093 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171558046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189871736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164729397 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190609271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165033476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185642909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231842682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166736707 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197053096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172724531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191294542 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166523543 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19084497 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197842873 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163986188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208971727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165296274 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197379385 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172111007 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199496779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200996439 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170888776 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190663825 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166448494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190649785 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16764557 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19567798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166090641 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196423967 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18604939 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175774907 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189651101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167195397 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196552523 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165922339 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193934425 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173634645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204480929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192027249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167127656 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200826549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167043762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191583211 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163104324 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190544851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164453846 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202555244 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19931516 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178075928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198151189 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166151452 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191295491 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167575157 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191237359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166939725 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194398321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174167849 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191753982 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.211237284 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167593809 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190058264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174170628 seconds)
  done (took 13.092022377 seconds)
done (took 231.368958421 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.310326396 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.339962467 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153329511 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.273522169 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153210041 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.880262603 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.679894458 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.247916837 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.178300918 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.153434616 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177652801 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.171422707 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.564220903 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.153282855 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.177082021 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.168647725 seconds)
  done (took 31.729843807 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.347438733 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.393419451 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.170189498 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.183888892 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.159528552 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.185074199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.158528082 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.1848797 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.158272082 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.188976022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.159589731 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.179545463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.164201557 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.179086901 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159058853 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183600877 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.163096044 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.182734829 seconds)
  done (took 4.464861426 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.178858055 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.227718675 seconds)
  done (took 1.36903081 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.188578023 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.279506617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381894874 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.231760381 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179926538 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200936521 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.207452601 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.195802502 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272432879 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.168899221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.205059637 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.18067163 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185337363 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.187640504 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.174371254 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.181163399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.18566416 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.199405776 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.173063369 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.185713173 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.184290837 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.184912819 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1853573 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.174437678 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.263832973 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.169980966 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.187309258 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.159123393 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.186766143 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.172174941 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190931304 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.197744932 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.171954212 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242128195 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.186085722 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.235441842 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.166181127 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.182756261 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.174202728 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.181991846 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.163601636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.185995943 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.170776096 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.181045676 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.158092584 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.189241208 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.159090757 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.185424799 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.168489128 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.187301929 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.166637016 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.192651221 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236427906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.162444554 seconds)
  done (took 11.426332717 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.990601712 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.20808087 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18348116 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.136741873 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.204499081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173720449 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.988878552 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187111805 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311714809 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.08323438 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175070849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192880025 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301508113 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.340679861 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.334720567 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.438641885 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.849483043 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.17264809 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216554831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.224224237 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166736275 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200781525 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.175554754 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.505413042 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.185207174 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.161124254 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.187788188 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.168647332 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238297775 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.182626435 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.164691943 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26080112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.35676027 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.269463404 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.186063978 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.158852705 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.183254694 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.249588587 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.33393074 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280337405 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.253613601 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156872106 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.184056881 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163589091 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.198466035 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157886412 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240973627 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253852245 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.255593089 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189715554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166970148 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.192782532 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.162051852 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.240524098 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.185245275 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.42128374 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.447625817 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.160111689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18971663 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.172678233 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324253443 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187739791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.296087488 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.208632805 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277105275 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.159074655 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877297331 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.247129041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.161087379 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.187630851 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.164386833 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189149513 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163994988 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244506385 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.481767469 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166810758 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.189953841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.159600255 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.296805463 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187124894 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.159406978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.239605126 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187543372 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166482771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194369472 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166573595 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.251440784 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.334908853 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.192995016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.167115879 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.18998194 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.169941766 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.187198029 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.293204835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.288303864 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.239760056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.293831884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.188542214 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243940528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.222367339 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191762829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253458217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.188368321 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1736556 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189538158 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.285803304 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.220329228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165213163 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189585125 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167696187 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.225502911 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.188484603 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.168805188 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.254446792 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.543488681 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.251090344 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156882085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190606961 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167880618 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241203596 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.193097682 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.322190395 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191372082 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.249077126 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166905855 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.182293174 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167325535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.245800275 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192543609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16757379 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190634714 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.171164502 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.341669225 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280632066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19580622 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308604553 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.25887131 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.165203704 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.25565495 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194475953 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249935476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169777094 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190980776 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162450046 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.88693133 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173229694 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191877204 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.166651917 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.268474661 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184914507 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.167182239 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160416663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187744757 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852547428 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189557652 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.160042614 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.189104033 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166820942 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.191940678 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16817582 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.191702515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243658257 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308906195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.194302606 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166473744 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.186646442 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.240849121 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.165270815 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.185851986 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163815576 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.185252542 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.170003394 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.208322764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16636305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253703229 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.241341192 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.292145885 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639290269 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.187470323 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160965964 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.328779237 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163993344 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.408793373 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167094689 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.297909554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246396044 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186813047 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.421648777 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248876937 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.269566106 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.163999213 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.254624486 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185886837 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168849588 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243174991 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1880197 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.166905661 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.241354572 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.198189718 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.168368656 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.341247985 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.162708603 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308462532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.184237387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.227097028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189805263 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191359548 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.391907341 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161481973 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.19965035 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.244208891 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16553172 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.188200906 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.948690366 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.162372095 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196011191 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.166652311 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.322303851 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.247256283 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.168061415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195736586 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170993168 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.24469084 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290476287 seconds)
  done (took 61.53171294 seconds)
done (took 111.480500924 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320922521 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226222221 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.425042578 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236544211 seconds)
  done (took 2.264281186 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.347265284 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.203437588 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.305766932 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184476134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.286767621 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.187586829 seconds)
  done (took 2.52703462 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.232662641 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.23047395 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228732748 seconds)
  done (took 1.706883165 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271123955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273749154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.410371753 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326056617 seconds)
  done (took 2.355671997 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340368552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.178447385 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.21815872 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290402997 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.307619952 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269866924 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.185696884 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.238648444 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217464298 seconds)
  done (took 3.293735112 seconds)
done (took 13.156379244 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.20241288 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.21941421 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.184817452 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.200982088 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.192894657 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.221561786 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.192022214 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.216035426 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.19009916 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.202386342 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.18868306 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.198829608 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.280997836 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.192620936 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.200036621 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190246475 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201117343 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.201060584 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.218287021 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.173787492 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.219676532 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172223445 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.198967055 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.183073766 seconds)
  done (took 5.850635353 seconds)
done (took 6.867090256 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.269654382 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.183287637 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.170855835 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199633331 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.278908555 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.178545071 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.214251444 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172570404 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.209369789 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172782084 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187005706 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185999132 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.195608755 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.246037582 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.201865587 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.188694505 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.164684994 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209350216 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.188465218 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.213778232 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.253402475 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19541485 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.182021652 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.190818373 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.283327461 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166549654 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.197228126 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173795052 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.211872745 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.172529847 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.198149049 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.163139954 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.214172066 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.187863751 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190292853 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173279292 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.188991419 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138317742 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.172488184 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.200795074 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.185910596 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.200975162 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197470747 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165200306 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.198936504 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174538736 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163198283 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.202438429 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.186166453 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.175922995 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165843743 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.215168978 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.197188334 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164662713 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.16163391 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.190989814 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.206736003 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166286746 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.186442581 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.192107223 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.163674822 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191433715 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.173573821 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192610736 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.173047171 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.1900368 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.173888443 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.202691758 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.17207317 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193984317 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165108282 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.19901336 seconds)
done (took 14.805441234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.16975772 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.236842525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.277107823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254144375 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.222535891 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.205699538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179327606 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.2156009 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.197581685 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.209453939 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.200322467 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.226314739 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.286851036 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.18110233 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208174166 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.177069025 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.205514124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.172190983 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284352256 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.219336177 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188697185 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.211997459 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189371542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210753587 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168865475 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.218392284 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.200319844 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.177862629 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.193549982 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.188986761 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.217290458 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169280198 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197539015 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188570072 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.213125477 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179706884 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.207612873 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.177025249 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.195552223 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.168046488 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.202158744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185347658 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195931393 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.206441726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.179238095 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.209903332 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.17824943 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.206955995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.172059715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.200193787 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.172078225 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.221115129 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.182400765 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.211601792 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.182903097 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.212079962 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.183335525 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.207432048 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.172920633 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.208462514 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.17242254 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.196910764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.170141332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.217284859 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.172821678 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.210227013 seconds)
  done (took 14.251632986 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.187742742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225396294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.178935883 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.206776646 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.172768143 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.190333101 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164391872 seconds)
  done (took 2.378612895 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.165057365 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.292089277 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.290499577 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287470446 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.283429082 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.296376292 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189161229 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.189570243 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201871946 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.200850298 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.292470175 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325029214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.174717722 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207148269 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.291283113 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165139556 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.292303347 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.271975737 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.178297168 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.290298414 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210187006 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.197618474 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.205521331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164380598 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.282216763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.19381487 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.339314514 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183481002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204096917 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.178621087 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207806817 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.273683866 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.28562526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.179750452 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.199779101 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259328148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.285471233 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209144815 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.299634081 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.170827785 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.284982501 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.207998576 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.182181473 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.20929554 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.18134001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.274684701 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213080682 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182614366 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.206998999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.296881633 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.176844714 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.289517238 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.177103305 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211202475 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176453595 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210207855 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213546205 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.182623266 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.29927128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18306002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.28696335 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.291166605 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.287557506 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.291769333 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.221500979 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.262488698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.278992597 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.208278549 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.288986049 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.181531806 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.292035027 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.20861258 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.179011117 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.281598253 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.211654104 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.265213262 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.293954193 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210496656 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.179542133 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.198059796 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.178774639 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197109762 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.29515549 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.181009177 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207026651 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185884851 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208538985 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.181504175 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.283523389 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.220789225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.180823844 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206239565 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.186525658 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.210794383 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183004338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.29345446 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.208116352 seconds)
  done (took 23.363173316 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170409167 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.166481664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.199911827 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167723497 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.195158985 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.167197801 seconds)
  done (took 2.148356 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206785243 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.210505366 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191628469 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210363349 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.234062478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.296664913 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.303227927 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206267567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.198698377 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.220124729 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.300433587 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.302778274 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.300330925 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.188875086 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304745815 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.211305507 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.276784676 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211188807 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190107328 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210242915 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.180993003 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216189791 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.205729606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.262202077 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213102789 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184304612 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.203848703 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.219906824 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.191959517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.205853833 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187875099 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.210421859 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.17609809 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.204705346 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.306582456 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175517263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206950914 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.184999878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.214599123 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.182845495 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.303624773 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209281005 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.190486251 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.215554777 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.178446962 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.206132522 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.18698376 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203084818 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.30834962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.184171992 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.214793026 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.182737269 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.214944932 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.185861442 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.204411381 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.203966686 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.188555697 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.30809151 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186064187 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205677524 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.211576802 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.185251991 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.204660917 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.187952237 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.210785253 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1868794 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202995721 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185522916 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208557072 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184778919 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214416493 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.183651948 seconds)
  done (took 16.644376066 seconds)
done (took 59.824946901 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.675703286 seconds)
  done (took 2.759423986 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.270786145 seconds)
  done (took 2.356524419 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.734256527 seconds)
  done (took 18.853675789 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485939842 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.415860204 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.1010158 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.24156153 seconds)
  done (took 3.33357829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.14039644 seconds)
  done (took 2.240247022 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.480468596 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346573447 seconds)
  done (took 1.920438289 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.839210433 seconds)
  done (took 1.944978795 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.813606501 seconds)
  done (took 2.908589984 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336396395 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.311433153 seconds)
  done (took 1.755141888 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.685773527 seconds)
  done (took 1.797795106 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.11635307 seconds)
  done (took 15.231588398 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.318615471 seconds)
  done (took 1.431625892 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359023929 seconds)
  done (took 1.474379265 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.625640095 seconds)
  done (took 4.7417732 seconds)
done (took 63.849246762 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.184180786 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212862224 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.187738435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.21020129 seconds)
  done (took 1.896601119 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188414773 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.208933328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.188697251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208451408 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191238643 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209427941 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.182692205 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.211850802 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.18324969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.209916775 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184967393 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181382021 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.213892949 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.181832226 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.209707 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.184885864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.216652615 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.181884043 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.213192358 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.182887198 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.212725126 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.210328053 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.18768223 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.212638339 seconds)
  done (took 5.868583749 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.179927784 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.172181756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204548309 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171218888 seconds)
  done (took 1.841946399 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.195384633 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224463922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197074631 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219893122 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199332592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224918758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182677147 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.208220032 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184716089 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223270395 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201083091 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227887561 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19675518 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218143548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.196071303 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.206722896 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.187901138 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225331732 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.192266611 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.223007065 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186036504 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.220781621 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.181975083 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223680327 seconds)
  done (took 6.070883456 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.261102582 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.224323946 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.20983481 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.241939576 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181281027 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241055312 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.258029789 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.191770931 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.217695184 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.189505302 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.211840305 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.183989058 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.266748451 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.188898973 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.21508854 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.18387951 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.221509822 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.214125417 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.227415442 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.216361792 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190046239 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225268353 seconds)
  done (took 5.886797551 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.27533553 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.206130502 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.173829916 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202069087 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.214204984 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.178855811 seconds)
  done (took 2.378246819 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175045117 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16837439 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198803568 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168161484 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201541108 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169002886 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198353546 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.1696436 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.197707414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169554318 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.196509035 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169035272 seconds)
  done (took 3.312494104 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305144366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217919614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35004112 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.465340692 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259261376 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257122643 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.347200901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256593145 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.277251428 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232770558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249737833 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257862215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2503768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276962186 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241238227 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247019762 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236868071 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.327348447 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238113326 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333723284 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251372367 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244950107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288882525 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24564118 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233888005 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231143148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.214213465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193870596 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260763615 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262148932 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26683903 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217126795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239065733 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286482138 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305886425 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267169077 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.363756191 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228535836 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232017903 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291232862 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326968136 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237392354 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286158846 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219769712 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225295948 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308716403 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21352499 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.281757393 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.22893789 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21168016 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27620891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277121135 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.266485093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203484865 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397351204 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230069864 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.235589516 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24796612 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286328928 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299054781 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278190068 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.18973449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268824757 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287787102 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31364368 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.237989339 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.231053683 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221569748 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261830035 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306215012 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249549212 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256526099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285176502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227422152 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237282109 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264188174 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250524941 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302677934 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238100559 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.21681416 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245992208 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201771941 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221339029 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.255689728 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21848646 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315948017 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197746018 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272502357 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273445809 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220623141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256758706 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257424703 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259296462 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216313645 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158314139 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240162366 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255328784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223742496 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225425714 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247604069 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205268386 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.22096404 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216388437 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219460572 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265170129 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.194218033 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257212873 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235923618 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.229684314 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279293686 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215301655 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.262664614 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264588048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292511736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196425056 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230360368 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321903738 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267224292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.204285415 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269617527 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296993698 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.208824078 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233064745 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258530948 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290644522 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211107309 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299388009 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234368875 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201719719 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226539613 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269538481 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228160302 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.260513412 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19321567 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.26428987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285625571 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.222155072 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20620827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280834057 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227757894 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194261253 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2325949 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201647152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.241029633 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.217876033 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.235238279 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250342372 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233575713 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265316021 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254068005 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200247341 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267477024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228149656 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.237321439 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245230659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.21392171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.240346757 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297939889 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227127459 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247259863 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.258386988 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2801644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271156379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195847005 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282428688 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226248178 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.187447682 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258126001 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268937867 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228335757 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.286332165 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275744995 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262557521 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.262610992 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243893419 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237399917 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.284965517 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255091799 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.207385596 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270601919 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267309377 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.187916048 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.22144071 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194944304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234716824 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224624752 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205424413 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275279836 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263071747 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272353031 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236253482 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235149646 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291854726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192160718 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257914123 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.278931648 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205422562 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.288898976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289757209 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279006744 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208227077 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261595626 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219115703 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196605421 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231037305 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228595478 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237139767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232582784 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20870107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292441017 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267577961 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215079407 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.315168463 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23345322 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.302252024 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.218053137 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.229952514 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264595363 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266572708 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257532341 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231041129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.225868113 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292478432 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240249943 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295743973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235618158 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278799728 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291749071 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.266381323 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19873867 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242893854 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2588904 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206314071 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26035558 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210657797 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229762376 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2457423 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.206880955 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239607716 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285767172 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210444081 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272039759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.254628383 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266179467 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193810479 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239816018 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272885131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213904399 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.161831793 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26453221 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28928412 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247768028 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218156378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269020309 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227850258 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.447257106 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251562279 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270425788 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235224974 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206654761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273977068 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25674146 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227156214 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.285430227 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240205136 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307407366 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239679648 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.240669 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227819295 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216121058 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250516325 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197109829 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.251260501 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26297803 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.211721478 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286136941 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238213811 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269391805 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248988679 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.245564032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.216690751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238113606 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329306755 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270203808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269146935 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.237141051 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262863342 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282757967 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193411527 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225007064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.199761511 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286911457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196325121 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277012108 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263955235 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280742649 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275478458 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262305664 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208449435 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.229051121 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236100143 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249872506 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283324785 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233172924 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.206536147 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286260291 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.18467621 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231858663 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260675745 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386701516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217216864 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268536208 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166157683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.385962888 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230771129 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201083332 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260228687 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268280944 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.200567253 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.286119494 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245571078 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23946341 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258883579 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203441913 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27809098 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282191386 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266592239 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273774502 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.21332801 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263847673 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25703424 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240714877 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24588273 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.248302868 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228862512 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296620663 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.277411769 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.200047206 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270600236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271465752 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239619117 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270254894 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239861015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282913538 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198029314 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265739967 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20535693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226128457 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258176158 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.263520766 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20037719 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273518773 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272093688 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201119596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226840202 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215303744 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268074203 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23941516 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.20122521 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285468776 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.231220942 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25241204 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311754847 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231675896 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237172725 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244043734 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229663807 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20842464 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244194484 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201118084 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.276847437 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277271761 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200859515 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27467972 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264993051 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231499063 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254373211 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240989245 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.339174538 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.230010895 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292234854 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220560817 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322105628 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252249546 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281662928 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240888712 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250844638 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264006566 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214648633 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.325008381 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267943888 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.236307376 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234780916 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243085035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207636392 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.234731659 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221524595 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272821489 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241143818 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.204443532 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.270365794 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243604847 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.216762176 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243349907 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302897772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221502516 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289891889 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.291043083 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206532252 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279301712 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274756084 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228924016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.23413149 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273175295 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244166719 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222869665 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.237040677 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.206884955 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31706965 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.228542459 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229220408 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277463343 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272644324 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242863686 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238599573 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280528894 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209575822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278299132 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228569357 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.221117345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273715622 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235721209 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.197613616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274863293 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258923485 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.236544443 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244027113 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.248153922 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295923947 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.224776632 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204270071 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391105285 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262299512 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296929521 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194660709 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238246877 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215223979 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261007961 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.26634204 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245271952 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233495046 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199533376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247745854 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.250177789 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.202196643 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272529074 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25339062 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261110599 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293962541 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.206342674 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.358853366 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244174941 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242739672 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209872986 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.198819155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243625595 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204302511 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245262419 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.280740508 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319842418 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267403372 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.217590362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238073534 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.197293507 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235401099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262547462 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222047841 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273655902 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249026528 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.166631701 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210854095 seconds)
  done (took 121.343540735 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247585337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.233482814 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.245635529 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.298711492 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272333643 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.367914327 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.305949917 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.324459846 seconds)
  done (took 3.551568089 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.190947902 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.259877692 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.242919333 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188932697 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.212719879 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.546982053 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.235963291 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.189622367 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.264673481 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.226626747 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.182639071 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.640256072 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221781594 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220111516 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.220746983 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.180502877 seconds)
  done (took 5.466523743 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.112891251 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.62733436 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.04133764 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.368052955 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.338630561 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.287180237 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.884206979 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.269571027 seconds)
  done (took 13.189290114 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.246457749 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.27977272 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458474899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.385790994 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.296191867 seconds)
  done (took 2.935038607 seconds)
done (took 174.843300284 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.194889059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.194682756 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.22906341 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.229361916 seconds)
  done (took 2.096067932 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.241112473 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153057932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.188064299 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152213361 seconds)
  done (took 1.992884507 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477035734 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.15480508 seconds)
  done (took 1.918267564 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.216938972 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.237095732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.208532593 seconds)
  done (took 1.942368549 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.207730146 seconds)
  done (took 1.481664558 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.191773186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.189723994 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.318626836 seconds)
  done (took 1.974268629 seconds)
done (took 12.671651426 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.216024611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.038543259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.65525858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206008789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.844340991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.469921739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.558840905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251098234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.279318658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.214921861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247026514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.783850324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.540797017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.943367573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.527030438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952009523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.795140734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.183503145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220957869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184809954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.536650263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181853929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215332789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183586595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795550875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.490716412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215129501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.964444678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214388793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193396379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.503036649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18324562 seconds)
  done (took 24.04527904 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.186448966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273248476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238235518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.217419383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193348687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.218861077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19555373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.228882279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31961986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184144484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238524972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183288644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.221136473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185928049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240160733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184240157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.217706965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184016581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223442941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186290807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237990687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183447679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217744628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185777301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.214912418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202629928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215794537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195163035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215651072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193485879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.220235869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184672469 seconds)
  done (took 8.07063228 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.228419468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284924342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238785751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.255573661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272319234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.185868908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.304445117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251749344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.295782387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.21764143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206285445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.21661358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223462866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.218148276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.20886197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.2170453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.185736737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218119817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22232141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18881764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238888196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185045905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217298229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186755134 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215742961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.206982342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216011204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197775166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21612413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193252108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221229109 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186201067 seconds)
  done (took 8.406283285 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199539605 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.198743596 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.24316682 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240167382 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.195539248 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197335103 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234308989 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.194048239 seconds)
  done (took 2.995809892 seconds)
done (took 44.792907101 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.743257784 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233377096 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.206596877 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.200727409 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.311566734 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.226362064 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.204115882 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225373001 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199844131 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.240566214 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183603259 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.224873848 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205475254 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228731101 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.314883423 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.202997147 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.318570321 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.316573098 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192043817 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.233328684 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.192450168 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.319216689 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.230572699 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194775942 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296380743 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.190860101 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.305376431 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.195460114 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.229858654 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186137395 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.316932063 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.229328668 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194705502 seconds)
  done (took 9.570332575 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.296229914 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.228600429 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193497561 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.227183144 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195216356 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226440612 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.33308125 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.209948779 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.225411279 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193954457 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.22639391 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.316121275 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.2009283 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.187870878 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.229336486 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.173252712 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.335340434 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.226842898 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.186035667 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.15707343 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.223859917 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193820301 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.345538856 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.22270075 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.194995312 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.226099616 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.195368771 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.198920165 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.229232488 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19605966 seconds)
  done (took 8.100807425 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200261904 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.241060781 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.215877087 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29561472 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.224401279 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.239242899 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.212218591 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240217934 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216066728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22184435 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203138474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.257325576 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204484298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.231860081 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.186550045 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.237183793 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203375532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.221924553 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196552402 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239144086 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.208081212 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.238385983 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.209915396 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.229977066 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.186055539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228521631 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198174463 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.234140875 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196585904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.237364131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.18945922 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.223376006 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.190952527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256719076 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.189563695 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.235347558 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.244146304 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.203148817 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.234879186 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.223414943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.224419627 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.191711185 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.249375273 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.24739848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.223962412 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.199981369 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.222349668 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.204965208 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.220708537 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207766483 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.263496805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.189164653 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.242503082 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.187817557 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.218772163 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.196522291 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.22318002 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.193782304 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.237315824 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.191005708 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.243839981 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197279049 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.234574544 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.193012956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.233338357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.188542366 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.220745858 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193181939 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.249697004 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.198912153 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.260689479 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.189117686 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.233186367 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.20486081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.233963636 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.202229874 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.220997616 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.203281322 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.233034626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.195113012 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.23575641 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.193034508 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.223466274 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.207053682 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.244036836 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.204259058 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.233220707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.200889586 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.224442753 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.19235029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.24012199 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.191721202 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.225961088 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.204593483 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.223674181 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.194089604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199279929 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.232659656 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.187875151 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250960968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.192587889 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.223485313 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216527386 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.227212426 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193711863 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.233376688 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.26401492 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.190976509 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198106096 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.234957218 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189791138 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.232313938 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.191142377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222729758 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.20504828 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241061635 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197980911 seconds)
  done (took 26.790234356 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.414370053 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.407809369 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.29385552 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.455829208 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.238766828 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.328682954 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.407628742 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.409081617 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189389975 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.259736185 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282766521 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.369495526 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.190617873 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.253694619 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.411782491 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.489400725 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.22011599 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.263819772 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.259645474 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205395185 seconds)
  done (took 7.682413473 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.199254508 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255978974 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211850528 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240313443 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202302717 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236322974 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191585712 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.24504115 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.203391049 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.230988254 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194488976 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.23158167 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204555269 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.204347591 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.236865887 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.247040753 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.197991605 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.224677641 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.213453418 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.225261753 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.210002878 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.249161124 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.199996846 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.243179518 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208866178 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.234630951 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.188980362 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.226308504 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.198370019 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.231415542 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.192287109 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.230529085 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.198653549 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167392911 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.236512602 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206928986 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231238375 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.193819559 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230517028 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194080014 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.236420845 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.202880953 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.232691625 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203234817 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.242800719 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.17810342 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202795035 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.236619346 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172482329 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244193194 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.203897388 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.234533767 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199504832 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.241348092 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.200231911 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.24176389 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.199764666 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.235214323 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.194632247 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.188774935 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.22500124 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193678217 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.233473609 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.203098476 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238091837 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.198839308 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.23360729 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.191900112 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.227955119 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.195153045 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.228169166 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.205256301 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.245975215 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.20106731 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.231911036 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.201754175 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.234718012 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161734468 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.198182138 seconds)
  done (took 18.356555393 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.21826755 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.23457273 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209583856 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.25737754 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204636802 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231083118 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202985591 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.243868772 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.203595936 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.244247043 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.204323789 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.238942365 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.214546591 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237868766 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202636975 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.241183132 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204240787 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.261965381 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204721489 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250483031 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.204412534 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.23109691 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205149715 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237997015 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217263793 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.237386903 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.216309125 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238843414 seconds)
  done (took 7.652539693 seconds)
done (took 79.44711722 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.540562538 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.675404837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.445257251 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.44764542 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.45688501 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.464477011 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.44374458 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.443996361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.970232844 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.420450432 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445440885 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.442838805 seconds)
done (took 31.589807311 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.635250888 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.103550471 seconds)
    (2/2) benchmarking "String"...
    done (took 2.147945345 seconds)
  done (took 5.591208712 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.100929233 seconds)
    (2/2) benchmarking "String"...
    done (took 2.112240682 seconds)
  done (took 5.544780019 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.43883671 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.432252071 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.822413364 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.436383365 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.433757109 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.43394362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.448113632 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.43591434 seconds)
  done (took 17.776246005 seconds)
done (took 35.319511877 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.418421049 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.650044393 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.692472165 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.421253375 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.435732063 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.447670774 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.43733828 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.467801639 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.436646407 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.425260263 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.864701039 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.712625397 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.442494377 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.829816283 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.420963052 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.444049405 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.450352071 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.692998091 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.437322948 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.476967145 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.430737967 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.421372912 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.449752895 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.446419043 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.44624506 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.445592194 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.442719146 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.436361914 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.638877159 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.475251074 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.4802423 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.43772489 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.442621751 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.451703679 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.448913009 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.438357973 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.628767359 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.446871256 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.439913007 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.447078373 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.631657999 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.447143979 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.451647654 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.446325686 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.429981649 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.499408503 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.427907716 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.558171121 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.464083494 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.442611582 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.470007118 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.822737376 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.452066615 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.443785514 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.443736681 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.681894503 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.462613362 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.510128375 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.463980847 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.440900035 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.452858433 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.446484664 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.459257604 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.448467978 seconds)
  done (took 159.03267079 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.438916519 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.440227352 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.440101932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.442283052 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.440713004 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440614616 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.437491454 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.439066781 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.441189125 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.446708844 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.441954056 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.438949127 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.442926638 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.388440455 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.448937784 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.459214913 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.441118667 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.456674243 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.449509629 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.439080068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.447458469 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.442070801 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.442442025 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.442361416 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.448973514 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.527294127 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.48772451 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.457903252 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.451096513 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.440629407 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.444934681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.444777227 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.110056916 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.30818037 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.454919487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.480885948 seconds)
  done (took 88.983137575 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.440257721 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.44097182 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.440897867 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.476858852 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.440660676 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.047736754 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.046896785 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.422970498 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.809810153 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.844297553 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.986506788 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.443366235 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.707451366 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.441244703 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.534387372 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.455569575 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.442977035 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.537771294 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.468811247 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.441861917 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.440861435 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.048479164 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.454257476 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.491389144 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.624475796 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.441993221 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.478096971 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.84286039 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.441853841 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.476024451 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.781732897 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.477966129 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.442628843 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.847320037 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.776688382 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.556554551 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.445382099 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.477347726 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.442794346 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.728712467 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.443019384 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.445372051 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.447861577 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.145403219 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.44690791 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.048788019 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.44380107 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.477423425 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.446646515 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.443276072 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.183320212 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.329926108 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.446898696 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.44370863 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.446360188 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.443687446 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.443424673 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.478420109 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.128872323 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.375483273 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.44658196 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.448427375 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.479371563 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.445294869 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.444572611 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.444864772 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.456379125 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.507834149 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.587522659 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.063570147 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446882267 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.444689715 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 22.04336375 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544269013 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.564830558 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.446277708 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.445314667 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.445810144 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.445338603 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.55817221 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.445770046 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.88711189 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.629136304 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.447080235 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.916381208 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.543742457 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.44634241 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.875214135 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.44795478 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.445390831 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.192807492 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.543368604 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.446243831 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.446924471 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.447500313 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.886645537 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.054680337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.804649736 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.449618737 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.267437295 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.452195799 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.44604479 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.898925199 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.049826019 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.130841671 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.448416938 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.559599714 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.631654429 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.450402677 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.447629143 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.982970967 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.449159628 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.508113472 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.446935522 seconds)
  done (took 399.67841282 seconds)
done (took 649.027563264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.432923449 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.434215342 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.434709944 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.434275673 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.434857193 seconds)
  done (took 13.515947512 seconds)
done (took 14.861612736 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.448929046 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.44921949 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.468878861 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.156957375 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.451252115 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.450552293 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.450912773 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.450444643 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.450636279 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.451848605 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.152704171 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.451639581 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.451047734 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.330279914 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.151945917 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.451128992 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.272596963 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.452009561 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.449342398 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.77708339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.815434191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.518365187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.734187476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.496433341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.78169903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.788908358 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.672487601 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.625552424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.479533877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.472150783 seconds)
  done (took 19.509453202 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.253886693 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.760630416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8263103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.519467218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.744786745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.496927237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.77299861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.789409713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.68639004 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.626171081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.479739434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.474176401 seconds)
  done (took 19.525417055 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.148395771 seconds)
done (took 90.17811718 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.492345314 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.555298805 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.488093409 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.470874586 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.469705909 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.470099625 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.47158041 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.469439259 seconds)
  done (took 13.236814204 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.469944022 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.46828419 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.468711048 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.468604201 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.468755564 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.469045812 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.469474775 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.469124722 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.469848552 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.469381579 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.467871762 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.470124256 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.469681582 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.470736073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.469832434 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.469442858 seconds)
  done (took 24.859559985 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.472359617 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.469865638 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.470385508 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.469121484 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.470349231 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.47041227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.471567507 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.470423778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.470334228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.469892181 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.471552042 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.471080951 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.469395721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.471069688 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.470282419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.471609022 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.46956861 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.472365705 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.475429548 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.470224295 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.469887772 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.470406671 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.471059493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.471504006 seconds)
  done (took 36.651256751 seconds)
done (took 76.096871145 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.455462069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.45891696 seconds)
  done (took 6.265493316 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.529432418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.529629748 seconds)
  done (took 4.411862724 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.473074608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.472365304 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.472488164 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.473552145 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.471024118 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.471920741 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.472342884 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.473327276 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.47247688 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.472006194 seconds)
  done (took 16.076906396 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.470746078 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.473579059 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.472718574 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.471598525 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.47269329 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.472811544 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.473764568 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.473100653 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.474291806 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.472938146 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.473260163 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.473530597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.47366312 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.473044186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.472227904 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.472533161 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.474192121 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.473698936 seconds)
  done (took 27.867415187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.486822837 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.49227171 seconds)
  done (took 4.333667499 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.60238438 seconds)
    (2/7) benchmarking "second"...
    done (took 1.515670156 seconds)
    (3/7) benchmarking "month"...
    done (took 1.577904996 seconds)
    (4/7) benchmarking "year"...
    done (took 1.571074273 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.517120226 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.495739412 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.516130749 seconds)
  done (took 12.150855035 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.469981768 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.785475579 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.966408376 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.63897697 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.459198008 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.480631944 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.444216923 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.483757339 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.483066936 seconds)
  done (took 16.566565214 seconds)
done (took 89.024674071 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.4600157 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.48779069 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.478685047 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.498046207 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.815267675 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.509872386 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.464815239 seconds)
done (took 18.071333336 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.450174922 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.447081614 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.45754624 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.480308174 seconds)
  done (took 11.190644367 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.460948379 seconds)
    (2/2) benchmarking "read"...
    done (took 1.786930557 seconds)
  done (took 5.601414781 seconds)
done (took 18.149327553 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.476477416 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.475798284 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.475366102 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.476578294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.476301992 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.477434313 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.476789029 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.47638896 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.47689516 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.477572589 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.476365322 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.47738681 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.476020996 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.47680156 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.476690454 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.478008783 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.476966453 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.477025683 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.477855428 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.476895362 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.478187814 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.477273419 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.47749112 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.477050449 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.477872393 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.478109316 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.478968205 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.478126305 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.478936491 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.478023952 seconds)
  done (took 45.673283637 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.483696465 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.484061101 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.478110707 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.478086768 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.478986094 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.477643539 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.477612704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.479603367 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.478144212 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.479211661 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.478363869 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.479638545 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.478913036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.478869722 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.480182926 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.478104648 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.480903022 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.479579395 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.478727308 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.479342928 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.478929768 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.479806121 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.479915433 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.480000796 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.480462515 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.478804344 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.480016964 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.481123208 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.47966869 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.479829543 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.48014339 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.48023093 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.480401705 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.480004707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.480987398 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.480624756 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.484650553 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.486786712 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.481297194 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.481015132 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.481077495 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.481011828 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.481780263 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.481309578 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.482491402 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.480134979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.481411419 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.481683005 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.481979253 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.48190316 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.482431009 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.482524798 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.483223857 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.481642758 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.481458079 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.482058183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.481799418 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.483449725 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.484695898 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.482372256 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.482497968 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.481813824 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.482073517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.484122754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.483746437 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.483726721 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.483185938 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.483290167 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.484147528 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.483521675 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.484489517 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.483448165 seconds)
  done (took 108.004185693 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.484654626 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.484146767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.483826631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.48362756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.485108444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.484250733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.483422541 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484418354 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.485263275 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.48555962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.484388183 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.485178335 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.485711347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.486437271 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.486003553 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.48555371 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.485137663 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.48448102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.485618358 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.48515282 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.485791566 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.485822153 seconds)
  done (took 34.032556579 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.486791843 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.486783885 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.486669363 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.488597759 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.487405212 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.487192816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.485456095 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.486902288 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.485508551 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.48581613 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.486444437 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.485417294 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.488320945 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.486475376 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.486548391 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.488734136 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.486551805 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.48768735 seconds)
  done (took 28.128197634 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.486680137 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.486410824 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.486427481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.486136224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.487464773 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.487741228 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.488374311 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.487582225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.488273876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.488085509 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.486664954 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.48705646 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.487496015 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.487134819 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.48777601 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.487642425 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.487859019 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.487596092 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.489306674 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.488670396 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.489920445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.488408138 seconds)
  done (took 34.094731344 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.489930612 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.491174749 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.488772452 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.487637746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.488907358 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.488935144 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.489679383 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.487929089 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.491577887 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.48813029 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.488962217 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.488268705 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.492168282 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.488196414 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.489603437 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489107307 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.490229366 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.490053936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.488829369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.48945346 seconds)
  done (took 31.15521743 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.491051689 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.490387103 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.490249722 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.491005565 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.491471467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.490307237 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.490901977 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.490745334 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.490572565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.49231083 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.491193987 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.491860487 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.492202765 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.492114821 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.491553061 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.492314017 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.49170634 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.493046777 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.491415187 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.492422004 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.493449361 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.493136221 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.492843858 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.493812135 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.493204052 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.492963918 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.492196432 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.493155472 seconds)
  done (took 43.141904303 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.510459119 seconds)
    (2/2) benchmarking "in"...
    done (took 1.51121444 seconds)
  done (took 4.391470215 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.493408781 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.492914026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.493450185 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.493100297 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.492459746 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.493282454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.493110347 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.493079136 seconds)
  done (took 13.31495868 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.487199973 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.493627784 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.492260071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.493070595 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.495096056 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.485943852 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.494821977 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.498243002 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.487902937 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.487111072 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.492295378 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.493082606 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.489119457 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.487942229 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.489170641 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.494344399 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.497235708 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.497177079 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.496178709 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.495607219 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.496216554 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.490611623 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.492961842 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.498526818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.488819265 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.500211623 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.495811455 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.499729444 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.489896265 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.494081464 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.491303874 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.498487428 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.498626276 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.497185297 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.495622553 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.497509877 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.498937291 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.494183316 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.497026404 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.500551219 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.497472309 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.496797637 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.491051276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.493329928 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493842015 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.500313993 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.498342792 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.496007974 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.488920214 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.493971193 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.502913097 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.489978439 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.498872394 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.496787016 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.496548753 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.500575942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.504793847 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.492715986 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.497647248 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.502806333 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.511499566 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.50621553 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.501082828 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.502830916 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.497964846 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.505263875 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.504101347 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.506093245 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.501090376 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.497663348 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.499812454 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.514040676 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.509575924 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.505044594 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.500102366 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.49927071 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.494602054 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.503465467 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.500373732 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.503681472 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.505029349 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.501138951 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.499399174 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.504510392 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.4957655 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.504282522 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.500228635 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.500766702 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.493153244 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.504929046 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.508407596 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.50164533 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.494002653 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.495693926 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.498464804 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.502686824 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.494842065 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.498775238 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.504337896 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.50147167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.502610768 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.497055315 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.503323608 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.5062074 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.502369193 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.505423205 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.508195767 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.49649767 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.507190832 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.50866299 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.503755171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.496524803 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.502940766 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.505169625 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.497796027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.505039484 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.509271777 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.499640099 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.506982412 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.50373395 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.503194278 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.51198297 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.508946724 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.503809783 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.501608313 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.512271184 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.504609783 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.50247186 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.510074992 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.504438912 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.504177256 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.502021006 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.509949782 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.500905883 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.509926633 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.502291488 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.50911817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.504884579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.504254103 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.500681201 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.503209318 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.502786199 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.504203282 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.506364022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.510653723 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.501335444 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.513348642 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.505318833 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.503744911 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.505712135 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.510546423 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.504834618 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.501105993 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.51014246 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.499138537 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.508255485 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.499027896 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.510006802 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.507260353 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.506031929 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.505909932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.498379863 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.503782959 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.510132739 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.505547074 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.50483609 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.50989586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.506356505 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.506961223 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.499291022 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.507658562 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.498051971 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.502886761 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.51284543 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.506807879 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.506525325 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.505378692 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.511957042 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.506811469 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.506878507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.500917644 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.508727929 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.512601968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.5090368 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.515092691 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.507999599 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.507931566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.501369536 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.504941488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.509696419 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.501949721 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.515805441 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.518720412 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.519458685 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.504663569 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.511543469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.500297836 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.511572601 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.508084331 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.516257928 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.509312819 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.507609355 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.501949645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.512224534 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.50359571 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.51241792 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.502299803 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.511752322 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.510033802 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.509922024 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.509685367 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.50497381 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.508333753 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.513334055 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.510138342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.509066869 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.504523213 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.513989989 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.50297892 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.504447259 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.51317382 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.510852787 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.512219237 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.515903617 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.508015334 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.511070605 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.51055194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.506892646 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.513141514 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.508086865 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.51055857 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.515993051 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.512837792 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.506612876 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.516899496 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.512972121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.505778516 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.511916062 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.51772743 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.512173781 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.504801125 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.517239415 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.514248924 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.512544059 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.511698478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.505446703 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.515382601 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.513686686 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.519879691 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.505788022 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.516033881 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.507530102 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.516998107 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.508554672 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.513783848 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.512266746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.515720523 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.519144331 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.51286753 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.508158997 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.515927007 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.514010721 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.513128734 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.50786034 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.520000108 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.514781002 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.513759936 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.511562694 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.510819618 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.516352002 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.507316824 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.516395198 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.508985027 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.529214089 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.53154409 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.519266129 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.518703227 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.518351203 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.515713462 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.515426642 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.510724326 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.509614538 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.513975942 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.513472296 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.51010028 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.518177465 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.510188448 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.51847218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.512404653 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.515256607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.519323451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.515970481 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.508491096 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.519377015 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.515565868 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.515620036 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.507745982 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.516736212 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.51233271 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.517118797 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.515682853 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.51142046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.522198606 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.519076587 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.515192241 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.513926273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.51202469 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.510053425 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.513734834 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.521854032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.510801626 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.52219003 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.511092964 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.518313902 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.512626868 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.521673646 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.524030271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.509737024 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.523690216 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.517729648 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.508894515 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.511872808 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.518702423 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.521254627 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.526991798 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.510581309 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.520405284 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.51693662 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.518314555 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.518349259 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.518122147 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.518864372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.518266918 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.524623639 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.521554491 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.516041559 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.520081564 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.526421517 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.520116418 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.51928957 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.510796192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.522351124 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.527498172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.516141936 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.520037926 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.515965863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.520195996 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.519772688 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.520522602 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.521436331 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.520097748 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.524117763 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.523725332 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.523420969 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.521043495 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.525791411 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.529129728 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.524795827 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.531448986 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.516088644 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.525680323 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.521477122 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.516258015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.515813879 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.518619722 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.525037648 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.513351283 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.526298329 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.52140513 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.518608918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.522542534 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.528802911 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.514919166 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.522004782 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.533208852 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.514950927 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.526694402 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.523497147 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.5150411 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.525938358 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.522539208 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.513140908 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.5173534 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.522406034 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.528786606 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.515866076 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.526551169 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.517279387 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.526962897 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.523760654 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.522076451 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.523760515 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.523577011 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.515284088 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.525447163 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.525005063 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.531767471 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.519697175 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.523686382 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.518650627 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.529719652 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.533204049 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.519859212 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.529522512 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.525480746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.519148233 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.523650329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.529339225 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.520670307 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.528006047 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.518973862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.52128966 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.522633283 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.524565538 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.527540033 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.528931665 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.518032322 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.519319197 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.526657906 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.525656376 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.524856758 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.521769269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.53299862 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.51717197 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.51946508 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.528491479 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.520482456 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.530106162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.520155941 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.525212533 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.523269795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.529200669 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.526440636 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.526340857 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.51946378 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.521878027 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.53230442 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.529402156 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.525519081 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.524295536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.529460231 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.519750261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.524187682 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.527054776 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.523046435 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.523912413 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.531227715 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.522961652 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.521929898 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.522143764 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.528907063 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.530926406 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.528984873 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.522239523 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.535109933 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.534892456 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.534953708 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.520725734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.52489331 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.525714725 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.529559693 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.530831648 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.521972386 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.535556939 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.534012372 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.532878806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.527345177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.52747499 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.521377086 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.531498746 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.530289894 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.526593387 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.535810195 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.525852879 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.536178083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.529423914 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.529647515 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.522426085 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.525414917 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.526401127 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.52709705 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.532171265 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.528638242 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.530908255 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.52888141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.53564358 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.52991684 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.530873075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.530541857 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.522228551 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.532083123 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.523823037 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.530858695 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.530245722 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.524907681 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.533256104 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.530237311 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.524375863 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.531222646 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.536502711 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.531376494 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.52419387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.530556998 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.536000751 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.539209047 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.532006193 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.526253568 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.532385283 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.535358839 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.531902321 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.532356754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.526596885 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.544776638 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.542900808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.526901294 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.531289263 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.537879476 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.540641772 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.533977707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.533949391 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.530165883 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.531775074 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.538151866 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.53412877 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.537637096 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.536848201 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.530205735 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.537885048 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.527743584 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.531756344 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.535078338 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.541563284 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.534285167 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.529752455 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.544997834 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.542828895 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.533581435 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.550341182 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.539303512 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.534606413 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.540320815 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.526677124 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.536097597 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.530873762 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.541126713 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.535192132 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.53527808 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.535542239 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.526383816 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.537813797 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.539921791 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.545878387 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.535716268 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.527694487 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.531083319 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.535845928 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.535663306 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.537303687 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.53624946 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.536326225 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.536859954 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.531623825 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.55056282 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.550881436 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.541353933 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.53801651 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.537331263 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.536859463 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.539825956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.535898716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.542181159 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.53653036 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.536960933 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.534776551 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.545755687 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.537867828 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.529901396 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.533154711 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.533014432 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.541354354 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.549265967 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.556605611 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.53989687 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.538464997 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.539178613 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.539202269 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.532890121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.542075086 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.537327949 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.53388023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.533608487 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.541957334 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.540601754 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.538190218 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.53383297 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.545047786 seconds)
  done (took 905.234626305 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.539083581 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.539497654 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.539393364 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.540183259 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.540505885 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539477718 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.539221338 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.539178136 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.539975384 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.540087209 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.539355521 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.539520706 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.540031859 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.540633253 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.541633346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.539924581 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.540403537 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.541139159 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.541095557 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539922037 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.539898062 seconds)
  done (took 33.750358035 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.540117001 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.539810841 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.540215589 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.539987022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.539952724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.540000716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.540840975 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.540962963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.540959422 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.540769829 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.541836132 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.541103385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.541217788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.541454799 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540893321 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.541424946 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.543271952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.541594491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.540659055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.541761603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.542131178 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.542456376 seconds)
  done (took 35.314559971 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.54186421 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.541976511 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.535476281 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.546305799 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.542401824 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.542325155 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.543282349 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.542422803 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.542989138 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.53407776 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.535412177 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.536804017 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.539984521 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.548282671 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.538737156 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.548810955 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.54415643 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.54281395 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.54361523 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.543693449 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.545284655 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.552626654 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.543382151 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.535845978 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.545405887 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.544489774 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.545520595 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.545097602 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.537620283 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.547165525 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.544003082 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.53777506 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.545973283 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.54497248 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.537618386 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.548187211 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.545050952 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.544603409 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.545055565 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.543896625 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.5561717 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.546691971 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.551841955 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.553095605 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.546112218 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.53993447 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.553064802 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.546088338 seconds)
  done (took 75.521443845 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.545947248 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.546232552 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.546354009 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.546514862 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.546855058 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.546666006 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.545858788 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.548027439 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.546551932 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.547387883 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.546317047 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.547106436 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.54685699 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.547457989 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.54776237 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.548510084 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.547799635 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.548168581 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.547401666 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.548340036 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.548272099 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.548036072 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.548354923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.548179148 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.548447949 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.546890695 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.547799303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.548259973 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.548087111 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.549508987 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.547872651 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.548279049 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.548727627 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.548655903 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.548712364 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.548619314 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.550343128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.5486303 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.549381747 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.549675688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.550220871 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.54847059 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.550319847 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.549747307 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.548999796 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.550641431 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.550290632 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.549689757 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.550338917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.550672735 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.549757998 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.549499796 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.550307571 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.549703788 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.551074722 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.549385363 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.551862222 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.550857226 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.550826719 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.550122217 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.550957406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.55161813 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.550595869 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.55113913 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.551824216 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.551697205 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.551350766 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.551518709 seconds)
  done (took 106.744367841 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.55132808 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.552865052 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.551778347 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.552278221 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.550898837 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.55236543 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.552292269 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.553108943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.553231648 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.553145418 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.551595136 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.552069656 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.553250594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.554664038 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.551696898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.553298041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.554496981 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.55290186 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.552899199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.552898092 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.553193767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.554281567 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.55268452 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.552614124 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.553237048 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.555251314 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.55329001 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.554595807 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.554343495 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.554520894 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.553801762 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.553249823 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.555132986 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.553559874 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.553964536 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.555116956 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.55487281 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.555595956 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.556372966 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.555316542 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.555736098 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.555810415 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.556305205 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.555675922 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.555798245 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.555867751 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.55634565 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.556240065 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.555555121 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.555556564 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.555696477 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.555993176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.5547884 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.55513734 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.55557267 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.555094978 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.557515026 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.555026654 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.556239213 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.556698819 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.556970271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.554313652 seconds)
  done (took 97.787707655 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.555557158 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.555986792 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.555944888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.554890445 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.556992477 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.556467241 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.556564302 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.556298192 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.555681718 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.555646279 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.556604516 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.558524588 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.556224386 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.557775065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.558168852 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.557361266 seconds)
  done (took 26.3291575 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.557673869 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.557728499 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.557998818 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.557505179 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.5580659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.557702064 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.556895239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.5571776 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.558891471 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.558273184 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.557898461 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.557066299 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.559029124 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.55820029 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.557760017 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.559689717 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.559400134 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.559706526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.558334854 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.559471135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.559047698 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.558783904 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.558731073 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.558896149 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.558343943 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.559443129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.558421209 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.558846491 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.558866756 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.559788881 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.55901893 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.559864886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.55933193 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.560483729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.560701814 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.560307202 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.561179936 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.558736161 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.561608231 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.559368599 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.561132171 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.559782197 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.559648352 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.560649795 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.560356017 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.560159357 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.560259457 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.561577582 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.56249456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.560798234 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.561005639 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.562428089 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.561771901 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.56194135 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.561823415 seconds)
  done (took 87.197331557 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.561593157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.563208621 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.56097268 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.561750374 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.560781402 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.562234045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.562602613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.563958809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.562126627 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.561838408 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.562782779 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.563740922 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.561085226 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.562104571 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.563190389 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.562596417 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.562652578 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.562571072 seconds)
  done (took 29.55090479 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.562588619 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.563651879 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.563495637 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.563226206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.563341906 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.563871005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.564190741 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.564028577 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.563856125 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.563749586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.563362168 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.565191775 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.564406951 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.563880519 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.564776483 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.564702999 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.564228994 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.564562822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.56409351 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.565038489 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.566366461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.564405192 seconds)
  done (took 35.840598854 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.554913498 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.555511934 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.554267479 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.5690616 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.567428078 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.554214411 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.555135967 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.555618807 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.572972645 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.581226988 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.580119043 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.565766133 seconds)
  done (took 20.198578809 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565318961 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565922061 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.565604041 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565505601 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565733463 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565471161 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566282867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56623218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565372395 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56615194 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565605299 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565895009 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567258988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566192738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566811161 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565752639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564827723 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567134946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567103867 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566686321 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567045295 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56628895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56657298 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567309099 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566787211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567975082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568880033 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567305326 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568123013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56812348 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.5674197 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568178494 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567934147 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568373422 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567898669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567560869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568471992 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569181956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569047123 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569089952 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.569656118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568884899 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570191357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569928207 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568683071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570559297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569438751 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569433585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568419663 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569364428 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569412915 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568861567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568412575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569326297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569004814 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569973904 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57018548 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569461658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569393328 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570384505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571324092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570936788 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570068672 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570906396 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570550827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570989741 seconds)
  done (took 104.926333839 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570277108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570348954 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569311384 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570672026 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570343863 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571705541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571876253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570855572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571455343 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570966165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.571039365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570839607 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572486613 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571711625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571716308 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572252988 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570748839 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570603908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572282961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57193223 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571577283 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571547729 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571171471 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571764907 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572513954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572976508 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573171073 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572888035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573125598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57214764 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572020552 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572139134 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573355978 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.572568758 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571901667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574053173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572202725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573463547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574040985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572895444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573978523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574386476 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.574531736 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573746181 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574727359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573973916 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573881322 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574070865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573664303 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573209389 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575258366 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574971107 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574222577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574642153 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575054827 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574177714 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57476836 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575359567 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575540293 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575595396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574708773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574088433 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576075664 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575446421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.574883776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574630941 seconds)
  done (took 105.252949635 seconds)
done (took 2006.942241224 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.563643289 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.561884887 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.564433979 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.697467537 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.565104856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.237043403 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.088653012 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.566412734 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.565857315 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.566294683 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.565867941 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.560728763 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.903221014 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.567251372 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.566340035 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.563405871 seconds)
  done (took 58.14395971 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.598260661 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.576157076 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.702186086 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.570490274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.599660809 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.78475397 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.634924236 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.573211315 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.768254091 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.575998126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.570003278 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.595874056 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.572389785 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.565008947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.592366329 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.786394206 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.860020911 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.570756465 seconds)
  done (took 33.939519959 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.103604623 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.566823236 seconds)
  done (took 6.113377422 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.593458052 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.571433942 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.575392562 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.572651062 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.564291342 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.563460694 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.605463763 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.564774372 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.568925974 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.718488013 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.57877843 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.58580255 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.572963797 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.573528326 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.581241403 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.620389972 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.707603386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.582233529 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.580180523 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.578598108 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.572905305 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.769609995 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.620957289 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.583426501 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.716973713 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.580648936 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.578537892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.587338488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.725576784 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.583933202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.57421469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.574126605 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.576107809 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.5814017 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.127819408 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.566160552 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.605588263 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.582380251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.582013941 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.729924044 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.576500931 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.580760152 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.572664405 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.129593077 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.696270231 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.80928731 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.57005559 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.578264215 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.575964325 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.7308039 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.576297467 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.575826232 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.636624002 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.578581801 seconds)
  done (took 99.319787442 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.591047124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.566660241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.755455556 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.594246068 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.5675851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.578931962 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.569689612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901668424 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.624993916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569477908 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.911287097 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.25764613 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.570917163 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.612355268 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.617825883 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.618192997 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.568801236 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.56883285 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.569628155 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.572480465 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.167706658 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.579119304 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.569986687 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.724000584 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.613381748 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.168635699 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.572517414 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.569638933 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.575120226 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.571316337 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.219475226 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.576085994 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.630642258 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.570571979 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.88236871 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.016550359 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974748694 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.573409392 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.618487268 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.575834203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.606687864 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.167153483 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.997689201 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.570635503 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.572777985 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.170478149 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.571296049 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.577230473 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.572017543 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.843457202 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.570971855 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.572077973 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.573254342 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.570665648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.570729148 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.637726286 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.640691806 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.170785306 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.573810165 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.574328232 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.575369233 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.5724212 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577598671 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.578729922 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.576668092 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.003234301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738123614 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.574999783 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.000528776 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.217332043 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.573102218 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.298813262 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.574136336 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.577724562 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.648792724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.572712513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.592202574 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.164945156 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.574993502 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.573221525 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980596886 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.576708965 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.90231906 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.592794564 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.573805808 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.216690091 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.582328865 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.634605207 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.574286681 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.57568623 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.574042916 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.577783429 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.8905534 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.642990082 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575507788 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.575734102 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.613584169 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576269864 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.575806007 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582281463 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.305159853 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.574988589 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.575602188 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.576978595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576167871 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.577844049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.577551158 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.576274725 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.862816242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.576935826 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.595223514 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.588005707 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.576384321 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.586953404 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.740489916 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.57826946 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.938037408 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.580072043 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.58411587 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.583433917 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576791943 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.638863796 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576900007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.576587438 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.534538405 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.899851902 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.607917463 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.578582166 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578777333 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57817831 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578039803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.582971215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.607133859 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.58095468 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.455106337 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585700094 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.590330266 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.576913793 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.58270798 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578838563 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.579672468 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577342414 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909052046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.894374219 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.773804601 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.58105818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.578615952 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.442653623 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.580139011 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.767842244 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.599083676 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.57984039 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.884518066 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.762249284 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.579673724 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.578393844 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.580000638 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.869889496 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.581429139 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908465674 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.249008093 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580511383 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.5833719 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.453345292 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.327976681 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.580102801 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.582202467 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.907910578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.598854826 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.57928598 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.580358864 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.580695601 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.581608218 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.585638439 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.580473125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.581880554 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.580800231 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.693454958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.780785954 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.598470824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585532246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174927829 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.585314075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581243409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.584252151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.582383396 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.580883392 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.608813101 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.584598079 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.58982098 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.580728114 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.590989249 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.208208449 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.58214893 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.584095133 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.782246286 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.401800133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.585241264 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.583293257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.582072231 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.614891705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.203931583 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.632735059 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.945021613 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.587898562 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.626843641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583229118 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.626712834 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.205253729 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.585749576 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.585009217 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.371017099 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.584504339 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.273815152 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.583934772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.584301453 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.311148796 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.58321658 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.586053024 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.584206937 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.585368006 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.902747298 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.583997741 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.630295214 seconds)
  done (took 554.951524862 seconds)
done (took 753.908431797 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.585114572 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.591217594 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.588354803 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.588657298 seconds)
  done (took 11.814672665 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.602381412 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.592029051 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.60034672 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.591043068 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.602690842 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.59235929 seconds)
  done (took 11.043209228 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.586366131 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.587459163 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.590704413 seconds)
  done (took 9.226690164 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.825674668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.589428112 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.994952975 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.588964244 seconds)
  done (took 10.461635477 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.601176025 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.601692401 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.60147097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.60004283 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.603716182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.60391541 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.603581863 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.602312572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.602823374 seconds)
  done (took 15.880391079 seconds)
done (took 59.888201386 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.668987229 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.672096058 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.587629774 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.63439228 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.732313988 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.675006425 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.677582972 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.681058292 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.675732635 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.626809491 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.672040435 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.621920101 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.671691576 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.800636988 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.625667874 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.672123073 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.619709695 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.76905579 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.679360164 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.629901657 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.696508807 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.627335746 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.62969169 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.600247708 seconds)
  done (took 43.411112377 seconds)
done (took 44.874534521 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.618620056 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.692594328 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.598017485 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.597270355 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.599912521 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.588910627 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.619562782 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.599508999 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.613502183 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.613694066 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.592232917 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.608015154 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.613379391 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.611095803 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.633443602 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.599500816 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.599172299 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.608896283 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.61436996 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.616500818 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.600912771 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.60051328 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.625848787 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.598142562 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.607377822 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.607313177 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.606717801 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.600266368 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.607423337 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.61523146 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.605622232 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.606154138 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.617131234 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.611583637 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.602675779 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.611062256 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.602390729 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.692490658 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.622077161 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.610586582 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.607050454 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.617147387 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.60529543 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.605707378 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.612463648 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.628881613 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.60875368 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.616094594 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.60597535 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.592958139 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.62538988 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.614334093 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.611497828 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.592761979 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.606032871 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.618141311 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.613389662 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.622997599 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.611124259 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604688804 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.637147495 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.621986167 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.614242018 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.610249834 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.610371349 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.617399706 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.613060659 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.619096123 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.611270751 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.605183549 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.605144406 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.611877281 seconds)
done (took 125.55680891 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.725623284 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.60099854 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.754671202 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.609612052 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.774305369 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.724790449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.61097041 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.610203268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.610155838 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.403682699 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.610334864 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.611879537 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.601140613 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.610644658 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.723671291 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.61205593 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.611612731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.305256957 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.612874802 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.739658601 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.60262034 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.611130089 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.612867467 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.400567589 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.600831134 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.597218446 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.739004063 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.610766716 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.29964768 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.597427843 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.597922631 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.299637572 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.739833273 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.631601312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.62324751 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.620828192 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.775840974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.615676613 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.728075335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.730211894 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.759728446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.651448471 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.597831408 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.604106018 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.615364646 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.613772524 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.613383247 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.643863703 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.604204923 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.614605291 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.310786105 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.622976743 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.61418701 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.613833041 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.614714963 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.642886839 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.614227322 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.615193995 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.741377138 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.616055164 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.730238285 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.403480209 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.408615531 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.615697677 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.601194054 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.615781923 seconds)
  done (took 126.670351042 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.674029449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.679517562 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.727238523 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.606892017 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.656909183 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.729182954 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.607118164 seconds)
  done (took 13.154341775 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.613880293 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.615036253 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.654254849 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.656349947 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.616016316 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.780635345 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.615322873 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.619465085 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.615580236 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.657798992 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.616041112 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.615915637 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.625068684 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.607742015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.655560147 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.619149759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.726352955 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.608561139 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.616846608 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.763122134 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.615699983 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.625729939 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.659705745 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.620093759 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.61792141 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.615282763 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.367627697 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617338479 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.617516465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.618429278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.617657071 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.675993858 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.618209796 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.607519783 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.617731344 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.723013254 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.617806629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.617908565 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.617860933 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.610252521 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.617860604 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.618762621 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.619751062 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.617035928 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.62002095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.634516647 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.618823803 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.618057756 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.619262288 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.619402075 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.65869973 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.619664985 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.618772834 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.618509698 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.665054563 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.628677105 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.619380189 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.618844155 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.62061482 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.618321408 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.766783331 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.659752663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.619144411 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.658269961 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.620694776 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.621431957 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.620032308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.62014088 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.704057458 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.620572801 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.659753475 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.620348462 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.794556527 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.636412523 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.62136285 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.615353923 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.616089992 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.620749606 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.608915677 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.618752933 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.620509328 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.614919687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.619886646 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.620952561 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.622737331 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.772842303 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.719814262 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.622443291 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.629751429 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.620848036 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.620546824 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.664902384 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.623100696 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.622932897 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.663236426 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.732356054 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.664822357 seconds)
  done (took 165.145795736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.625384931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.62561093 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.617160041 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.642009843 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.615273556 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.614732261 seconds)
  done (took 11.220339535 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.616603356 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.626054379 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.623843862 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.624053814 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.623245149 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.625227666 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.624297847 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.616483858 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.628483159 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.623710489 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.622980389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.625649286 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.625342707 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.624483595 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.625297249 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.625854822 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.622856653 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.62309219 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.624168038 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.624572472 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.612587201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.625340395 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.626884326 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.618600208 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.628487939 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.624851606 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.639877255 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.625981613 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.624142733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.624463455 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.628080206 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.626597836 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.619778668 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.621811055 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.628115669 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.61930529 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.630636829 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.627248617 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.626200484 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.6273205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.628317044 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.626940171 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.627118399 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.626533078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.618770731 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.623628457 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.632332943 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.642963811 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.627159314 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.628045782 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.628408552 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.62741157 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.627563859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.629278356 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.622299777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.621602008 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.632242641 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.627602733 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.628259766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.620869077 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.630777097 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.629423025 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.621994041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.63202532 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.628769342 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.629143592 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.621540094 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.632819048 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.628896657 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.627860264 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.630403945 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.627931012 seconds)
  done (took 119.55513635 seconds)
done (took 437.214767725 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.058722256 seconds)
  done (took 4.544310591 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.734848675 seconds)
  done (took 4.22230664 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.952445586 seconds)
  done (took 25.444078353 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.619916225 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.618519899 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.621311502 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.621474417 seconds)
  done (took 11.967110764 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.200344566 seconds)
  done (took 4.688248983 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.639773487 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.623213959 seconds)
  done (took 6.751704867 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.993786082 seconds)
  done (took 4.482210957 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.376971066 seconds)
  done (took 4.869989415 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.639321998 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.629272593 seconds)
  done (took 6.762097107 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.599934891 seconds)
  done (took 4.088438936 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.381932409 seconds)
  done (took 16.870147711 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.643312499 seconds)
  done (took 4.134868922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.613835728 seconds)
  done (took 4.102185899 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.611775082 seconds)
  done (took 7.098605466 seconds)
done (took 111.513232945 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.61372523 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.620872878 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.618104152 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.619191186 seconds)
  done (took 11.959345058 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.695265995 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.69520717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.702755101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.689947106 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.688555916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.697322681 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.655907345 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.658569247 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.68773735 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.683247482 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.700182654 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.68999504 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.698821282 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.657951634 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.683574002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.700652559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.685881852 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.705989352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.658997104 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.691282326 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.633234162 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.690870781 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.6844846 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.633881347 seconds)
  done (took 41.859786334 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.1216774 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.698185933 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.778119622 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.676474479 seconds)
  done (took 8.76453422 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.736405524 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.738151361 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.755274602 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.791537477 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.838544971 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.750635898 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.659508255 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.65507256 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.642231007 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.738845085 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.811011538 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.737128988 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.952797859 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.633712811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.952380035 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.633834784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.635438754 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.739290832 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.788079616 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.817009348 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.635594049 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.73818765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.741158744 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.738518481 seconds)
  done (took 43.351013852 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.642941916 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.652743082 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.635890634 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.636414887 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.636749808 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.638215312 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.649194362 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.637791755 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.642957552 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.635926072 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.638055275 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.637892454 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.650731775 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.636783313 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.638677662 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.643511609 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.639002619 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.644027241 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.645197334 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.638578703 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.637325289 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.643430401 seconds)
  done (took 37.593786304 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.622472102 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.621710698 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.973738141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.878264633 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.622205594 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.625529583 seconds)
  done (took 15.838603171 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.709598558 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.858481011 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.629736124 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.042187137 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.127003248 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.629713718 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.629746609 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.900453791 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.283257458 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.291374692 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.680317121 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.706015129 seconds)
  done (took 23.982522923 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714837841 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633754291 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.643642641 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674629054 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632869259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.634134975 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652200836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15523276 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.639548117 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911948989 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633152897 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736976286 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.883179234 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640146351 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.638238418 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.608867624 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867034408 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211165844 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636043381 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645104182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665811104 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640372442 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.644974508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871527169 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635334185 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63439201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.896959456 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633248614 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965581255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943587616 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94353047 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641748779 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910546831 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114142075 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.742107583 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868939365 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633846882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636014503 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.633688262 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.635521923 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64004744 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637685758 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938593099 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64057717 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.635490434 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648104954 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161876071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.644608272 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.635644875 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.63645193 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943001072 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722648288 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.640870501 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.636880844 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704915691 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638512235 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.642575373 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758475374 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275698372 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637935725 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65215124 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.639629567 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.628691536 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638151104 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350920803 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.645547917 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.644088399 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644064056 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637241172 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63718306 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661757259 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637121103 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.658651084 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637944661 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525851187 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642158954 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638647183 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274593732 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640140485 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.642199576 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866920943 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638888569 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63728073 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.63885116 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638816111 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.551287227 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650115508 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.6134609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671385868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161380719 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875735286 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661513067 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668725764 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863902746 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.615111768 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640512421 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.63922129 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641237272 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661551322 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16461431 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639761226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.647525159 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890104108 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.852754578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646289221 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.626519555 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170457284 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646228177 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.669288827 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.646191022 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88093179 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.350165917 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957054068 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658000153 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67723542 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.641292162 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.620779695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645540008 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.651430355 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641431386 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950492823 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.617918439 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646175493 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714723548 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644472001 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.642593937 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640397608 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66167167 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642863517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.862291707 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654662167 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947937626 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.645844969 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643396101 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.643075994 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663331588 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.64344512 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866569076 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648732406 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92135962 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64509295 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644334565 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644031497 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.863579816 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.644447561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.649965731 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984217246 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655671317 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65356743 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951097195 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680741805 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756878484 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677051651 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.655534787 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897170549 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.650379887 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.651138981 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644653325 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.664839457 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64982082 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.653907406 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647384484 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377954115 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62555626 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648870996 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644658205 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.660625174 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719041044 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653162552 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881350922 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.661429765 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656845235 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.652967666 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.644722396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869319396 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953004844 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.659724859 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820232994 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.170701125 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357349321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664404548 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.645634411 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.64507956 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.645497341 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645515134 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645958091 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649817735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882731883 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959134355 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65580099 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344907084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650552569 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.664511189 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.655035531 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952634261 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.658217847 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64728228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.649318905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660763009 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659316021 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958047165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872746415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.664074034 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.649275243 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.167706623 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656957543 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646984945 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.647595503 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673100875 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647356397 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279110273 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989735889 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648540137 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955913181 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.667832942 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.667500904 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.649209407 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649226795 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660961707 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.672216385 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65736201 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.886902995 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650635219 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650722588 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287275966 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56383101 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290385438 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65141669 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.660084155 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.652397232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179918042 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648841823 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649840299 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926528357 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177775123 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649995153 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178080538 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.650510159 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.533362432 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956448642 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881326506 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671931864 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.651388403 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95979598 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867469046 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679197649 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.650220271 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656160026 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.627787161 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251834161 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660315672 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831867584 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179632798 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656516808 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654739586 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.650211456 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.653785544 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112723115 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.652127951 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652082812 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661569169 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657505728 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257366334 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657780713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651751504 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375803889 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.662552252 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.186698223 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654066231 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892325483 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959344803 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.947219183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.655942923 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.669342846 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.900296698 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963433287 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657606568 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658816951 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.302723754 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.517191145 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.663549808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655331331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.637108976 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670810545 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989592218 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.669025509 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.661508428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659831131 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655033224 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655435007 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.655976425 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661759192 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624862321 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239287592 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.667174902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656879163 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674125085 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65956194 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905362085 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.672523017 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370907861 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887415882 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654720135 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689270408 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.66177021 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666884899 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.632992275 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655719107 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655734408 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720614793 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879649138 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.674150015 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.632829502 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.698532681 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872267283 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656653516 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660774939 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905179562 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.657117781 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.657124298 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596471533 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693812886 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663661074 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660063123 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650720682 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689720625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732389156 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897280359 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.964388454 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965153804 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122944562 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666280678 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659724258 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.674166207 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74003932 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657324707 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.66487173 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.659479691 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375817196 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560773929 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384374539 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972120795 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658935063 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668196849 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65935622 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901113916 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658884832 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936328032 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65905767 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.653872807 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681770324 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670620908 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664006117 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875568432 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93518628 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659960764 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658698863 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683869784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.660411671 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972347638 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.874029275 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245916083 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299286564 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663108823 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.661180135 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198009263 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93729281 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661335439 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662697651 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662969954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.6869205 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.66480391 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.671140994 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679006629 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887777358 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967301057 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151839818 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968361462 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.69162585 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.534584764 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665683651 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911114793 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494475358 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903191062 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369928158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494238874 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921197075 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736928137 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904037879 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.664414074 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901059105 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.666492745 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662929975 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664318278 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664037029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.663677961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971077877 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367130354 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918293921 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.668936387 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.665212003 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694495522 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.904840572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887585239 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.575305085 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88582208 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97610688 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.672853252 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.664872655 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374751762 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975175107 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665321327 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.671470792 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913236845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66539694 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701454903 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.538188431 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.665105929 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305463904 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.879605205 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686985719 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665107495 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487340245 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38877529 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.679355062 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248665551 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668422826 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676847785 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945362355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.673736278 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666913413 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960280005 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.671610515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682388582 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912624158 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.378504861 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.559397531 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.679345546 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669185122 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.668694036 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668277586 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687219313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671363116 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668005682 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.128271672 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667941122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669040296 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682315808 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.67365248 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674979134 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.670208382 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671720115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.676650032 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.648195148 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.657183035 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.678875584 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7905318 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287740358 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671004446 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.301400562 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.007169216 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91860003 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670245582 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.648379108 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.675070991 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670182477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667828818 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670047096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668605046 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30946269 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.672247102 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.981015236 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678006174 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.883909672 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884306717 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.680861175 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91490193 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677623578 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69454925 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.645350969 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671489968 seconds)
  done (took 1119.58752289 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.662081375 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.703260563 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.67593388 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.685312479 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.673428278 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.710974191 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.708320725 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.703944306 seconds)
  done (took 23.050441583 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.660875544 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.670551162 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.677163629 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.67110459 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.669958039 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.206995199 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.676025198 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.67190885 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.689422083 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.68348882 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.677464913 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.375774596 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.673844695 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.679119663 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.684613671 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.674224616 seconds)
  done (took 37.575725913 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.759748559 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.836919676 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.024743751 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.727666423 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.680280145 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.664095184 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.0247276 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.697490298 seconds)
  done (took 29.945545726 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.678210939 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.679496611 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.67999133 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.679929848 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.679595163 seconds)
  done (took 9.927247727 seconds)
done (took 1404.924484751 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.680576765 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.679401441 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.679431161 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.681146212 seconds)
  done (took 8.251003433 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.649936981 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.651229276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.649403247 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.663532367 seconds)
  done (took 11.144610394 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.097990996 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.325468797 seconds)
  done (took 5.953430926 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.676451429 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.439051193 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.434034577 seconds)
  done (took 9.081125295 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.992181142 seconds)
  done (took 3.524324421 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.079007951 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.174916357 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.666363172 seconds)
  done (took 8.452715529 seconds)
done (took 47.937100906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.666282432 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.433868597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.823624675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.666424388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.866953229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.823098724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.974097981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.679241151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.679634058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.682999583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.667637187 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.871888163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.962335243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.435454696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.96246043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.438303904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.830400559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.667006195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.677733331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.666082772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.975773541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.680748505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.667078398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.667787451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.830709256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.813372468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.668502684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.438208932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.670224159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.677059358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.812784581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.676358753 seconds)
  done (took 92.586622436 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.667656602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.674258986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.668804734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.667986007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.686998034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.668813242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.689452314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.668568916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.66968256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.692714603 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.668825159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.669924979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.669548086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.683477752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.671513953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.670500876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.697962916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.679988057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.680702229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.670088663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.671766638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.671461899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.676967397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.681414456 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.669353445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.670867586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.670067762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.670197997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.67147927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.689857037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.670426767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.672152267 seconds)
  done (took 87.139054853 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.688391685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.670480779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.670453954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675684641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.669236781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.674454147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.671880043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672197657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.681082106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675240958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.671929179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.670362275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.673216635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.671946376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.672377892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.672589966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.671969846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.670347602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.681288117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.670928936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.67101138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.672808026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.670459417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.671699392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.671596827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.671212796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.709206321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.671659688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.671222307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.671560173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.672867806 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.672362518 seconds)
  done (took 87.110866064 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.912509688 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.688743892 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.691251008 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.681188811 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.690735426 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.687770296 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.683337335 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.917712803 seconds)
  done (took 17.48943004 seconds)
done (took 285.858441716 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.698992934 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.682918544 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.711586161 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.683963417 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.700847568 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.713555681 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.911436132 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.71263156 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.900093364 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.684410709 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.700718637 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.68678856 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.61486703 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.831292725 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.690979055 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.684695708 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.680404993 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.688452443 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.686440574 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.932935817 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.712906723 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.678517675 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.684773196 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.687207018 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.659899192 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.756414374 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.759575883 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.847054311 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.8119237 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.756539046 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.678803615 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.686217503 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.725074951 seconds)
  done (took 76.581490709 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.683580673 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.691904544 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.692419524 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.693269215 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.691207684 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.69205867 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.683198649 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.701130877 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.692434334 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.693486994 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.690705606 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.694252211 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.69516077 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.692830465 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.69225723 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.674568251 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.684566772 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.692665379 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.684888502 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.673830576 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.693469599 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.693925127 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.694665894 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.694115564 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.692986657 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.695362585 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.694361669 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.694209407 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.694863093 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.693788805 seconds)
  done (took 52.27249135 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.693897276 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.681694001 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.69790743 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.693114666 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.687123725 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.69123581 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.031930143 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.696443984 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.690134357 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.690804278 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.6967915 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.697232901 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.741554615 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.681172881 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.691786516 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.694829792 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.69579187 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.687973189 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.6938167 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.704641332 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.037351442 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.697738823 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.032965567 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.704853239 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.691806674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.690079675 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.692690691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.680309176 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.71558785 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.695754238 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.646020414 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.029028237 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.68119627 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.683347418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.648027227 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.70178825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.698893215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.683201832 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.690968364 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.689975059 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.031697492 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.691193398 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.682376917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.708186199 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.692232179 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.698748147 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.688597284 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.682379377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.002205917 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.696762454 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.692675134 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.697203686 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.701653196 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.693882763 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.981375767 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.694350253 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.691474638 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.682942318 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.697922463 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.033221098 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.700121631 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.69179557 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.696119107 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.693115229 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.690994355 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.693288964 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.705817798 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.693547434 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.683732993 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.69543581 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.685577011 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.693104819 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.702392829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.700297155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.690871397 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.685884324 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.699972634 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.685333856 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.699982075 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.042305298 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.70058931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.690332012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.054719919 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.701445022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.70398152 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.703295051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.701943005 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.766371792 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.042693376 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.645711619 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.706472943 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.689031333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.051410467 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.705727906 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.694127414 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.685967379 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.703711624 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.70192108 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.68693174 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.712067012 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.694880243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.707378104 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.687779249 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.698867735 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.051664587 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.705574992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.699150295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.700157932 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.768058286 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.703798014 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.70724349 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.699938327 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.059770612 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.703437996 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.703017448 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.687169081 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.692199752 seconds)
  done (took 242.668337607 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.703344032 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.690770199 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.702856626 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.689903292 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.688134927 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.698625201 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.689454592 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.689524579 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.693976822 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.69213129 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.692071209 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.699702012 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.697911359 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.69215718 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.701445624 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.691049983 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.691675878 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.695224482 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.691362918 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.692545532 seconds)
  done (took 51.433424774 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.705847338 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.38868417 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.35251684 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.710069879 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.706720852 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.699008967 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.764764128 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.708868922 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.70588111 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.051682985 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.906520471 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.709499942 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.706889791 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.708290792 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.352308239 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.711627981 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.05293585 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.360169613 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.707275389 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.38146659 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.71083471 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.7074735 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.697521235 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.362261519 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.061579803 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.051552575 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.770205545 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.381422013 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.712523005 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.709584723 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.387292664 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.711639179 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.699819326 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.372421409 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.711613219 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.72348915 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.707686414 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.768628231 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.771079955 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.057547311 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.387264686 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.06240713 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.725406749 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.909333025 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.7113472 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.687779886 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.395823427 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.714359549 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.688148493 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.71260275 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.716903899 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.369201845 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.707348734 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.370343368 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.714240464 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.710065452 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.396749848 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.373518719 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.362607153 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.911993469 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.702417348 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.054433035 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.713767135 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.409691771 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.717291856 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.710386596 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.710408773 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.910168842 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.398969454 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.060047179 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.073271359 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.068397655 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.7156532 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.779427494 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.711117356 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.060426967 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.778451046 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186725836 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.062568684 seconds)
  done (took 154.474286054 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.009391477 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.813058754 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.140397536 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.33025541 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.261541608 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.85669272 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.832199042 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.970194628 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.723072605 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.816767376 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.467435992 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.809800337 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.510284188 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.782031121 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.822115859 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.84009867 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.176782555 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.708270631 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.428969055 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.442461849 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.708604485 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.81702853 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.52985913 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.115978092 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.707808908 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.501457916 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.719438504 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.282146124 seconds)
  done (took 63.68178436 seconds)
done (took 642.649301664 seconds)
SAVING RESULT...
DONE!
