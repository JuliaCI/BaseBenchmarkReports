cset: moving following pidspec: 8608
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.759537123 seconds)
loading group "shootout"... done (took 1.187584812 seconds)
loading group "string"... done (took 0.441457795 seconds)
loading group "linalg"... done (took 8.217222787 seconds)
loading group "parallel"... done (took 0.168943596 seconds)
loading group "find"... done (took 1.387957126 seconds)
loading group "tuple"... done (took 1.98028757 seconds)
loading group "union"... done (took 13.211619937 seconds)
loading group "dates"... done (took 1.434444968 seconds)
loading group "micro"... done (took 0.214169015 seconds)
loading group "simd"... done (took 4.6622113 seconds)
loading group "io"... done (took 1.05778881 seconds)
loading group "random"... done (took 9.317889225 seconds)
loading group "problem"... done (took 1.509603361 seconds)
loading group "array"... done (took 20.607442912 seconds)
loading group "misc"... done (took 1.552489903 seconds)
loading group "scalar"... done (took 41.577449634 seconds)
loading group "sort"... done (took 3.360100566 seconds)
loading group "sparse"... done (took 12.473879943 seconds)
loading group "collection"... done (took 18.034714919 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519486827 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120967931 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126474959 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119215852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211000572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119438838 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128041086 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084576928 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86714723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.135316969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114489875 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430561513 seconds)
done (took 5.351168156 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174354724 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090403531 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081527427 seconds)
  done (took 1.307273543 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065966089 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134292925 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065743997 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066758211 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066508143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065880758 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066423383 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066299397 seconds)
  done (took 1.666677945 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070641937 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066153701 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064462327 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067345485 seconds)
  done (took 1.405860786 seconds)
done (took 5.777704732 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239507506 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099258557 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286646274 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.443687111 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.606777845 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094037161 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074640683 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070532143 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130460224 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314683732 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102633707 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.180042032 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088609163 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.167513851 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.018044175 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120116105 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085967226 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121959826 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094105611 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130216272 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.388853249 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076105502 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074164731 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069234309 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06786699 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.654045618 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660216296 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12307131 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08456141 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160074072 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116078419 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.63924198 seconds)
  done (took 10.753025962 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090728639 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087398029 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067568919 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12292122 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091131452 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068854857 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074207008 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067550524 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08888794 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124232661 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089813543 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09796291 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066801255 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06924264 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074410307 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197042449 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078438484 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07994431 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06643497 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080891893 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105364064 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076747395 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076418857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076316069 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129394861 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169606527 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095639343 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100333198 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065009531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080033598 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114845547 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125672347 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066760411 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065143284 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119052647 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096338729 seconds)
  done (took 4.53450945 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.979752368 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093930263 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100538829 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.631259004 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065548722 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150477505 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242094336 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073463798 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.347944753 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.150685959 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141933546 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148093132 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117624885 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069707702 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.25710584 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119568924 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.539990951 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068904806 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067533502 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066333631 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068459322 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067899899 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063937744 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08380095 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069924073 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096307616 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088481053 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.192430075 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.053802663 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070252162 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.288799057 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064610545 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083899809 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.353306234 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068569028 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065669036 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08152577 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.448132176 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063286501 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12210826 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064658442 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16942945 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118186487 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066129231 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120844064 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07863827 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069692737 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069825919 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068704957 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071679727 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078888077 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101298992 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06911185 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065682864 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172799144 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065508542 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066579136 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067087775 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150216665 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065791987 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14243572 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064911094 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070036392 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.10276662 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069338153 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087763962 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095829455 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.336091221 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.050825397 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066762426 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.984727398 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07713938 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066775876 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070854298 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067010671 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068368247 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067974352 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072699296 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071076505 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069991135 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109433344 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066120656 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068934649 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066449858 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063117859 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072930421 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098295377 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06456423 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.506375871 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096330926 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065286655 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074328518 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106033151 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065870738 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070307294 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067670577 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067615691 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066546322 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067314775 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070173097 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097293802 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070795616 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112538652 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.143460551 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068360966 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066230729 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.074893494 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070144311 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070468779 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06763273 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069861965 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068999476 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065217128 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107519222 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066877704 seconds)
  done (took 21.93677635 seconds)
done (took 39.341352657 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24955016 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080440554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078938017 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07878225 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080680278 seconds)
  done (took 1.80130025 seconds)
done (took 3.023032195 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109180271 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06500935 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101341909 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100988917 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064239235 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064416079 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099032441 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064405972 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099563308 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100314529 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102417913 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101325592 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064491975 seconds)
  done (took 2.363448074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069814075 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080350881 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082045208 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062570341 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072105401 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081897298 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061930472 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081146814 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087440877 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082311544 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08206952 seconds)
  done (took 2.056737946 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070782366 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080884125 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083122307 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062537297 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073875048 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08202458 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062031328 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081641922 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085109007 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082390679 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081948124 seconds)
  done (took 2.050700142 seconds)
done (took 7.679591251 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064983674 seconds)
  done (took 1.254301464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.513483635 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.167822903 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066646919 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083918615 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193037538 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09175304 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.197141993 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.07161813 seconds)
  done (took 7.746944381 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101013786 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069854836 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067454116 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069525132 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068808741 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068400846 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068199579 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067983114 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068677159 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067433872 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067657853 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070521229 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069567209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067816341 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068657371 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068290447 seconds)
  done (took 2.420718529 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098446218 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098197909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072648904 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072770189 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07170515 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070933404 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073422675 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072419001 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069444794 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070958258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07242878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071715939 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071302581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062351805 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072372218 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073249127 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069603267 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072265744 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073234925 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074256266 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072612365 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062197327 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070876787 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071952166 seconds)
  done (took 3.078106313 seconds)
done (took 15.706357434 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.177373305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073815401 seconds)
  done (took 1.4500991 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066587569 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067302121 seconds)
  done (took 1.346967845 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071642847 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059507143 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078137023 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070142195 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061791623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061193856 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076420445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06157777 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061158232 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061776375 seconds)
  done (took 1.878472233 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062199641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067809184 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067036747 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068600449 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066921335 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062617555 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064703678 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062734173 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069006277 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061679734 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065994882 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081540026 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064892989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.0827781 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064938328 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065570529 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067272961 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064834419 seconds)
  done (took 2.432357659 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060249254 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060928552 seconds)
  done (took 1.345845771 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063519152 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060898595 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063688831 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063665081 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06190112 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061305973 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061802722 seconds)
  done (took 1.654085659 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410468443 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12181225 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339065297 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068807559 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07645429 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251039699 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063888563 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068325426 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068690339 seconds)
  done (took 2.729276931 seconds)
done (took 14.064862616 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080717501 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.177768012 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089090178 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413366444 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091766667 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067622871 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112711999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.167111703 seconds)
done (took 2.440878173 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226820796 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.320302244 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.896181947 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.068962999 seconds)
  done (took 3.510112378 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328438992 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079139746 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078866961 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06840527 seconds)
  done (took 1.789249772 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064577932 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070728363 seconds)
  done (took 1.363984217 seconds)
done (took 8.12981999 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063178618 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062812123 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064103347 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092853441 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063762072 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064174825 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064284677 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063609365 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063693585 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063458229 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.063921966 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063587555 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063535306 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063672632 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063964604 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06436794 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063801899 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064561324 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06394607 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064247732 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063737191 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063761065 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064058251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064116808 seconds)
  done (took 2.821203377 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078279416 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064642456 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066815464 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067113368 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067404458 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067350568 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066764522 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065703223 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066654327 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065087074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067754247 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067200506 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06524469 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067281765 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065560381 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067461688 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067633383 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065783855 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065607092 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067530356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066475515 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06541924 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066948366 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066992989 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067026733 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0662246 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063930012 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064303616 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066890794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067048526 seconds)
  done (took 3.247236575 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063756681 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059401248 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059868417 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070017268 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060353515 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061504948 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060829624 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060032305 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060748123 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061659116 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061032031 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060092655 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061065636 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060059626 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060426401 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06125513 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064872287 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079069352 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060540909 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060199007 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064400291 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059910019 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060443242 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059890267 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060854023 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060589555 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060377638 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060621484 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060147758 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060551766 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060260393 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064632502 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065610858 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.069450258 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07007115 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065102449 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.06045999 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064396389 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061642106 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060414582 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060166773 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06034363 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060589787 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060228005 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070506455 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060249352 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06112006 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060302842 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060442238 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059828129 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059933478 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061770269 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065996901 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061486594 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060044309 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061526005 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060011526 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060944819 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060158883 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060135713 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06015301 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063421245 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061706305 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060986176 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079802025 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061365949 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06977966 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059982878 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060705998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063826473 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061023345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077327238 seconds)
  done (took 5.743792095 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081066431 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08380775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064559232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065513985 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060816653 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060890285 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068028672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060308686 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064918582 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08067311 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060641838 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065688301 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065350296 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064456313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060872077 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065312342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068214372 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061151698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060710565 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064653092 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061062443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067488887 seconds)
  done (took 2.713202928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137729859 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065590714 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105534795 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074491219 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068487162 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074843109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066255003 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065976532 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066405868 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066817177 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066720929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066332187 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068424365 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066911252 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066790739 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066604483 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066072516 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066940286 seconds)
  done (took 2.573150939 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075627325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065854998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087344957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065948436 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06623678 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065790409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069011354 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070201469 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06531442 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065951462 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070106355 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065365988 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066695418 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066078619 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065456608 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066128168 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065580139 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065843095 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069588401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069591636 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069309891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069938723 seconds)
  done (took 2.754551569 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075359098 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064182287 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080017071 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066298656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061323318 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060723988 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065787339 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064890864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066031528 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064488632 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065360108 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06101269 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066669252 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065085581 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066777493 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064971771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065083572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065561615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065297376 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060640586 seconds)
  done (took 2.566714577 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085228052 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062544443 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062175513 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083386733 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063786798 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063343474 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082917525 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063075647 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063791658 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084686062 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063139163 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063693908 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082879568 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082674288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063044738 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082809282 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082650589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083180962 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063785098 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063369732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084893037 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063430843 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082613026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063241831 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063066547 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063120107 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063145457 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082702419 seconds)
  done (took 3.261977972 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063620311 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062619792 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064399836 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064202627 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064387963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064056327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064236767 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064515193 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063951498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064538522 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063935596 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064264509 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063638956 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063560071 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063396718 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064090548 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063908894 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064140665 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064284741 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06396058 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063678095 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063737027 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063588113 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063701811 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064042675 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064052441 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064270562 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064079667 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063658052 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064320282 seconds)
  done (took 3.173935088 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071809656 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070552911 seconds)
  done (took 1.397533962 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06101014 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076125129 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059330213 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072139411 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068841033 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06476736 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069058681 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068924766 seconds)
  done (took 1.790622278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065940351 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088287846 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062187793 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062428734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065259284 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121239734 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072935157 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.07264282 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073783402 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064028234 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062785398 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074152898 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064213731 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075265656 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063329557 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071151817 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069347229 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074658854 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075382103 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060347939 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073959276 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062854397 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061092154 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062723364 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061695194 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068850372 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07727187 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074542051 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070066426 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059951743 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080231152 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060872006 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061718397 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070471638 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06518477 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061155888 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098459288 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061959841 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065604576 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060944235 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072529765 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081230056 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074760178 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078647601 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063102956 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062938201 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060393661 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062749224 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064254557 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070412285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061000246 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068479662 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060187175 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062215267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071600614 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061260413 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06587016 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070224005 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074846994 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071261545 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06985766 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076120835 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069492126 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06826128 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061851877 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080645487 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062705916 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073957504 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075902411 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061722373 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074112717 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060327884 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059807665 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060501244 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093910477 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062983559 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062313566 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060923846 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061439988 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062997413 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070655421 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065881554 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068229387 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064131826 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07657299 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070317848 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.061183836 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067281392 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078806258 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064418741 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061392287 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077484566 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064365501 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060591896 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078408216 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070599061 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062297177 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061424537 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064357825 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073764939 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062034181 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059617545 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069466873 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062317072 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063045835 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065059808 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069099774 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060703949 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072036597 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064418906 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060920281 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058718972 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064842605 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.062077928 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059495381 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07022672 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060610317 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074787575 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067073733 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.075198164 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07551201 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070922188 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076145531 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060433484 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059235651 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077586705 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068857091 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061460627 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0775007 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059888427 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069999198 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.191315007 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062628273 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071191366 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059989576 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064354397 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062135327 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066881413 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062972313 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064156463 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066106178 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070209756 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073543584 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062814046 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070233251 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06192207 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076691954 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070643546 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066207234 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065702952 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061966311 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072633144 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068298801 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070628292 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060840365 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06193168 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061388449 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071468741 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07099352 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062816268 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069152831 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065804816 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061762664 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061542512 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062696453 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064944516 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064366496 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062660669 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069013046 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070585418 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075376404 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068320773 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069909356 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060909434 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06093886 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065356199 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060464774 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065905745 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070025342 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076412557 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072715557 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081537347 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061150279 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070466293 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063315667 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077946423 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074851044 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061979158 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065646081 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059905059 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062691227 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070516031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072469272 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075332124 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076046187 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065891448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065754963 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060985092 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076570221 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061309396 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069355338 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070351694 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065615605 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061117386 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062080176 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070249018 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065477828 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061426628 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.077092654 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067215038 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060667805 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075527259 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061659621 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071980763 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061016097 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064940264 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066516373 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062889153 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07056616 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076450762 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060169275 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061939081 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076854948 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06388695 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063209572 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069855254 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076552803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066134441 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069362129 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07224915 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07143772 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066335478 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071264132 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06195268 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070645186 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064010087 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07249156 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.061362927 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078683923 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060294203 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075893197 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061346525 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.072155131 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061299817 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069163646 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060495315 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075801176 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061021927 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060255026 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071509735 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058551585 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070142363 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060430402 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065684144 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067247368 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070844505 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062369283 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069705835 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061802688 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068772978 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064487516 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067072345 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067409292 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063109289 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058336402 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068091739 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070011155 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068237399 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.197903912 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062651129 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062052697 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0708336 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062195362 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06259896 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068821073 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066149696 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066473511 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062054872 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062108533 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062479589 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07055121 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071974816 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07973043 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069875568 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069446027 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070824954 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060956377 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076905603 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061578672 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069279579 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060499753 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067252165 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070632334 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.06206573 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080269542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063313593 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0692268 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074204662 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070753509 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065244449 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079134691 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064444263 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069818878 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069708342 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065988013 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067866528 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063035482 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069435981 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070917718 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071951069 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06241488 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069511658 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070593842 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062923712 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068593109 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063157163 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069211564 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063044274 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060141816 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065827892 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072932533 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066112786 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066322234 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061090025 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060025438 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061242576 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067615556 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066362601 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06944003 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076510918 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060385441 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062182451 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060996571 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065259914 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078755559 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071180224 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068739476 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065982512 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063084907 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062556271 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062782135 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061407352 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064439478 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060513885 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060633397 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071725798 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063440206 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065685474 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061173675 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062092164 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07120727 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06587281 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061915608 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068363558 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061251417 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066264562 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060571447 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063044816 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065949539 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060740139 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065351254 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071420272 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077777249 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067953916 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069898688 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062301813 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069106562 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076167938 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068543071 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062366336 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070118349 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060344685 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079465646 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070335766 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069621739 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07091977 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062148158 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077795096 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065553888 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070687186 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076134606 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061938773 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066975284 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060534535 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076339106 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065382245 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060535722 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068471132 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068368608 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066360005 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072108933 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061108618 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068624809 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065520085 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064251766 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061641319 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061384972 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069417457 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076183706 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061049106 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064501553 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068256068 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068718954 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069263771 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.213234777 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069831097 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062500703 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063191181 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064654261 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062101556 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072848621 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062032111 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066562002 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065997881 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061613867 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068012003 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078439932 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071336878 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071030815 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061245345 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061225301 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.079313153 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065018765 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065062578 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07067023 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070741359 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074103498 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071433876 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077848708 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062361551 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067047931 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074165798 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062485522 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061143855 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065382658 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062998911 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071116023 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0713809 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068806928 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063558326 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067706592 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074426726 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062553485 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065189503 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06468818 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06076495 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070375011 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068468871 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06855075 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061353358 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060720403 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063272494 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06937433 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067776645 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06921876 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060668787 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067335235 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074890322 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068958123 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06417533 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060708358 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06406451 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069564897 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065211289 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060867193 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06565922 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06514128 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067890583 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070600263 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065729728 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060974684 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078045877 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069273688 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070229851 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063090132 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06334121 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062094795 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060945177 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072453662 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061069896 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062933283 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066642427 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063309367 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078970865 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069930368 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077092997 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062452956 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065983118 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061302187 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071523799 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066389344 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061539008 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071774502 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060880607 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076645463 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073462008 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067071393 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061283189 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06672857 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069468342 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078364842 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071024728 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07025298 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06484352 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071033438 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.0631974 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072299952 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061155898 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06086997 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071294299 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069889747 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073659701 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06099806 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071375293 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063541241 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070042029 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069281592 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062743403 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062720246 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062729308 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0703007 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065606813 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07025575 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065841022 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077151201 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061738151 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071571679 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06962906 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071588487 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07440047 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072938477 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068244511 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061239702 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067788689 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068184375 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061683996 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065347516 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063433949 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080274665 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062049905 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.199533636 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075338038 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067101207 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062663509 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068718632 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066550494 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072390357 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.065468956 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.07175437 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065310802 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062920746 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066453531 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065823723 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060696281 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061331773 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061222426 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071402388 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066467827 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061627353 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080268447 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063125769 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069512311 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071965234 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067839476 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062804909 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059765161 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062818111 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074139663 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077153867 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065342479 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070557319 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063671779 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070891052 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061420346 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071058079 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069544995 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070440054 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078316943 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062419859 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076177506 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076399022 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066231361 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071106115 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070691872 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063177782 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083282519 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069773511 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062705764 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071961989 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063588748 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060820707 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060589431 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062698796 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072896809 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060691095 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063614331 seconds)
  done (took 41.999822798 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096817854 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06112613 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060278288 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06027544 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071106282 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062237145 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061335117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061814781 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062067955 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063427237 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060845298 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061010048 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071987655 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074047575 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071311942 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064277084 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060890586 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062070547 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061320091 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061764841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070667964 seconds)
  done (took 2.741517847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06617349 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07486793 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070378396 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075447202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068195699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063591797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070625151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063558753 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072799151 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070698771 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072805082 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065124372 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070621984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070467424 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070620472 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065136774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07210199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069304401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065148067 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072020146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065298316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071978918 seconds)
  done (took 2.868213225 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061968487 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060299032 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068719006 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060702011 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060599191 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064206641 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060547505 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065001687 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065204563 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065048464 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069686758 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061298491 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060254033 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066419015 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060208229 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061220652 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102497001 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061944151 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061856385 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060178629 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063773648 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069916667 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060925067 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060738851 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066870092 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063683588 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060575234 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063161198 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061152213 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065123405 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061436852 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060166257 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069482728 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069485893 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065476533 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065637109 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062112254 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061720555 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060532698 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06068375 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069430798 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062256661 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060750144 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062291431 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070146751 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061119322 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060493673 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070265174 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060718705 seconds)
  done (took 4.494462139 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069763086 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112540709 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06725694 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093759587 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073916258 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067400924 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067056745 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094241397 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062020555 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062528337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074292621 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074821049 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063551634 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064935409 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066561752 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063458619 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064551883 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063459949 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065967936 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062687918 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066002883 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067915173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071928223 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072266585 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063987934 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06276993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063164332 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065085414 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07347979 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066778842 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064722595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065144035 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073358437 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066974967 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063048276 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063003573 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074779765 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064547085 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06316452 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061992713 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063326088 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0648102 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067493475 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074411775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063976792 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068390535 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06403718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061815124 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074158632 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063646071 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067432399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075414163 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064641957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063843505 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065057705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073461091 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063488243 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062364468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064089413 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073532412 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06199237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064359857 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073992373 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062464504 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067068907 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074486152 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068184585 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064530804 seconds)
  done (took 6.107819635 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068947302 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094175368 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071695922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072712856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071238507 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071827906 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07167886 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071302595 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071303541 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071892851 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071408107 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109339156 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067924637 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075429804 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071234391 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071644411 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071156525 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070984281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071171993 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071069914 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071440258 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072173831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071265813 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071508443 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073684855 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067741666 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071048503 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07115047 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07165367 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07135112 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073671309 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07050352 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071440157 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072079118 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073448712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071252312 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061476094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071089324 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071063533 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071171294 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06798197 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071553548 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070970445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067325366 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071610715 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070761133 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072117511 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073632838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077754241 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071885305 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071311583 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071728898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071832946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071651348 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071801951 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077355143 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072016033 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072062525 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071638768 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072071781 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071967121 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078092002 seconds)
  done (took 5.881563998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072604463 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066423971 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078076246 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060558539 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061121143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070055708 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060803656 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061140713 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069692215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067579751 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069032512 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070614299 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071729465 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069095635 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07000265 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072054149 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069565126 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069079888 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065676945 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068065218 seconds)
  done (took 2.736627425 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073901432 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077595063 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065316102 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068422523 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065179753 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070599311 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066170893 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069050301 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066541444 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066557674 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07124167 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071393844 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066717984 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069919041 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071364271 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069660586 seconds)
  done (took 2.46953528 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066755591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065953316 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066427523 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060792101 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065789035 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061651225 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06205787 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060382336 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060932311 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075150416 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061617473 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07387734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061523955 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061281693 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061918866 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067390028 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061354441 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061785379 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061794429 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066350582 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068635775 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063028132 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065774812 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061010286 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066311408 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06828129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063536787 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06526576 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061408234 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062025994 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067344996 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068477413 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06128077 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062570099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060909183 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062065607 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061588727 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06229997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067562541 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061731356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060309587 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066772797 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062194027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062530809 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061103951 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062524931 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06096036 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067385573 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062110425 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067196902 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061912206 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063790286 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0622022 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06850643 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064066372 seconds)
  done (took 4.882580938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0763126 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065063242 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059671993 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060974034 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066609335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066407876 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066346671 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066682057 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066780929 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060999645 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066892113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06549306 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066382541 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066232244 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066501243 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06584182 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060743636 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066318606 seconds)
  done (took 2.555222263 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071048327 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065034067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070231508 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065970341 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065938448 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06571093 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061235149 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060829197 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060978239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069445166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065602225 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06519178 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060883193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065066852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06558313 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065514723 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065071116 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060993102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065424088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060921632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065399401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060917029 seconds)
  done (took 2.791811357 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086593548 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083366274 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.12531554 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07962732 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088740332 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072144304 seconds)
  done (took 1.905017989 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09162061 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101091839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06601694 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066095551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074308642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068599894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068911734 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068767734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074165119 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072537951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068800351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073960764 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074214162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071026691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074517095 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076507817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069073599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069129834 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065771976 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076600598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068776883 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07392181 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068948164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06851068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068970845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070649279 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076395561 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072577544 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068909704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074240487 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076494067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06908142 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074551395 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074725282 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065912413 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074115694 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068926667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076294838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074339046 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070810194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065645218 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074336558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073966351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07053677 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077036653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069692111 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070619501 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068766562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069446263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078852168 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074082059 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070862718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074681822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077211357 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076115141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076953867 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071303151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07069448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074384108 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072995341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070794385 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074408107 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070903995 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073203325 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076491177 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070711767 seconds)
  done (took 6.179404635 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098022367 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065150882 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068059086 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072896849 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070779528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069064601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068974335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069142888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068794377 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06632427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104091795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069190962 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070298027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070796292 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069107788 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069446132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069178737 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07014369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064869883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076599024 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067661948 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069399381 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06930807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068746331 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070939352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075907358 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068565939 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06843454 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068658795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069078813 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070141638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068847131 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070743973 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06628417 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07017241 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069217818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068895144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070799253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068525108 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074416495 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070408267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076581055 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069110319 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068590238 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072668262 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068803043 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068666193 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068569479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068632736 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066106642 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072873558 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072665584 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071613634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068995387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068441541 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067117759 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067784587 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067625175 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067490044 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074674211 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068982587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067709551 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076925436 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067297959 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067562719 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069176074 seconds)
  done (took 6.058479192 seconds)
done (took 126.950653536 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210149952 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184533869 seconds)
  done (took 1.752299246 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0736828 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096304988 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074980177 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135637801 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071191945 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106963993 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102869821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074095006 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070538197 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07242134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072324651 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074965524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137794783 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0709505 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070434708 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073552139 seconds)
  done (took 2.756012688 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105838337 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181100211 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114511021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070108329 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107889667 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076362559 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069795407 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081507885 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073838999 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072129916 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076896966 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07570256 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072425673 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075647586 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073570759 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076845892 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071549983 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076582637 seconds)
  done (took 2.932696259 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096061113 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085295139 seconds)
  done (took 1.567941151 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.151497519 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103518021 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141747407 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.321929663 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131416468 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.124195694 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129826947 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.1224959 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10868004 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119826303 seconds)
  done (took 2.835239547 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103977234 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173805286 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311138055 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120196364 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076699734 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099097583 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123628153 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082484777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08010481 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079912364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078716119 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077176805 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102408668 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076676849 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074887271 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079329367 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10460698 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074566321 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075510863 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07598363 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106227745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070754762 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076554209 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074618399 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078012266 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077790065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072329757 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070948553 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075941472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075860478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078098136 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095738176 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077977396 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098684511 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075380276 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099489581 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075318877 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074443764 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075755226 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074228283 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076843792 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077022972 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079587107 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076854805 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072475438 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074565911 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072086963 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07028798 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07887477 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07136846 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078930338 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077857464 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098151025 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071552418 seconds)
  done (took 6.147498496 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105403739 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104120447 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06856721 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110755192 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103338372 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068497999 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102674102 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101126777 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109118081 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070218319 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069274986 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069686049 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076179952 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079704363 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113130645 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105799961 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069587022 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067883514 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105475017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10501638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067119411 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099255841 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098143057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107319655 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068335942 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070045149 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067800036 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068932701 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073682478 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075056392 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069578066 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075744678 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084259841 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073042257 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066795119 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069059431 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068999606 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075378664 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076365371 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076435564 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075173025 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068072419 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069110768 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069198036 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069592726 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067741226 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074638284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076122709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074681819 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069118408 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068884967 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069029766 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06955545 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07510084 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07488203 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076454903 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075595806 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068404261 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068808775 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070243852 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076547765 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076572876 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07461982 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068354688 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075828883 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068032119 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077708978 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080384862 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068121217 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068981448 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068779541 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06827779 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069061419 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074434678 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074799673 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069113727 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068693484 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068722383 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077084954 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075048596 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068889546 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073765877 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068059176 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068716157 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069039045 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068337102 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074392502 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076227078 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069868743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068496593 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068557106 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068513074 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068308924 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074620309 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074640559 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075001105 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074419588 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069540528 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075121844 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074787899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069492595 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074711314 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06920691 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069233733 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06893704 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074668843 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073611079 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076045532 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067622236 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068080139 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073588684 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076340483 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068039358 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073667077 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075688608 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.208657587 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067751102 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077213842 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068645882 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077913764 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068579359 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077832951 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072541413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07562881 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070078582 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068706251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069066864 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075142419 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069642862 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069931183 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069546467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06911035 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075371353 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079364646 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070494475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076133298 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075771942 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069949612 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075215665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069306099 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076996927 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068998749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068884043 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068663226 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078295106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069489603 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069164963 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068976555 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07791907 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070122909 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07796916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07420899 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068354035 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081248948 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076873723 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073992044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078249662 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070434853 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069331014 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069384974 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069382787 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074346788 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075652725 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070095528 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06884447 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074541291 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077344777 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068885174 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074717614 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074864771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07466941 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069507633 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069328034 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078522678 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077186103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075260394 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075180101 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07599165 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068882177 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074594571 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075126279 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069162386 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080611908 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069079924 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078264405 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075100793 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074546273 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076154619 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077890759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077830955 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077696272 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07703139 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067095625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066920007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073828089 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068192483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068805868 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074989188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069695664 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069340282 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080910088 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06738365 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07514887 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067314319 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076436041 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069321387 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069334957 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079780378 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069387435 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069231912 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07515111 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069779158 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075104514 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077688089 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072581823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06682037 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067463888 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073535628 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073802282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067093588 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06705321 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067471715 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073894603 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073785506 seconds)
  done (took 18.21239701 seconds)
done (took 37.600141157 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219246837 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168664907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.205673276 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116433784 seconds)
  done (took 2.196064272 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.08934247 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097466107 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074901263 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064253058 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078129905 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06566752 seconds)
  done (took 1.89730757 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249664222 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185287368 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172045764 seconds)
  done (took 2.027994146 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212816675 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193635721 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.503482086 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308350906 seconds)
  done (took 2.741454397 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.126116334 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078433258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063097266 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073160917 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.10343391 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132241887 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085963292 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.105293184 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073463424 seconds)
  done (took 2.325100553 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.127435868 seconds)
done (took 12.76340077 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111218518 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111903895 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121550759 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122689168 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.239136223 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077735748 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.235772743 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073772959 seconds)
    (9/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.208072742 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08186919 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.260969764 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074601195 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071755897 seconds)
    (14/309) benchmarking ("sort", Float32, false)...
    done (took 0.137482828 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.250354383 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076363422 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092255615 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090111383 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196078317 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.274812655 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07544288 seconds)
    (22/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.16428262 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072005496 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065325242 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073753612 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.221859031 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075373253 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18850364 seconds)
    (29/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172802651 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144392228 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173993831 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155483099 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091544579 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.142604186 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086458609 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094382565 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067300712 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074829786 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0637051 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072095469 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071802938 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.201946722 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068688577 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067188473 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.184759058 seconds)
    (46/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125652798 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064782728 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074463715 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064556917 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07314029 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076874133 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076668856 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070937748 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070690581 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086310354 seconds)
    (56/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.083696364 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.143072313 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064475073 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091817481 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074276841 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.067080559 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083407192 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151055461 seconds)
    (64/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160029145 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0656828 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075453509 seconds)
    (67/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.173158107 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079949323 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07430839 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065080683 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064689031 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07501362 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.23111584 seconds)
    (74/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077039707 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089038599 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.211409238 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.144076293 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117469691 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083616801 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065801651 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088095275 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180880079 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.204833726 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.228048422 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076008325 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067518671 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065016397 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.341138734 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093654212 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064832909 seconds)
    (91/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.136398236 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076203961 seconds)
    (93/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.252416089 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154504118 seconds)
    (95/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074868633 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156232352 seconds)
    (97/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191618099 seconds)
    (98/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.066558444 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173207531 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.23462325 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080844277 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.202071027 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.145778707 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066014197 seconds)
    (105/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.067326822 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094822341 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.217450848 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065965429 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074051684 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078432069 seconds)
    (111/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.067192659 seconds)
    (112/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.143007527 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064874176 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088225816 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 0.168964106 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124636299 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065724079 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080761032 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066704936 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065616699 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067398701 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073132948 seconds)
    (123/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138707641 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076104723 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074276703 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065168341 seconds)
    (127/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.077432891 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145868675 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067077438 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065915932 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068687536 seconds)
    (132/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.065470551 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132241093 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.23066413 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174202024 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087469192 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075484032 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089769857 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.142119341 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076064457 seconds)
    (141/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.166886347 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073626433 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173487524 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074798088 seconds)
    (145/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066624851 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.082527411 seconds)
    (147/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.08413281 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064295072 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124037987 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073458851 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.141924735 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065117827 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086967318 seconds)
    (154/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.065836456 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159658164 seconds)
    (156/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.08200082 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177509445 seconds)
    (158/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095420558 seconds)
    (159/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228702269 seconds)
    (160/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06665571 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064971169 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064814752 seconds)
    (163/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065893595 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080900089 seconds)
    (165/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065564037 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06524115 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181099308 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066770268 seconds)
    (169/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065160487 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074138491 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131480073 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115121185 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077639534 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150235604 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06607184 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130009195 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076886639 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074758918 seconds)
    (179/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.146659141 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07328153 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 0.137284859 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067034344 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.14405781 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066083597 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089385363 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148730244 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086345519 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06400986 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064573658 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064132701 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119111243 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065886352 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071589217 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064056662 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074669148 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070300498 seconds)
    (197/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.225260015 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068703529 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074308699 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08904054 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160858283 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065105219 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137883476 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161879465 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068385346 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074617598 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067684852 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065208105 seconds)
    (209/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.141143455 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078306278 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.085618613 seconds)
    (212/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066086599 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077278909 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132087086 seconds)
    (215/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067412573 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150060167 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.14234385 seconds)
    (218/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067633176 seconds)
    (219/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06862504 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074147903 seconds)
    (221/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066104294 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066168037 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159233564 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06671996 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065374389 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12991129 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072190874 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158560724 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064943863 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066711197 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06599564 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065666303 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065508842 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066385814 seconds)
    (235/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074199241 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069019382 seconds)
    (237/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.079365908 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067272491 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080741127 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.082187844 seconds)
    (241/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066841353 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075154512 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068666899 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073543712 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065069356 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091615565 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065379982 seconds)
    (248/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073675568 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065568249 seconds)
    (250/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066949449 seconds)
    (251/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.074371214 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092612724 seconds)
    (253/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070519037 seconds)
    (254/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066751126 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.0664622 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147973705 seconds)
    (257/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.065279299 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067496596 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087298756 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.152742741 seconds)
    (261/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068354718 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148732529 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074134571 seconds)
    (264/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162014772 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073554462 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066830096 seconds)
    (267/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07048765 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066953987 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076860739 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11654893 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064956018 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065509227 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066473586 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065288605 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068640426 seconds)
    (276/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.065885674 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.145992301 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18743394 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066808808 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065427353 seconds)
    (281/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067251793 seconds)
    (282/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068039245 seconds)
    (283/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066614024 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073030606 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066545416 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066175347 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077591012 seconds)
    (288/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.07350467 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065040199 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072782118 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068084415 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066874228 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066127601 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066925274 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066896575 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06555542 seconds)
    (297/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064568926 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06441806 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072669606 seconds)
    (300/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082005736 seconds)
    (301/309) benchmarking ("sort", BigInt, false)...
    done (took 0.259827536 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184746369 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066578431 seconds)
    (304/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070964716 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065770809 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.094395278 seconds)
    (307/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.066504686 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066642933 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065289786 seconds)
  done (took 33.307014473 seconds)
done (took 34.747307 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085152631 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088872595 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072600214 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083576364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079828004 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097985769 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072420356 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076774713 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07977723 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078480989 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07901659 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073441152 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075949152 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075901453 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073726972 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089567774 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081511277 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075048571 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075113524 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065607317 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07461679 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066415637 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064950052 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071055557 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076365555 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070857072 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073742204 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073426159 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0648702 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064848758 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069028651 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073413576 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064711094 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076022713 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072802365 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072341899 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077851356 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079343893 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065525129 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066985674 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07754161 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066755904 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074891449 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072764851 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071397273 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073846726 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074698091 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078140625 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089191562 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069558252 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075600188 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075435784 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075722993 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070990821 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071893433 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074956748 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07295462 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088722902 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075768629 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071629682 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076647026 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075895928 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073427039 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074329605 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074314134 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078037465 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077659442 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073662589 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077895912 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074186341 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065784682 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074742216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07102302 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066280278 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077370406 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080149526 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064959113 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070692346 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074134633 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074966818 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066157967 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071247911 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065010731 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071494067 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070975846 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073147046 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071532959 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073708128 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065287603 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075237547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074211038 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074664455 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065827588 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078311428 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065917481 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072785635 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066526845 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066457908 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065075216 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072342241 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066266411 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071524686 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07468727 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065032511 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071048421 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079366789 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066104298 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073650262 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065829937 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065100733 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075560917 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076517323 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065690599 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072696285 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065147526 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071970074 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065110947 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065965292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066174341 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066498271 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070996797 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066554211 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071326301 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071776152 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07794224 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065948658 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071333577 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070196561 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064911047 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071532808 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064500222 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064567195 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063111781 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077740276 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068668186 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064237473 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070115533 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069053261 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073820133 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063914966 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07389265 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071666239 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070003888 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07223264 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065360064 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076211778 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068403193 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069083936 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.205100931 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065700178 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063897044 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066099612 seconds)
done (took 12.704214594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06562536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.102819576 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071774683 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080656418 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.078256194 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067568861 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07000586 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083288143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069856407 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086181398 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091889386 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087645116 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092789964 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066035536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067348748 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06810376 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065795815 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074050638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.081068426 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089443012 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095626349 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066779459 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075692112 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083462673 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07700968 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082482964 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068081322 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067623355 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069548679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082076371 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089623368 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065198807 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06649969 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077765982 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07788092 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071765551 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065627208 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068888418 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065373201 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064835649 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066924877 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078960209 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068579055 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068412563 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066396739 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065773433 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065467586 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.069772095 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077409504 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068303239 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07223574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076398924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066307971 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065153427 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062931695 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06911816 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065970367 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067212384 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066417306 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067368717 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067183584 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070123346 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067602519 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066060553 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068571831 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066970323 seconds)
  done (took 6.316857372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083081137 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09298691 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081777449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081388192 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066479449 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067698757 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067354769 seconds)
  done (took 2.080491923 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066259657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077171274 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079885468 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079930667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07407506 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085014774 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066711198 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09618919 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064581456 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077622221 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109344159 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081834785 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06835991 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076584268 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065518945 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072269151 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065830505 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074191249 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072602293 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081116998 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069408459 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094484847 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080508805 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067232675 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086635886 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.071081464 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066451796 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067817852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068283389 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068064173 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06818488 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105560142 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07084046 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078904465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068470057 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06665666 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072617704 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069986672 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068080375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073727021 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.06994827 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066763345 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063847776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066433576 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068278973 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069413032 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064177144 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066465657 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06627016 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076641964 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064893457 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06856914 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068028674 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069762861 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071843336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069287437 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074469615 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066606194 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077971976 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075356172 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06693285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073313717 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073990838 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103909921 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074791899 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071819694 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.070613842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071944131 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06789507 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069278128 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068849092 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074195332 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066524291 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068975644 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070558895 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06885609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07091872 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083771564 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084251624 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079802583 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069325237 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068688348 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07057789 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08350208 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071481622 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067944636 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.0706169 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066223881 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071525786 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067696604 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071547252 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067004421 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.07349158 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067891333 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069594467 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073546466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065467134 seconds)
  done (took 8.607986107 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068264633 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067220678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066991735 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066693433 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06621229 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06643874 seconds)
  done (took 1.972437081 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087078026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065822825 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080560739 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067339395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102474753 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071788864 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071990073 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073025608 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078840457 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078322546 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071585761 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075536344 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072175657 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067712971 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071695232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067545443 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07219219 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068880956 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077892068 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068159481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078464665 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067066122 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067010224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076585566 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068170075 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067773938 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068013172 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079931347 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079706585 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075157446 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068957213 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070772828 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075478364 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07705977 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.074080798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075586191 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067256146 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072782818 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069458865 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069895422 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075853486 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068850725 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069268583 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073042481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07511918 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075771345 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072816773 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071254226 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073333111 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072495454 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071823631 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066212666 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069324102 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070938627 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073645001 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072742735 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070773919 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071694915 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06711738 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073909395 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065788563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06807821 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072844914 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068077369 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070258478 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071086285 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073854467 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067301228 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067250856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067577785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073040363 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068339438 seconds)
  done (took 6.747274343 seconds)
done (took 27.249494217 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543769055 seconds)
  done (took 2.061774751 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.569708 seconds)
  done (took 2.125758439 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.657095957 seconds)
  done (took 8.211736315 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.296590799 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321842161 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.736071548 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129904691 seconds)
  done (took 3.073610978 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.750333424 seconds)
  done (took 2.311875214 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2321352 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223819288 seconds)
  done (took 2.029902265 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.340038587 seconds)
  done (took 1.89626538 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132388815 seconds)
  done (took 2.686615203 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.22010362 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156865073 seconds)
  done (took 1.936891503 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489887908 seconds)
  done (took 2.045168367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.166890936 seconds)
  done (took 5.728180003 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229762155 seconds)
  done (took 1.827016927 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235134965 seconds)
  done (took 1.798537815 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.76700642 seconds)
  done (took 3.324467268 seconds)
done (took 42.624339478 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08202857 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084845987 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084121074 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080262033 seconds)
  done (took 1.864923283 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072190696 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068833763 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071730989 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072174504 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069738158 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071036198 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071252293 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068375599 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070009251 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06872267 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067470395 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068704418 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070687232 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067911799 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070586844 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07202947 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068059633 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068254231 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.0708006 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068342908 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071224889 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068466835 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067072843 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068739611 seconds)
  done (took 3.229348552 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076805968 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071356437 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074002867 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070193337 seconds)
  done (took 1.859146109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074377015 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082357313 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083706096 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088336413 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075167011 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074873366 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080515131 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08329104 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066560475 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08620629 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.0687028 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067662403 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067215741 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086194445 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083466943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063411291 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064099664 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075595615 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074470303 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076663971 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067438119 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064317767 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075361527 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074255952 seconds)
  done (took 3.370734834 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077382603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064435859 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075576447 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089815052 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091125836 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066066259 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07874391 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092723481 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123672854 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065335499 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072170635 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066367881 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104366831 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065049364 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078407708 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104276784 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106871551 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068023886 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096423676 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064529061 seconds)
  done (took 3.225798689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074685446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068738169 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069660836 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064633885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075610843 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072190245 seconds)
  done (took 1.999285632 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067923902 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067303475 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066138194 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066098992 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070972821 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066174167 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065206597 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067347383 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068328071 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067761224 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067532288 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066539748 seconds)
  done (took 2.374724693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163283236 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068014261 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069191287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064585337 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069896489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066288383 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081670974 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071300612 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085708713 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067750453 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067941524 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07022801 seconds)
  done (took 2.515855474 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096774212 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099643446 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145821249 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116233003 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094706181 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095110365 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.156929617 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132500944 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113633019 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067825438 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08491745 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097453536 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096787841 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130347268 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109547125 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071318121 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.109087214 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079108903 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11164196 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119177604 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112376779 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119421799 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090733393 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097071688 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10643011 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117842912 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072038296 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071544252 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148663386 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.101498695 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.09379818 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099645584 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109286807 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.069957115 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087368687 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.10812494 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085276902 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116004303 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088154281 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099955616 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081148815 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.129994671 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103655392 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100831921 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129462326 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090427289 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108616883 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104355736 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08056649 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116584886 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096514535 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088803376 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079982567 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.160994941 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089985574 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109898847 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111158538 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.082425534 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087937198 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101662262 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126388515 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.10246367 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110080601 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.253625396 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090403999 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089926879 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131014755 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085877969 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10226881 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130963308 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.093014141 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076690129 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.096922567 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070379851 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.097418053 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106732815 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092797637 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111387743 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07811649 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128514939 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107946356 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073722182 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11806572 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099451176 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155313896 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094117024 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098004472 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089085389 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148053469 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083082146 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078001178 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095833595 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127189754 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092375394 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093655002 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125802285 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094495095 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085545937 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073848499 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087549339 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100628992 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105104189 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099347652 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087007865 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085453891 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094793604 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073503664 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079159531 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09901366 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083722325 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12176306 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107161958 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121053058 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077598958 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103378046 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094993704 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127675168 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118348146 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.084921254 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108897456 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141770384 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.113651012 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086022008 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100809437 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111023585 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105358538 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09411546 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133573809 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113484008 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087160874 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09110718 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.243762618 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.111047386 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153511927 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088711043 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103998521 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138541087 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.115925334 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091983344 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085188061 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096271322 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106706297 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141213697 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096578687 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071950738 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092354695 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130052374 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075192284 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097927424 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090749467 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083315978 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082005195 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069335669 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101561161 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136943003 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11615824 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100359025 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.106276149 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070338215 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100098457 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105617708 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142976184 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117688265 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097453882 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.097075924 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103261353 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079621885 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134037602 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.134664045 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092444536 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091615534 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121468982 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094038434 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102423541 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112238368 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101259231 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098952243 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.13903603 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118747027 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.122660485 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103377742 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122329301 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080675029 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114517 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073358968 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101863107 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075413395 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103736166 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077632459 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108947446 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077028137 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09669261 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067748203 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071908978 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107039372 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.241105998 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086973168 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136373318 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.131970978 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083220277 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103209618 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101490643 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102630109 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.109748232 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.091282299 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09119934 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078665462 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079815677 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099076375 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09398362 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108715212 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079938456 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075940801 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138444842 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104488743 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091257965 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096165444 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.121389171 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089474682 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088873025 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104575539 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136937268 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115488551 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079624962 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089818551 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.069733105 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084404701 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074635642 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106888102 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074392577 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108922005 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067311197 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127277541 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086844308 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100830211 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09616312 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126791554 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089027366 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125921895 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085316271 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106377942 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091992042 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093681165 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107365415 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.093872326 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103044669 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108968806 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091446987 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089250324 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122101628 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105676158 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116024623 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104346729 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132882934 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109841031 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073595843 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102232872 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098275075 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143570865 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097761388 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088178069 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093191193 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10085674 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079209319 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.292001823 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086371953 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087907338 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113479978 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090447314 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09885697 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0778717 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101680381 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09569953 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115208145 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.100876588 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.094539161 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110843776 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1108533 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087235572 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088096426 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123827552 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.129425046 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102612753 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095866379 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089372897 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099668205 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094707101 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.109621479 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081301032 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077584782 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.069776436 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.073753224 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.119114662 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108812258 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099255899 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099495988 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103379392 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07277226 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088648788 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091604036 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08405006 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090846374 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.116477266 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104679571 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.128988497 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102281887 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086733703 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142274038 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12887276 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086427131 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092668837 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102440555 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075540651 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147850813 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118931483 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076018059 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084687737 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.078374602 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085071777 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072976714 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10469913 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103306545 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074609553 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101008903 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096140462 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121937522 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095065898 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074792907 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078416097 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073549907 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075021053 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100028787 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.07605223 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07540654 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127603699 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100066292 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104721522 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081680157 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.226033109 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129951021 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068844155 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130999847 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08208393 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110929563 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082250185 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081047642 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090776023 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106768313 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106958898 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111716725 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07156687 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102502369 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15493001 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077145471 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076522725 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076230129 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111453911 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088360123 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143002631 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090561931 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093750219 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077913597 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128374788 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104072879 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08374565 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129195573 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080381566 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072719144 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087334932 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.112827936 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.073686467 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076124792 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115358486 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.510478324 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091496743 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077115574 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08981983 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128439441 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084482205 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109426338 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119374522 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10625662 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.184009625 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073064093 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090126566 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102837313 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096795011 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09037899 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077906358 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085593278 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08574476 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083125511 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104704631 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078756503 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089564342 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080092015 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103333334 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128783988 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08730445 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.10392782 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089218259 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091656388 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099511531 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111846617 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106186689 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.088181424 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088689054 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108911434 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084006689 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.233298772 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100015167 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.078055854 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079827416 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119913093 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085253493 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095463833 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104747562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.090965637 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114846669 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117411775 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111392623 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097853861 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079982749 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087044416 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089898315 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075733086 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080148606 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075674503 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071676048 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108028491 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085671886 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083033423 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101296793 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109105324 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10104915 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107577579 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091802687 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09840507 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101211877 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128143486 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146505857 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09910305 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124054433 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133462151 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077859783 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07694324 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.081814267 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132229112 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.082658409 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093035681 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.238211457 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079006989 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082574636 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092920611 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109262148 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08445748 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081497104 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099186918 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110611478 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085624704 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082355692 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09439889 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109718761 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129106904 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090629875 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076249688 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10932934 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103174033 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124233126 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074269761 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081932396 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129616558 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088592188 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104395047 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079702238 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122011135 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129770188 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074600264 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090117209 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073502572 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088241708 seconds)
  done (took 50.968916679 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.147557675 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14533026 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082059223 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096560389 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.18581509 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.19604277 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117628361 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094194289 seconds)
  done (took 2.790148482 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06732971 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081602511 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101334786 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084383303 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068352422 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068657789 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.202989041 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083166654 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067700588 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107640388 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07623836 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070381113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.362726017 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06687579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067951647 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076371907 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067565679 seconds)
  done (took 3.397635445 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372078395 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621502829 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.320801668 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073919387 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942010191 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089364957 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.189068726 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137900354 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080719669 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540198414 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36569991 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130743881 seconds)
  done (took 18.550150868 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075171323 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073347256 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07735841 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078263133 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075407044 seconds)
  done (took 2.0612722 seconds)
done (took 99.788179069 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082041268 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.167687707 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066656112 seconds)
  done (took 1.95002407 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081435352 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079529732 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079589147 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077544977 seconds)
  done (took 2.00819474 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074215724 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07570259 seconds)
  done (took 1.832035217 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2293871 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169253803 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091946571 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081398861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078863722 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079175644 seconds)
  done (took 1.935981006 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070731291 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070611903 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070646135 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072040996 seconds)
  done (took 1.966447436 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066772582 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065161827 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069301773 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072485052 seconds)
  done (took 1.959400105 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081881497 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077676989 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077020624 seconds)
  done (took 1.922284414 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107848997 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094692961 seconds)
  done (took 1.886062069 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079201201 seconds)
  done (took 1.766319397 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088724605 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095564707 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138191372 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.104825976 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138393706 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.125587758 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075213614 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07574588 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071995554 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071148389 seconds)
  done (took 2.669689629 seconds)
done (took 22.151364683 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077867863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362507193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358557186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085457605 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668663499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357867685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96924873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091937074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.101072728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069759606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086489278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649339123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963595713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327053537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947224973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324259911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649105898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06798465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066857408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067276368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951033005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066315528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067260418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067348182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649328143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372427947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067582161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321560342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069029034 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07154123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357598773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07074384 seconds)
  done (took 16.087361197 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069195125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121370133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071502431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082638046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069136133 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069883666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071904716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06921164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110209613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070036097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085221663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069154336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074215476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071778119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088739287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067879449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06926697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069032062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067692708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068820593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086083451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067848146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068497076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071071006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068031787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080857731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069188139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068092263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068088287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070525489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071609867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069449837 seconds)
  done (took 4.096665115 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120816863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125355134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074230102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11076553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119372936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07180409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152629492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09290493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114960514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070426028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088011859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070594171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107337948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072126852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091708333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070852083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071422762 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068994844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068220374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069212548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086252537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067487606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06835733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068868193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069068174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082457654 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06871564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068148581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068143568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070036631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072203524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069083894 seconds)
  done (took 4.391684124 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068650182 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070642018 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078302181 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08076929 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067909416 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070618086 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071040174 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06841944 seconds)
  done (took 2.278771593 seconds)
done (took 28.556087292 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078160482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067105314 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070716459 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086504395 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073350656 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069621945 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064349422 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074981259 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070480464 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070500064 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072213068 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067956239 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071080704 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066186434 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073411974 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068109011 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074250577 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072664813 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071372597 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072193748 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068160989 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07135021 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073933399 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070233583 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070414219 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070507 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074679878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071171511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06621544 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068786643 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067346369 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079265235 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072151675 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072261404 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06587694 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065544098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070442356 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067753566 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071586445 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07447908 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069430388 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075318816 seconds)
  done (took 4.662437047 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086612171 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092217682 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085324491 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081613729 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103156509 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081993049 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088456207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077912494 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07631709 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087860929 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072607545 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077503947 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078454286 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071077434 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077688695 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073915963 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078590501 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072254267 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078236845 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07773989 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089477885 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071848014 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078358881 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078962905 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073275689 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079894705 seconds)
  done (took 3.806925257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071161779 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086680215 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090687149 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139456556 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108223132 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081798873 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081786011 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102084175 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100846952 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06809365 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071098586 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09290866 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095580318 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074003569 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105506234 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085152496 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079071574 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068795574 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073298054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101784402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090542006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08637674 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100362749 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086883981 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066399057 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076796586 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073676442 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082098416 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073963996 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078811299 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070814189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071163044 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067977249 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078205409 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070316596 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064538541 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089027446 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081006016 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083297608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108111891 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078243583 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070506956 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098750473 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135258948 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068577858 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0710872 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07222307 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080368086 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067953576 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096387644 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084105718 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066473797 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085234084 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067873728 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067962014 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08198109 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068314714 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068199037 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078781072 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073146672 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086715686 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071672604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086159369 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066795204 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078220602 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0682876 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068429839 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065431946 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101929398 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073952465 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11720421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069731198 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066903267 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079838854 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077568036 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073220616 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066744855 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084075717 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078163509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071277955 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078791176 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069417326 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070062037 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101670175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065944624 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064862769 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064536369 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068699584 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06938637 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067075942 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079476814 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065842372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069432118 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080839594 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066534326 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067129856 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068771386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068013776 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066096401 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077249007 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070606502 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070368288 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081288208 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069445233 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071868771 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083335102 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078096688 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068053931 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069753329 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071149123 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070534682 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073810674 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071957664 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070570001 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075746084 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075994182 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074323606 seconds)
  done (took 10.906330741 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161230072 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154273651 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070406992 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150271655 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077949348 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073813244 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149727988 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088261513 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069860424 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070625843 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068920011 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.096811122 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092274703 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106140612 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.072685483 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067953329 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093166935 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099482199 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14945968 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144955342 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092546431 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076296874 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069356693 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069274238 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069199369 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077618801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084179944 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075067708 seconds)
  done (took 4.424322093 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074228059 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109506341 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071139909 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091384219 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087395578 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069896399 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07104389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070424179 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086711441 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076541191 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069183536 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074110999 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072987174 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071790122 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07006259 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076053915 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076185582 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068528673 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072934249 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07364242 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079737499 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093058813 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072303301 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067584412 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069160533 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067248257 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073761939 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079914177 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066846789 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096618908 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064927762 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071413416 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081369422 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068184651 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067055293 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07025947 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06943367 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069211674 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069767088 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067661224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067198063 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073586762 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065782277 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073448815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080665926 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074379589 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068296651 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069850585 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06950693 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064447288 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069999644 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070861243 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070256867 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075756064 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070772265 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07127009 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070676587 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098780808 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075233232 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069014397 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068409873 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070223318 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070377269 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077256932 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085974803 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070210487 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067581207 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069487682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073921451 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083370177 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068837691 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075255071 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066541547 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069474783 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071643723 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072144805 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070486476 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06780073 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069498179 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069564346 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069313748 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069457273 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068724398 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072175228 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067156114 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067727972 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069840493 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070279023 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075311686 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068370846 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072114536 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070671531 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068283634 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071297911 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073017778 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070450088 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087263765 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076633492 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068388528 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067007174 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082642897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071194376 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068752554 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075661041 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073516828 seconds)
  done (took 9.42882593 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089547781 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072640424 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089648863 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095874763 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07982715 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075189517 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082764127 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071066104 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085586886 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068483646 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079230522 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067863114 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081908559 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078045278 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070699239 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079825306 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071823613 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089203213 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084383184 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068027911 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078160457 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081908628 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080889182 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085067015 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084545258 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085081513 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079581021 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069889734 seconds)
  done (took 3.986332046 seconds)
done (took 38.912641175 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.786086112 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.956743241 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777746501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.970318804 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.831362973 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.910346401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.895402334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.774987296 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.934122006 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.810359787 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.078420086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.185616539 seconds)
done (took 66.685110431 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.793380272 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.929473425 seconds)
    (2/2) benchmarking "String"...
    done (took 1.991317513 seconds)
  done (took 5.634605988 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.919634987 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.419266768 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.057520159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.776368896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.783674561 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.291407431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.584576459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.267905953 seconds)
  done (took 30.89506805 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.928126617 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.006152266 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.482934245 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.516804155 seconds)
  done (took 15.696895613 seconds)
done (took 63.749538652 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.821560385 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.779293887 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.843615958 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.814148066 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.788858689 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.780571461 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.780390918 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.780227182 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.79393709 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.972761999 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.782864044 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.793358163 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.783729379 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.822216339 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.59121448 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.839443985 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.791846083 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.794139674 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.788563876 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.807782314 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.784101652 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.783448151 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.237081728 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.965195129 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.385274663 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.076926237 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.420013896 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.182909857 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.791957098 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.778936325 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.81891417 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.072534614 seconds)
  done (took 204.962246289 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779691807 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.634276668 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.703020032 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.828458996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.121365869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.960050962 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.874139826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.18059371 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.786012811 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.808521192 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.993772909 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.779575618 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.026892649 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.725664625 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.816529395 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.882117754 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.937031093 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.017738554 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.819518843 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.928376621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.789716767 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.788740325 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.732388318 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.971248819 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.790037372 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.862780901 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.802789596 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.783746519 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.972573327 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.907390029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.796314291 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.79282686 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.936458482 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.648144681 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.798077293 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.808366213 seconds)
  done (took 169.500746807 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.973284297 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.78757544 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.780187238 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.836130973 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.905169493 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.783388201 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.425024982 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.792333906 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.927434058 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.7873969 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.781594774 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.781917552 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.781848518 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.794922638 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.858991444 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.785138805 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.797695613 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.784558674 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.808928183 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.782965746 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.781859626 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.781990597 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.782050107 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.782149197 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784311883 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.781839814 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.782715541 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.948827131 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.924215473 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.02308521 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.78446754 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.78166104 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796342672 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.082435756 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.785442237 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.784030215 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.873653961 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.839615511 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.784108592 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.905518474 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.78574481 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.999828443 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.85571785 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.784404983 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.782887445 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.847516578 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796239685 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.784210305 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.785641598 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.790352274 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.847984961 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.056197469 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.787394811 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.905655445 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.274981067 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786934036 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.784016699 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.784351615 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.388018099 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.78746788 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.783950106 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.789365951 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.789704714 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.784818268 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.785292966 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.170991423 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.855229273 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.020364204 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.980747953 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.784962868 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.540232366 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.849768228 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.784200271 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.785213619 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784484674 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.785510132 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784138193 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.787451218 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.905351701 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.793722155 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.908470512 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.868431569 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.905075091 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788296603 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.785560487 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.795955804 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.609800395 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.85583991 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.82254756 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.614812676 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.788904678 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.158930421 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.559249309 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.789554353 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.786612385 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.798165612 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.786742538 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.786222933 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.786553114 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.866262004 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787236015 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.906600995 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.517065937 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.303410552 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.990752545 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.786907584 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.795924852 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.881897914 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.955154151 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787001675 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852412589 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.792845623 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.787955392 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.933369111 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.788055519 seconds)
  done (took 402.601260359 seconds)
done (took 780.815053 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.373459084 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.349762886 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.463145968 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.363193331 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.339894193 seconds)
  done (took 13.61129737 seconds)
done (took 15.332567674 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.801792302 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.793192747 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.849630256 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.872591684 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.802504193 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.805560778 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.868271609 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.807255289 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.839578245 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.842437718 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.873633628 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.872304814 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.811143605 seconds)
  done (took 25.562748286 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.796619459 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.9318721 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.020924634 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.831007649 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.797300992 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.012348669 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.853437147 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.941319332 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.932345806 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.01577918 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.017088832 seconds)
  done (took 22.874993186 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.797011414 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.935249039 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.01869747 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.832822817 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.79794214 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.012703564 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.861489469 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.925885596 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.939320613 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.013765233 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.019947747 seconds)
  done (took 22.887340758 seconds)
done (took 73.048058345 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.793884114 seconds)
  done (took 3.51748805 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.812179852 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.989284381 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792383324 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792880242 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.794798926 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.794679283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793464859 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793206468 seconds)
  done (took 16.288215463 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.792798613 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.79382308 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.793219226 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.793320642 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.793740517 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.793158329 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.79312184 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793996086 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794637857 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.793065167 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79358911 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.792920198 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.794142836 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.793145033 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.793697634 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.794605958 seconds)
  done (took 30.423252423 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.795973428 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.794564894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.793832534 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.794540134 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.793981949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794115897 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.79541292 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.795843633 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.794909582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.794859708 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.794886285 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.795175035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.795807446 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.794277867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.795056585 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.795096695 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.794853585 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795095263 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.799168401 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794532282 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795261087 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.795306796 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.794972904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.79535146 seconds)
  done (took 44.810453501 seconds)
done (took 96.772810878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.580225648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.560755654 seconds)
  done (took 9.867516417 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.795134218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.795560827 seconds)
  done (took 5.322227793 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.795877022 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795205761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.795548828 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.79618759 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.795903146 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.794894373 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796761964 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.795566097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.796158217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.796306466 seconds)
  done (took 19.686328717 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.795951896 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.795860492 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.795913669 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.796175313 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.795496388 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.795597427 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.797132556 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796947316 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.796430606 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796614917 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.796593658 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798378878 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796980882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.797450465 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.797444325 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.79673404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.796329988 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.798629419 seconds)
  done (took 34.069390713 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.796869043 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.797043983 seconds)
  done (took 5.323090347 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.796521024 seconds)
    (2/7) benchmarking "second"...
    done (took 1.797442173 seconds)
    (3/7) benchmarking "month"...
    done (took 1.796996289 seconds)
    (4/7) benchmarking "year"...
    done (took 1.796898396 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.797169852 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.796802563 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.797667103 seconds)
  done (took 14.30901721 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.797278501 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.965068982 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.014283367 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.382872288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798107031 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.799783887 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.683703008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.800232663 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.801227776 seconds)
  done (took 19.772206984 seconds)
done (took 110.077696637 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.588056548 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.797716903 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.074277473 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.869135296 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.820935165 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.091705068 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.803704103 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.390201852 seconds)
done (took 42.165756705 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.851421054 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.796483662 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.843875694 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.844456099 seconds)
  done (took 22.215310287 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.797878897 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.096336824 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.821382541 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.661993703 seconds)
  done (took 22.127789935 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191017004 seconds)
    (2/2) benchmarking "read"...
    done (took 2.150523614 seconds)
  done (took 6.076162308 seconds)
done (took 59.003086309 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798703883 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.798537961 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.800204867 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.798233473 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.798669621 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.798227494 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798761185 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.799181681 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.798730962 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.797856453 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.798520309 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.799303944 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.799408935 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798840716 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800438076 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799129651 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798932637 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.799839298 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799789899 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799800599 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801112948 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800036266 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.800469357 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.800416416 seconds)
  done (took 44.914844154 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.801303423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800431954 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.80064111 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.800909345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799809224 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.801426752 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.800687117 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800232578 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.800639797 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.800536685 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800135407 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.800832864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799806283 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801068374 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800648934 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.80021373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.800925907 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800527349 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799891484 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801559735 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.800781562 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800675889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.802249192 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801116848 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.800853581 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801598822 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.801314957 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.801380706 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800084747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801468628 seconds)
  done (took 55.757761273 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800908905 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80150236 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.802188404 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.801617461 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802037088 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.80192913 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802374711 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.802697288 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.802235121 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.80253213 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.802361261 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.802514533 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.802945865 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.802984725 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.80242942 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.801399033 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.802147235 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.802695688 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.801916629 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.804097305 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.803106215 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.803078906 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.802964455 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.803153419 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.803407729 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.803279653 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.802773762 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.80306498 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.802702204 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.802606542 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.803945277 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.80292973 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.803567555 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.803701082 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.80332041 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.803534224 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.803281041 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.803731315 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.802624249 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.803829728 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.804765064 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.804571859 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.804235311 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.803906175 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.803810112 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.80407511 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.804674045 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.803946225 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.804404606 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.803959712 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.804238007 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.805221157 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.804946925 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.804237038 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.804397555 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.805313263 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.804463504 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.804755395 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.805243101 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.804710258 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.805210956 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.804937403 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.804793745 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80609724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.804305854 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.805136578 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.804954647 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.80545877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.806007621 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.804890615 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.805191141 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.805396743 seconds)
  done (took 131.599891809 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.804868837 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806831793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805415656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805114854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805759194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806130798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805864874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807061588 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806904046 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.805736669 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8058647 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807392161 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808047119 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807362689 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806580389 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.806380907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80713062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807224888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.807751193 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808179843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807313813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807331295 seconds)
  done (took 41.484524193 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80793061 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805842481 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.807140902 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806461893 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806806396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806962109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80783089 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807082478 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808003489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808059755 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80699601 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80851129 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808029303 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807365836 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807105325 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806918022 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808185475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.808042846 seconds)
  done (took 34.272668706 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807794076 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.807543538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.807967144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.80877098 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.807742236 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.808323313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806999257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.807437207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.808327378 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809131911 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.80888593 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808567309 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.808339322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808293808 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808691043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.808347065 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.808987141 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809894845 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809607026 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80924908 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810320611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809176805 seconds)
  done (took 41.52931789 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809104565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809393165 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.809353692 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80967131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.809051007 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.809457688 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.809271395 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.809337692 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.808987786 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.808629776 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808729796 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.809336067 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.809666863 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80940472 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.81137251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810299061 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.809336388 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809186772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810000559 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.810904808 seconds)
  done (took 37.93200221 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811720957 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812353913 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811711975 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811416447 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813218211 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.811478097 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812639655 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811744736 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814008745 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813779516 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812560482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812322467 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812515447 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811987764 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812512696 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814824134 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813163447 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812452193 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811473916 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811993657 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813259312 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813190187 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813288709 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812334709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812949448 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812862778 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81403494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813033704 seconds)
  done (took 52.498092316 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811109908 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811613233 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.81166653 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.812057272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.812141108 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.812246093 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812239793 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812572993 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813651114 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812510346 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.812659611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.812388048 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.811737222 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.813887816 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813162336 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.812744705 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812291079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.812625614 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812093069 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814418258 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.813314398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812158416 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.81256229 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812612709 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813983284 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.812883254 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813018211 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.812754221 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813158867 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812680331 seconds)
  done (took 56.123186197 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.833459266 seconds)
    (2/2) benchmarking "in"...
    done (took 1.833743501 seconds)
  done (took 5.412106766 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.813223473 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814162945 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.813820923 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.813897747 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.814062836 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.814242717 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812620604 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815203858 seconds)
  done (took 16.255843545 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.813041105 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.816320716 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.814565145 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.814248809 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.815567637 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822673035 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815134029 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.815726612 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.815568783 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.81652999 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.819963807 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818976787 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.823855271 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.819026517 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.816395212 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.815889392 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816678742 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817817978 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.816652923 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.814398164 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818015327 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817026988 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814902957 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.816759932 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.815878322 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817349877 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825128791 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.816957293 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816219997 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.815696356 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.822277847 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.816039338 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.817228119 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817276648 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.817356468 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.816084828 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.823985993 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.816795288 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.817422403 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815839355 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.818061286 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818811178 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.820004181 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.824922317 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.818248652 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.816098119 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.816726029 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.818245331 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.81741552 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.81975168 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.823685889 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817265868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.81651667 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.816940904 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820066807 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.818787161 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.817906794 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.81818443 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823134247 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823728545 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.820072932 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.83704102 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.825661825 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.817826867 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.819447656 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826774673 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.841339968 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819291982 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.818884829 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.817864671 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825909597 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.817443906 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.817632357 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.8177636 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83092277 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.82770869 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.819784017 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.81908632 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.818828998 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.819679992 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820260475 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819816201 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819176073 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.820146884 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827736055 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.842595949 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.821853392 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.820371396 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.821078564 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.820341983 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.824580955 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.822245007 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.818896711 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.818961507 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.82056355 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.822193893 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.82106629 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.821435261 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.819038353 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.829677699 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.819732561 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.81938168 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823287834 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.828621504 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819836891 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.82130632 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820572029 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.821296861 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.827322877 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.821432187 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.82159101 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.819649524 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.821109721 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.826155995 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.821261738 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823743433 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.82937804 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828341968 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.822749336 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.825207298 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824227219 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.82290912 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829743718 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.844476465 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.822605338 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.825122106 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.826115432 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.833942027 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.825648262 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.822168711 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.824616845 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.822222922 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.822049325 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.824025453 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.82238415 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.824883297 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.822393449 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.822861567 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.822958824 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.82418606 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.824987813 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.824656485 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.824853667 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.822909963 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825946242 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.82279684 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.825870984 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.828833708 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.82212028 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.823655685 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.822046299 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.824746703 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.824163711 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.822783899 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.822311126 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.821750782 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.824367576 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.822823313 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.82473318 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.82480001 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.822213321 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.824160341 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.826457313 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.824648086 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.823922741 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.823263005 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824487667 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.823690205 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824678663 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.823608819 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.82489172 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82403327 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.827350188 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.822876989 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.823121377 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.82433788 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.823610076 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.822869862 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.826615073 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835159318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.826928426 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.833471513 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.824346421 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.831919614 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.824294659 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.826413772 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.824559452 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.825366825 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.824924327 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.824268687 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.825534403 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.827741006 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84473743 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.834768636 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.826489179 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.825471387 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.829577699 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.829176435 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.830711227 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.823478015 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825459159 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.827345375 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.82628774 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.826942885 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.824819051 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.828913502 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.825914773 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.824924176 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.829116976 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.826977416 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.825010268 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.826284265 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.826454436 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.827162276 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.826599389 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.825797095 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.826104136 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.826704527 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.833538431 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828797027 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.826470314 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.827402056 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82885639 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.828599993 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.826307745 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827031963 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.82977262 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.826633837 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.829015015 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834687323 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.828032938 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.827431653 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.827549647 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.826973762 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.830300588 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.827170206 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.83076552 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.83560401 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.830147375 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.827485936 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.833047985 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.827457706 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.829957644 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.828968525 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829137146 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.829530245 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.829344654 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.828983088 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.827650857 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.834940741 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.828176104 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.829234375 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827842574 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.830267697 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.8293385 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.830378555 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.830103317 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831799934 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.836760638 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.834162528 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.82966141 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.83267251 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.830447733 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.829244598 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.832057774 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.829044062 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842511526 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.838296931 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.829564824 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.828066443 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.830363731 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.831686034 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.829415438 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.830603922 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837501851 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.829524183 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.830788949 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.832988128 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.830092859 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.830495202 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836249455 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830589239 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.832419496 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831389845 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.829842357 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.830513113 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.829466864 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832446409 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.83202386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.832020357 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.834355766 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.829784281 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.831904728 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.830390823 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.840208599 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.830717945 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.831382329 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83835504 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.832279166 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.831571107 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.831980145 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.83019993 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.830721396 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.831589412 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.831430778 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.832995456 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.833154111 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.833991285 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.840651929 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.834501742 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.838774969 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.832681383 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.840531778 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.831546015 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.83075683 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.831640008 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.835014816 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.840196332 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.831572864 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.831549896 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.842476878 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.833451794 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.83283291 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.8367216 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.831613461 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.833212606 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.832725308 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.832493101 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.836359265 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.836108515 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.831897717 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.832788151 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.831985282 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.832664099 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.83545329 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.83383429 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.833429478 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.832892324 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.832820912 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.835199781 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.833950645 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.833717799 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.833807451 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832863648 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.833027793 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84163435 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.834724177 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.833840352 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838843336 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.833037283 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.842270333 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.834675657 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.834073736 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.834113152 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.834178626 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.836072225 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.8340894 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.835342066 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.834685609 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833770128 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.835068545 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.846744096 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.842097722 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.837608044 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.834905262 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.834693836 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.834866924 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842368878 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855525937 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835536723 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.836362634 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.837014187 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.842696282 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.836874649 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839065384 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838055335 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.842765537 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83572816 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.834721359 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.837618117 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846217377 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836903482 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.834845794 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.834578014 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.839285235 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.83767091 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.835871127 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.837302094 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839608006 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.837194519 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.84679258 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.835018094 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.837620215 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837134779 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.836165026 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.83667359 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.836224071 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.838207944 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.83712646 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.837130021 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.837682402 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.837268591 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.841714338 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.836391012 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840344959 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.845523403 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837621561 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.83794901 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.839086259 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.837904483 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.838904655 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838054362 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.83693024 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.840053372 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.836832953 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.839121801 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839885106 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.844891983 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838613727 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837142506 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.837810578 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.840840455 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.836802205 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.83887172 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.839057503 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.845287643 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840082243 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.847902438 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.845850769 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.838199709 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.83853481 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843997052 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.846397372 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.838504874 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.83722251 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.839787143 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.840551683 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.840893666 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.838926224 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839547294 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.839207026 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.842640794 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.838105669 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.83887611 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.839357233 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.837948166 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.839843058 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.840087282 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.843504134 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.838263437 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.838686187 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.836846613 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.840310634 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.840481956 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.841708516 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.839838054 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.838550753 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.840992922 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.840345493 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.843330114 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.838756735 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837989895 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.840858728 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.838734657 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838796609 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840077648 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.840035186 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.839518541 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.843147558 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.847991513 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.839858154 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.841835544 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.841478384 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.844268382 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.84116842 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.841044967 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84093296 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.840053797 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.848672079 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.840470786 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.841868776 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.840575346 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.840209568 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.84586916 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.842155065 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.845369259 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84233461 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.84103107 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.841008762 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843919209 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.849524539 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.846156941 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843970418 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848632286 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.845981906 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.843119567 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.840854178 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.841656198 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842265358 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.842848664 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.845078803 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844000592 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.844638002 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.843410319 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.843651435 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.842754535 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.843486205 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.841859847 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.841651544 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.845980431 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850601896 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.851694628 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.842233546 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.84438069 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.844477739 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.845223555 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.853967003 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.844550022 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.844241875 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.844688617 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844644223 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.844112526 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.850170078 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.851666413 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846377961 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.844129834 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.847600835 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.860312216 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.845243987 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852943595 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873449774 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.845895803 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.844832036 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844725684 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.845249419 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.845084124 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.846517012 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.843954236 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.851127073 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.845009302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.843604871 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.852230578 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.843647828 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.843684159 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.844945706 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.845091281 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.85067115 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.844983674 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.851935288 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.845878391 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.84426582 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.844845329 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.847509051 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.84421596 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.844140213 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843898111 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.846287122 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.844353914 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.845928842 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854387709 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.845796848 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.846657441 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857862991 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.855542341 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.847129569 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.845494476 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.847187222 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.851310132 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.848966337 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.845684505 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848316605 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.852949059 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849415191 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.853437305 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.846879364 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.845446904 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846455519 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.844912112 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.847391881 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.859024871 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.856362362 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.84681576 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.847281532 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.853089771 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.846268629 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.853497145 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.85243496 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84793277 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.848067636 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847851413 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.846228566 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.846521204 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.846746996 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.850426177 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.853475095 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.848638483 seconds)
  done (took 1094.357627663 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84685205 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847303954 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847396862 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847208755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847380141 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84643817 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84700904 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846412688 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.847583448 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847060939 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846680048 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847347181 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.847799149 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847079916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847282893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847837977 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848318243 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847349814 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.848411354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847729863 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847678466 seconds)
  done (took 40.571503542 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848297546 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.84836802 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847458448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847994855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84861354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848566963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.848648388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850155339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848355385 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848807545 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.848074933 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848487709 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84840276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.849474645 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84942476 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848577993 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.848160056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848383507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.848241536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848398305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848834358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.84823561 seconds)
  done (took 42.446406835 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.850540982 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.850138684 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850366864 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.8489646 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.849574063 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.850971735 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.849075502 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.851449465 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.849204505 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.850691154 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.856440422 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.856827741 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.850459937 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.852927912 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.84950379 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.850990605 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.995500912 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.851760779 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.851450575 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.850397769 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.85175388 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.857046597 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.850127526 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.850473406 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.85045462 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.852362821 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.850677052 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.849970784 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.849928674 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.851797249 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.857058687 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.851536257 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.85354775 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.854382529 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.851560433 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.852481431 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.857497041 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.852960213 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.851786645 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851916358 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.861641769 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.874140196 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.851863384 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.853731782 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.860261291 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.851669982 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.8516498 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.855791106 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.858853198 seconds)
  done (took 92.71812382 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.852064063 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.851119292 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.851248161 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.85197156 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.851656013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.851561547 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.852527797 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851558858 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.851482595 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.852030225 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852574176 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.852514958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.852689891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.854521839 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.852003604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.853265054 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852393891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852312807 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.853690223 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.853370041 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.853317643 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.853176433 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.853074161 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.853997169 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853530061 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852568596 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853757488 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.854253696 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.852955562 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.853877286 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.853634959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853661024 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.853592375 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.854328943 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854005895 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853787567 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.854160202 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.854386564 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854495475 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.853893252 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.853426232 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.855384302 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.854717342 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.853909806 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854794183 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.854587674 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.85488257 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.854973037 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.854583363 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.85431808 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.855083823 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.854457562 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855010905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85473897 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854482424 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.854936753 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.854692254 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.855247947 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.855373043 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.85592467 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.856036433 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855651051 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.855444155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.856029399 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.855264377 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.854832418 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.855626813 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855086926 seconds)
  done (took 127.84615856 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856763501 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.857009631 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857785658 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857449422 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856954037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.85712587 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.857734912 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.857424898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.857757696 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.857483637 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857971133 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856396362 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.857668526 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857137212 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.857895221 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.858330737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.858346998 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.858811568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.858690137 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859047928 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.858267485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.859382681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85913894 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860123859 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859016126 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.858266352 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.859352403 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.859168914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858804633 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.859088444 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86025102 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.859240382 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.859598731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.859290113 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.859985726 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.860113001 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860652993 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859623134 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.860411941 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.859244228 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.859504783 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859554137 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.859419055 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.859261665 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.859163652 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860316747 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.858902431 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.859637088 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.858067566 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860437435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.86008002 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.859945153 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859845592 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.859715088 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.860537785 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.858481868 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859893826 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860428419 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86043504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.860525116 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.85985345 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.858358795 seconds)
  done (took 117.044267992 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858574906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.858693531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.858937861 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.858767365 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859413608 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85860783 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.859231147 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.859352951 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.859006025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.858548226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859875485 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85975339 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860686569 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860136422 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.859816791 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860667864 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858891131 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.85944167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859065605 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.859345698 seconds)
  done (took 38.977020488 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.860093388 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859599578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.8596437 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859981798 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.859835009 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.860398867 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.860611297 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861006763 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860691495 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860169313 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.859949783 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860538378 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860725255 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861206483 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860211016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860829911 seconds)
  done (took 31.556116618 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.860595591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.860707258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.862393012 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.86254599 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.861161942 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.860300955 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.860830904 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.860813514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.861354747 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.861949056 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.861571936 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.861035156 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.861105636 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.861990534 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.861676322 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860947549 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.861918778 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.862027897 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.861856766 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.863614109 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.862390246 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.861872691 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.86152962 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.862573573 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.861910088 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.863340686 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.862460593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.862325181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.863087747 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862601331 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.862867048 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.863532703 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.863372191 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.863037847 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.86452164 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.863399001 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.862894242 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.86329447 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862887291 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.863270619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.863816445 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.864155656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.863558735 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.863494397 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.86347946 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.864540268 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.863648343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.864272171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863330408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.863665722 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864409248 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.865201629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.863468739 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.864244097 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864583453 seconds)
  done (took 104.240961507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863598036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863460974 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863797803 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.863371055 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863677156 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.864284082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.86258122 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863821061 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864084676 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864334972 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863804364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86403209 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864380591 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863868442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.86425177 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864350248 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.864359595 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.86494615 seconds)
  done (took 35.345150983 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.865419697 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.864411798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.865414532 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.864887698 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.8641582 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.86508445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865351498 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.865457188 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866056374 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.86602277 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865520166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.866477691 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865940209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.865732351 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.866012399 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865119155 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.866269287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866056387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.866515756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866865178 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866339331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865117846 seconds)
  done (took 42.839409802 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.865573342 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.866269373 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880352259 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.887566235 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.886458701 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.900181218 seconds)
  done (took 13.082342446 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866409916 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866395855 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86677162 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866645145 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867950432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86942872 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867250905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867318327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866815503 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867711879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867248015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866705666 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866497188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870479255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867991732 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867384543 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867253588 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867044781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867167431 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869979656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867842492 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867385389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867625401 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866836502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870389037 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867770905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867590619 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868583668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867673964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868578593 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870561109 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868494621 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867497778 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868379781 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867681393 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867662195 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86875206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868535904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869483081 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869113194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868052118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869359175 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869088538 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86949138 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869759482 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869499086 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869424859 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869476874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869065133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86997589 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869106495 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869656042 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869576812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869845101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869516568 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870372734 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870366366 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870200643 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869728216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870188648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870815853 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869344066 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870200932 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870398212 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869886387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870004608 seconds)
  done (took 125.128252147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870105584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870526384 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870591686 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871305384 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870693096 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870235905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870851371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871091508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871319828 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871041406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871572136 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870938148 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871520012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870996649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871500728 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870832527 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871302301 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871529759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872417978 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87225036 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871410193 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871895936 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871647364 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872253488 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872661024 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871697752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873059122 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872427154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871551094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872242334 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872559451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872583766 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872263899 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872126303 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872596424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872744109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872484314 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872801988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873210707 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871908408 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873106836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872426847 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872085613 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872175855 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873314791 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873067417 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871919844 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872574053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873764312 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872261908 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874195222 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872959498 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872885898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872834637 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873093329 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873134338 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873147232 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874020526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873187438 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872949703 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876157326 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873655588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873658182 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87405943 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873575559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873610019 seconds)
  done (took 125.375571481 seconds)
done (took 2551.048067477 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.875626357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.97396319 seconds)
  done (took 15.652840456 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.040597978 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.992704299 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.877537578 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.926608294 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.877615833 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.901280627 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.898824437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.878276739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.878589105 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.878416229 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.87872391 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.062726702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.877998095 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.878555075 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.878826028 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.970277504 seconds)
  done (took 52.508737763 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.882832742 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.880706124 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.892817514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.882096575 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.883820204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.895733103 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.911092231 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.886380034 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.919156343 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.898331742 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.953253693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.894546611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.884094983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.934470569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.896770471 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.899561979 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.975191031 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.961840031 seconds)
  done (took 36.137637702 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.962899072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.89338682 seconds)
  done (took 10.668579615 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.902144234 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.894365692 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.891735895 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.878842213 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.906697324 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.904647643 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.883913454 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.889095568 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.894432177 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.887024422 seconds)
  done (took 70.768505352 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.884264535 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883017284 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.884280311 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.879491108 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.877845133 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.881590384 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.880293675 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.876705333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.57186515 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.921194813 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.89171845 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.890753774 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.880703643 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.882102879 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.878539039 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.906631676 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.056785243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.877858567 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.877758552 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.886934306 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.88238598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.959020484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.895285667 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.882322158 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.915229048 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.569089968 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.894641384 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.886530338 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.043252322 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.877219023 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.880421635 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.093366353 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.888836366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338706254 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.173627905 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.88842063 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.89165824 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.888964495 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.878889381 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.051409909 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.88302322 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.887978235 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.705263776 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.14884142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.983535917 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.927225553 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.231470522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.885960295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.882754375 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.915917364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.885595137 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.883381842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.900067453 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.384197349 seconds)
  done (took 133.665082674 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.88148294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.160230861 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034553852 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883046868 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138812116 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093625731 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873378097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927015315 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885476651 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.080476311 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.140367241 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985422562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.884357439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.880574375 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881728942 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.882272726 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024584258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950391925 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.885681436 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.881611677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90675498 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084086736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.004112375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.886352914 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.909655396 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091993395 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.004395422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.98459478 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.604128465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.88171875 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944908179 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.885538868 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.881368186 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.882515012 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.037572968 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.975987313 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965174131 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.885825181 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88378204 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.881891552 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.64978589 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087434457 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977922057 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003329202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.136174128 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099956607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49410168 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.882253949 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.50930714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052127784 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.088181191 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087554108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.003692722 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.886902311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.430946199 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.884242611 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.882785339 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106126409 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104811969 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.983369243 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886686154 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.884280136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883930305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175307187 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.88823739 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981589137 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886428237 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.884086698 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.975560956 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.984597357 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114585616 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104174184 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916333803 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.20803887 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.387459822 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.087314409 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.951091455 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108225856 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.889035631 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.884531032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962695427 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.731603987 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137662415 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.165820177 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084401504 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914235343 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.509272463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.885531645 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072140295 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.070365791 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.12236383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132896334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.122009449 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201670027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.885393704 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.884953992 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.169059 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999502314 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.827911977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.236124895 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118828311 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.36845014 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912465852 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171924514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015929857 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.889170587 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.528988935 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.888145288 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.094352008 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.923421536 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.888535819 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888404885 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.075485004 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.804600207 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88609346 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.846560335 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.948380875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89154993 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08755146 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.889562752 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135939594 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891611858 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11903933 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.454007331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917797382 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.117115098 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.133428469 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.512774588 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131200372 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.130598034 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.002598189 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164393552 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.888013411 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.889939555 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151638129 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.892116467 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.887942989 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056888059 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.889825414 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031257611 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.892303117 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157370624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911478443 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118194643 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893604584 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122046813 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.923017487 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938561435 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.89388646 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012166613 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.89366702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.837031975 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049750224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893457098 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.89071871 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.720668437 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.89099704 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042248907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.115001411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913312581 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.958349148 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.436431377 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871846445 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970301138 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.913630874 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 4.432481558 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.890159378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.142110209 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.838327123 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.358196518 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.889893305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178077967 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.129865583 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.891370201 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.889969616 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.734515142 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.854210318 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890282528 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.045557998 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.234292869 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.654170091 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091483078 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895510688 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018226714 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.894005132 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.968404529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227436436 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890611565 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.89003576 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.891601865 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.892297272 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.889776995 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.157461491 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.918862351 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.323915109 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.026478271 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147378519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196027292 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.089813211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.932050018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.893559067 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.199211047 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.895392045 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.955744386 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.894989646 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.911178633 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12428285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894480949 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15280151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125869995 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754017793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93921029 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.894799565 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892802876 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.822564247 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.036296386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97749833 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.894967944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.892985634 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006137186 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012871622 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.075331268 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.580824558 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.005882111 seconds)
  done (took 906.317291277 seconds)
done (took 1227.523745954 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.893596811 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.891481807 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.894823971 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.892409517 seconds)
  done (took 29.393331621 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.894573235 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.892564136 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.894815249 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.89352995 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.893543431 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.893804749 seconds)
  done (took 13.18406771 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.891438361 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.892655984 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.894516301 seconds)
  done (took 22.500318262 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.970572045 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.302465861 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.035282619 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.324261786 seconds)
  done (took 10.454603945 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.89482143 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.895137774 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.895794353 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.895191634 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.896401943 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.896519892 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.894386324 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.894660138 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.897653368 seconds)
  done (took 18.883374248 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.923873672 seconds)
done (took 100.160973765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.3671399 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904396271 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.536326075 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.259778877 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.896763202 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.917561138 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.294519475 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.910857068 seconds)
    (9/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.258981921 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365644599 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.200927004 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.912142943 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.990283743 seconds)
    (14/309) benchmarking ("sort", Float32, false)...
    done (took 5.566744658 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.896811341 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.139102297 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.496863593 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.292712758 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.076861345 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.896650295 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.10248787 seconds)
    (22/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.094560229 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.908170468 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.12711116 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.908801416 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.203802748 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.980045372 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.101698493 seconds)
    (29/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.164800231 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.235284424 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.145212052 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.638472164 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.748172418 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.032252403 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.976708732 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.897216482 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.963895738 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.913302468 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.033118853 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.04518099 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.074963183 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.657544136 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.962788403 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.894402688 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.903760515 seconds)
    (46/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.899052301 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.058035341 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.906707242 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.974183039 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.906126466 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101133701 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.551340404 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.013226456 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.988256712 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.79065242 seconds)
    (56/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.326852016 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 2.112086627 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.271237761 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.210154942 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.909233649 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.558779595 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.150079067 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.918146209 seconds)
    (64/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.152578367 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.011773916 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.917775043 seconds)
    (67/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.974014526 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.899389986 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.078421979 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.989935898 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.980969329 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.976186517 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.136437109 seconds)
    (74/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.902058395 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.970673531 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.132749438 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.26344299 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.023926618 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.135083958 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.471357599 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.837156324 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.907592954 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.218278497 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.121263172 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.917058911 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.897501372 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.234740434 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.290810188 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.588758114 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.300196948 seconds)
    (91/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.373415148 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.906593904 seconds)
    (93/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.677153072 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.925660106 seconds)
    (95/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.289481577 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.89849251 seconds)
    (97/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.809563458 seconds)
    (98/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.714079483 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.902501218 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.103559668 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448972028 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.204922584 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.997639878 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.043068098 seconds)
    (105/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.218556831 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.760881703 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.201471628 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.292968587 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.916687022 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.899711388 seconds)
    (111/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.712148065 seconds)
    (112/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000993272 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.983717939 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.773917433 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 4.87154673 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.904693324 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.270412115 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.68920857 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.204013531 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.073590648 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.037163018 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.993742275 seconds)
    (123/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.038124989 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.204930691 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.910628983 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.997855171 seconds)
    (127/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.036227283 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.901702699 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288582963 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206939284 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.965039988 seconds)
    (132/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.654151828 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.001087194 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.839981534 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.906251565 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.792269543 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930945669 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.811512194 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.033243931 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159075502 seconds)
    (141/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.351229188 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.918442998 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.901199078 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.62975925 seconds)
    (145/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.319893892 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.204229481 seconds)
    (147/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.59669591 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.905900598 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.633557232 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.008830954 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.002701603 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.089344556 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.91859267 seconds)
    (154/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.294156285 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.039968548 seconds)
    (156/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.389719162 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.050217411 seconds)
    (158/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.948025204 seconds)
    (159/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.902246141 seconds)
    (160/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083710952 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.08706624 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.926599247 seconds)
    (163/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.595682774 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.205952313 seconds)
    (165/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.535338845 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.903676993 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.708777817 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.909269639 seconds)
    (169/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.457689521 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.917757345 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.026857695 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.031628113 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.56764672 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.912383449 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.235656246 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.909995651 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.555669101 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.270958774 seconds)
    (179/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.593750417 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.223795383 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 5.624741105 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.298408039 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.014316158 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.272521654 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.707769471 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.914615812 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.309378501 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.192764202 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.307262548 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.909173902 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.967487669 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.17568976 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.987659705 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.904906869 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.941193531 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.916202797 seconds)
    (197/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.036665602 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.212768069 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.020676405 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.057555638 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.171461086 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.20408404 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045720243 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.19303618 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.908333 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.209820367 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.909249877 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.720650808 seconds)
    (209/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.066751336 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.596519095 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.5415059 seconds)
    (212/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.033290636 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.204358219 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.03050378 seconds)
    (215/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.229896983 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.914259088 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.023554166 seconds)
    (218/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.001184271 seconds)
    (219/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.909983584 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.954517387 seconds)
    (221/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.928917725 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.372365191 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.986303643 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.914334565 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.535134423 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.14879529 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.918892633 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.011457647 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.243796943 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.911157803 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.237326981 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.117610178 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.275127464 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.148368692 seconds)
    (235/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.924032678 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.967747186 seconds)
    (237/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.038962352 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.195252086 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.717354915 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.91915215 seconds)
    (241/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.987208394 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.913014825 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.908816613 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.590812399 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.091767994 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.527517085 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.93960023 seconds)
    (248/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.920580518 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.054061213 seconds)
    (250/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.196966146 seconds)
    (251/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.991189924 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.92123505 seconds)
    (253/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.03776981 seconds)
    (254/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.180026677 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.553751643 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.035995013 seconds)
    (257/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.445734895 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.33076782 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.993078396 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.917099356 seconds)
    (261/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.901569611 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.983802059 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.927183773 seconds)
    (264/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.093690272 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.943054566 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.112372033 seconds)
    (267/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.026219999 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.295359576 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.91168999 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.077119681 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.047989961 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.023956468 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.019012417 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.014300884 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.004184334 seconds)
    (276/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.072387189 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.039960093 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.909931561 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.192878986 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.301077967 seconds)
    (281/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.308439198 seconds)
    (282/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.990859979 seconds)
    (283/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.989716752 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.933940707 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.911275744 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.015991961 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.889535963 seconds)
    (288/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.000012156 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.160195801 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.914344718 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.631811325 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.061372385 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.966193981 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.933016546 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.915774907 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.744468883 seconds)
    (297/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.995783587 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.302240714 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.928687064 seconds)
    (300/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.812931096 seconds)
    (301/309) benchmarking ("sort", BigInt, false)...
    done (took 6.917729677 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.91688524 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.314192406 seconds)
    (304/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.066312097 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.1229949 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.913563898 seconds)
    (307/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.165630282 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.092405911 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.147149929 seconds)
  done (took 1022.079944825 seconds)
done (took 1023.97067111 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.940758131 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934292691 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.916286649 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.938123137 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.031395013 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.960477971 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.930086469 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.919964147 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.966637383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.966707253 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.91716378 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.957414083 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.919761151 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.91914679 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.91644244 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933796167 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.232724927 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.955485594 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.939564166 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.92896863 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.938698233 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.919704919 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.967111033 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.957667165 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.920629158 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.922858252 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.924863368 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.940275605 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.033733998 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.925990676 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.922254001 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.933542189 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.232078217 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.953158011 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.916296337 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.941062657 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.9345886 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.929901043 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.923321641 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.955428645 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.391619294 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.931070046 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.923731314 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.918862754 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.919190234 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.926224599 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.923576035 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.926662788 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933156653 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934911055 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.382173349 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.947235456 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.926576322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.919894371 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.932695289 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.923613954 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.924076125 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935408426 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.942503901 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935898042 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.223736632 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.964448185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.92347728 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.941575999 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.932687481 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.421455657 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.926300802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.926930902 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.387134883 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.935332881 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.421042039 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.941338379 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.922526304 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.939016641 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.957219023 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.237084718 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.953942748 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.919917531 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.932605595 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.922390089 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.932989835 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935844697 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.924627494 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.921173947 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936850991 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.964295788 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.934750999 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.925946248 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.933554417 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.945268164 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.934356318 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.937973461 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.925463285 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.919901669 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.936030526 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.926773922 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.928288121 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.92907768 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.927001985 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.935797127 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.387905976 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947219494 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.920071013 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.919772383 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.922602235 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.941457911 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.387171679 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.933865379 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.945201073 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.973171935 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.923529375 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.226164792 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.964065554 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939189033 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.934895552 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.925358333 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.921797256 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.227019153 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.421555529 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.949625398 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.923148497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.924694147 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940402717 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.924431799 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.920444352 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.238575105 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.959816985 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939983889 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.049732437 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.936101859 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.960095927 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.925689178 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.927620623 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.968806129 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.941764816 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.960299041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.926405392 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.941259682 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.946109216 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.92122703 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.940465267 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.936957882 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.923767586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.933581136 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.922770096 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.969912793 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940593578 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.939922556 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.946467026 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.051970681 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.922556591 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.229446085 seconds)
done (took 302.50505692 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.008540761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.923902646 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.017855688 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.922805545 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.015969895 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.001688722 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.923223909 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.923554645 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.922302828 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.44080814 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.923786588 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.928186981 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.923844095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.924626519 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.998688816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.922788492 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.923172428 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.212755807 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.925499168 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.00686187 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.922516196 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.923726321 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.923452772 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.445068438 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.925887304 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.922937008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.008270775 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.924523696 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217796651 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.923344357 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.925006533 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.218507931 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.008047902 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.937210981 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.932345432 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.9316622 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.018071431 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.934321675 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.996883163 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.996838724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.019953582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.958498801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.92224083 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.925106677 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.928087268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.926131785 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.924379401 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.956261491 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.925621648 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.929670451 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213411378 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.929885486 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.932728725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.925210817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.925534081 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.9403046 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.925852176 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.928483965 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.009192456 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.928176923 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.999640997 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.446424485 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.445730325 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.926285882 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.925222084 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.926877087 seconds)
  done (took 188.425246803 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.994081333 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.999032279 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.995400161 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.934323606 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.977650005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.996432569 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.933685839 seconds)
  done (took 15.682966837 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.934411466 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928339625 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.987642371 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.987649919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.930183332 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.1063989 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.940025621 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.933256353 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.954943166 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.928348326 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.591005021 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.987868053 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.935932221 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.927816904 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.940533921 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.992159904 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.930628394 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.930564977 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.038845955 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.077609046 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.934300116 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.937170427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.954779686 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.940611002 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.93004052 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930469898 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.932499111 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.936207754 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.929316433 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.929186564 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930163665 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.994527513 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.930571716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.928891062 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92998586 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.931244574 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.931853507 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.931060667 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.930372228 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.929203705 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.929895806 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.930339261 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.93099416 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.930826096 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.930616453 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.954142448 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.929754673 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.931251725 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.930479687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.931172343 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.957002737 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931185644 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.931230326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.935413018 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.977600792 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.936077636 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.933021388 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.929598811 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931801029 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.931055822 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.931844702 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.080453756 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.991056118 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.931553099 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.99114735 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.08747341 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.932325637 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.930846774 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.931649734 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.023531065 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.932080902 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.991440457 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.932134547 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.049941136 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.931592682 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.112564402 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.955769899 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.936766474 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.936017801 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.932376305 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.939781859 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.932967783 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.935605579 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.939832306 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937692584 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.933273342 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.932742842 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.934567704 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.940168534 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.933038327 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.983976493 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.933801351 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.934932024 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.073336638 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.932550214 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.042335467 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.960229232 seconds)
  done (took 212.050964664 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.940690017 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.941265134 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.935441422 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.950092463 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.934805198 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.93380025 seconds)
  done (took 13.495749445 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.936182528 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.938074675 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.935070693 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.934251436 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.935027018 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.935712154 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.934347153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935882239 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.939870422 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.933538593 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.935830721 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.936702899 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.936765576 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.936445081 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.934026515 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.934599846 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.934738082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.934333482 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.934445444 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935737746 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.071050577 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.93744583 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.936975011 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.941269016 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.941838133 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.936045569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949313239 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.935690088 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.934610304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.941801313 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.940711115 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.936902345 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.940979797 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.941693804 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.939222659 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.940777968 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939987013 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.937732621 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.935553007 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.938125309 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.936459107 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.937104994 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.93601484 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.939363829 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.938415959 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.945979978 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.940873595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.950148096 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.936336432 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.936964413 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.936506173 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.935581487 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.939218699 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.93759773 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.943402799 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943903777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.941824371 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.937347682 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.93794827 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.942659272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.942302517 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.939483557 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.94009029 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.941078009 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.941869579 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.937697284 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.942070225 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.943867876 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938390318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.937377489 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.938492486 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.937625205 seconds)
  done (took 142.566279342 seconds)
done (took 574.090692029 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.984193182 seconds)
  done (took 8.847011066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.021813485 seconds)
  done (took 8.974165448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.86301574 seconds)
  done (took 10.726778827 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.953655826 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.951920987 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.957192072 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.947264155 seconds)
  done (took 29.686553055 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.159008995 seconds)
  done (took 9.02254256 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.949773304 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.935269573 seconds)
  done (took 15.815867302 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.038517176 seconds)
  done (took 8.903376575 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.399291918 seconds)
  done (took 9.281185465 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.955742013 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.969894679 seconds)
  done (took 15.811133653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.939981211 seconds)
  done (took 8.804500027 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.762404724 seconds)
  done (took 9.712009306 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.95391437 seconds)
  done (took 8.837048205 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.943920723 seconds)
  done (took 8.808547747 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.062724315 seconds)
  done (took 8.926302769 seconds)
done (took 164.02125109 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.945755349 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.938446277 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.937554316 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.938284603 seconds)
  done (took 29.624674187 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.975423658 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.975728286 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.983277975 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.974595876 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.965858427 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.97810153 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.974846946 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.974930479 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.965684349 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.972440642 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.976255227 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.973437728 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.975619951 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.984505233 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.984451533 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.973571611 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.975539883 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.976077246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.966494208 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.984504919 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.971908718 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.973938678 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.939588398 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.940557997 seconds)
  done (took 49.203049348 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12579388 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.004909734 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.094576798 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.986189743 seconds)
  done (took 10.077487538 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.939718929 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.003542501 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.991808238 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.985503584 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.034770827 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.043047629 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.993020777 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.14941273 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.056520535 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.066256507 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.947178205 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.961629966 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.962514847 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.985869945 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.043418612 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.941001621 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.940557436 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.057018641 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.002266098 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.153873589 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.94177307 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.995820762 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.027209979 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.995435197 seconds)
  done (took 50.085785597 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.942945004 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.950242247 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.949044709 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.943017645 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.943646643 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.943489885 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.950453828 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.944603041 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.965565018 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.944046581 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.943422572 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.944067592 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.9492421 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.943402132 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.943886653 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.956982448 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.958096287 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.943108541 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.946818169 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.950989553 seconds)
  done (took 40.825002406 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.941858763 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.78792857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.286335615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.193226617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.941410055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.941825919 seconds)
  done (took 31.960934008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.956124648 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.950323139 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.943030963 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.001626762 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.087447318 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.951640655 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.943811693 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.954618301 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.991969099 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.013460429 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.965539764 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.972846181 seconds)
  done (took 25.601672647 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.945355472 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.944148462 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.944288619 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.955416991 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.954226517 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.952663714 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.950279524 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.942398211 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.956832814 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.963721119 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.952485449 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.954673566 seconds)
  done (took 45.289733112 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.157116531 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.169150541 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.158688967 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.573596555 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.944252472 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.84350622 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.545986819 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.583990805 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230848709 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.917454372 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.91210524 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.826324798 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.184726818 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945254887 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193721121 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.866198105 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.945078519 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214017036 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.947030698 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948717025 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.23085727 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.995320747 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.158564945 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992862717 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.158909456 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.448511844 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.199680545 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.202221986 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.276948145 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.000368599 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.181051121 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.999544024 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.953315435 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.955346052 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.947666615 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.95656018 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215733431 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.94683389 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.951270947 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.946316585 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.871063678 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.228411883 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054580664 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.359080536 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.065322926 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.187162588 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.950678668 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.165331842 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.012911117 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.1728554 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.04599209 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.159522874 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.873078644 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.240184604 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.066100217 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.948329301 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.950797687 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.645934066 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.186420023 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.027413752 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.23896704 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.052982913 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.94927583 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.034598748 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.945903225 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.059286734 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.319960873 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95258619 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.947398186 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955191809 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.043633112 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.161168497 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.948047029 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948004838 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.965825429 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950929362 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.298458548 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.5407174 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.948179976 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.516417517 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.453238722 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.922965646 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.461231602 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.001413883 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.233602663 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.163661484 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.13115066 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.193318737 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.853149998 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954023993 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.755404786 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.029432648 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.030261809 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948849328 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.16948584 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.232760258 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.061054111 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.949577729 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.875385297 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.960438182 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.151878416 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.441454435 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.014663712 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949359923 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.949958486 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.952863025 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.951621699 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.966170526 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.960984018 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.470842154 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.230204298 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048266747 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.207934615 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.935473195 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.630197493 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.215358726 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072750647 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.503926292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.079237948 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949992121 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092822662 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.958029321 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.95327193 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.321196954 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.358070242 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.171657975 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.199107341 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.960758884 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.977119698 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.956072772 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.03421536 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.177381977 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.952094215 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.198671185 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.194062047 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.60863532 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.961810452 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.021823926 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.961305655 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.165151228 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.03341167 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.475914091 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.168154559 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.560728449 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.943322339 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.452492861 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.178286716 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.33012585 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.967508957 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.173844728 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.995744102 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.659561016 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.88060014 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96051703 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.287965115 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.091976302 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987384263 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.956896078 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.957026969 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963035371 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.036356446 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.025701818 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.030857259 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883602461 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.959044195 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958445551 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.956442017 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.47598867 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.578562423 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.243939687 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.956393806 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.015784262 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.956920571 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.563979888 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.959654668 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.079022476 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.96302825 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.623885002 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.982636632 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.184510444 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.347786275 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.069722506 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.956569047 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.956809243 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.656405085 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.965483959 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.656694219 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.235405938 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.950548633 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.403714212 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.015691 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.143577006 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.97217456 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.95772817 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.959652988 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959262848 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.160356924 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.466047863 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.261364622 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.300335433 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.046371611 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.221121203 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.143313312 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.511018901 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.641060085 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.461223526 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.183372957 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.960296476 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960731258 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.60991085 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.966402789 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.173667826 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.161259617 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.231563157 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.248109936 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.366042861 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.96428166 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.972914231 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.201156778 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.959756658 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.388224141 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.959435715 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.282862303 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.764397547 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.218034104 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.019499502 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.971739288 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.601115763 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079411033 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.914323943 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078171401 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.885825743 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.584580324 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253610644 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.229094049 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.936433968 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.298111811 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.249919845 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.192174122 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.584196379 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.960295523 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.007037513 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.03984958 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.966141847 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.536382002 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.00712907 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.006711275 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.964899973 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960335522 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.96275801 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.635207161 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.040594103 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.080081897 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.663528161 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.496268653 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.87665382 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.224882049 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.011997695 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.418917094 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005045992 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.175055285 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.966446056 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.568346798 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.015832827 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.230095711 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.917462978 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.175500507 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161451374 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.990869442 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.967729331 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.888213939 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.840686313 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.965234675 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.183332889 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.855596604 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.965622295 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249560677 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.610322009 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.004406556 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.964653771 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.265998622 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.332507159 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.236025277 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.969839389 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.174651371 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.084452548 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.881043348 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.452899719 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.544022853 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.661209763 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.972876513 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.164803764 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.266251722 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.279823654 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.006061545 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.032977542 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.228153689 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.937123506 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.962010639 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.482005773 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.059437721 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.203417966 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.268854074 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.505700405 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.316945611 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.357760952 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.020764879 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172105299 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.332502374 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.204849365 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.965894165 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.055615524 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.178129516 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.24331135 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.852616258 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.67372118 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.206375013 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.968552889 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.915609137 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.170994476 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.462864665 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.320871073 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.501440109 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.191305442 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.997472149 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.455066754 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.980578501 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.899862205 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.965436428 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.912248182 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.180491267 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.194288028 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.010287107 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.52123728 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.189536961 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.356967141 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.243378056 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.009067241 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.889905475 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.583127137 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.913226867 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.977001146 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005092537 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037779883 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.969038 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.169386271 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.404260158 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.011884213 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.496440286 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.167799502 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264921764 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.227312894 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.257155997 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921650917 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238698719 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.918114332 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.626604122 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.059784307 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057651948 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.966328614 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.969470337 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237615004 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.26507453 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.574511718 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.008268106 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.269221994 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.061556014 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968354167 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.97225827 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.486301845 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.21018602 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.180307496 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.044214582 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.093808439 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.04140255 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.481134808 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.971680309 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.970439975 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.10320803 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.966817711 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.609664653 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.259698567 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.69687257 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.170645127 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.487500927 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.840160455 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.195740233 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.018031612 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.967448459 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.980114205 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.972736433 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.207419925 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.253986044 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.726043628 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.973337385 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.967826031 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.866657135 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.5777849 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.204955199 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.975946038 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.03021882 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.97182656 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.086491568 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.968603736 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.22946078 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.017716258 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.969088259 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.975942363 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.182572908 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.483483391 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.986493889 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.669030699 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172190975 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974869387 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.459675484 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.424359139 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.262006699 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.017467811 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.200192519 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.221383542 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.488119942 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.205578378 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.97531002 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.196911825 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.972141613 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242652351 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244319725 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.970831421 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.185949325 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.486122192 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265241285 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.980929466 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.868451284 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.971786607 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.230311144 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.019153379 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.970422069 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.978807408 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.511481889 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.578390398 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.447792416 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.122435818 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.264360377 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.681410139 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.72684256 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.974323273 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.97513498 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.58121942 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.716187836 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.185799603 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.259753753 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.920717919 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.174641377 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.676619161 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.971930607 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.235576352 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.898778665 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975066178 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.625615606 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.248581189 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.907503944 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.977711907 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.556746381 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.971986263 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.056835417 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.97342236 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.089149588 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.238136442 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.31451555 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.08039537 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.61154031 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.599032349 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.912435328 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016781808 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.779610305 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.541865152 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.592522585 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995478881 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990176826 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.899457787 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.976063303 seconds)
  done (took 1690.278321714 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.993147498 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.007442537 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.024856834 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.051929762 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.00700959 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.000679399 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.011169727 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.996853293 seconds)
  done (took 57.992230507 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.973049275 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.989540118 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.978314278 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.973168015 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.979006301 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.9748 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.136346949 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.98772187 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.001582933 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.979660422 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.974960215 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.975728483 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.246526973 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.996236623 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.97526619 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.983507124 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.978602297 seconds)
  done (took 76.033940616 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.976412232 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.279800366 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.022391077 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.978287228 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.846298447 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.979504948 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.119698435 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.007412661 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.981826171 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.123950993 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.272731921 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.029658331 seconds)
  done (took 91.518418414 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.981739066 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.975595807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.977109244 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.977471253 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.977196726 seconds)
  done (took 11.795213619 seconds)
done (took 2212.217098286 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.320031054 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.034707482 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.076519335 seconds)
  done (took 6.012124362 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.124575786 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.168436335 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.281792813 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.041867071 seconds)
  done (took 10.524109406 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.236712208 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.369551137 seconds)
  done (took 6.506732692 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.339727621 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.980006084 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.365451673 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.978099043 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.980132521 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.981675337 seconds)
  done (took 22.845791402 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.976905594 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.978078525 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.978412142 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.977522214 seconds)
  done (took 9.812727885 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.976104669 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.68297366 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.976241963 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.987333424 seconds)
  done (took 21.524571693 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.12111914 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.987020838 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.115913975 seconds)
  done (took 8.125654931 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.198196512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.988093793 seconds)
  done (took 7.088043833 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.123651084 seconds)
  done (took 4.024872422 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006584039 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.250839898 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.449156004 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.510713651 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.563210444 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.754693112 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.303144535 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.253881178 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.378405826 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.41280583 seconds)
  done (took 25.785766198 seconds)
done (took 138.157680842 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.344665145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.993593513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.180049361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.350383092 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.210434674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.181798278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.198343382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.336515791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.027387787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.013279466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.353327531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.207099819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.14528765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993998491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.153603244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.996275271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.20978451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.370486072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.022721891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.266407267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.208265008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995712364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.190010231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.010796504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.211750172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.136166638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.538860891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.996236329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.164834264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.548086235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.13847977 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.416630771 seconds)
  done (took 172.01556105 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.980906592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.981367019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.981033418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.981519988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.328544565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982692375 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.983180498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.982153204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.229595243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.220031441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.981530431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.297864206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983367424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.981966343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.982715137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.982558751 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.379240239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.982159156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.983095703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.983068479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.983324679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.167740006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.983093051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.164212387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.369915839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985324278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.982392076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.981666114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.983229836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.982415429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.983002529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.983191488 seconds)
  done (took 211.645500953 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.981814744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.982214317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.984697653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.984233973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.984641437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.983894055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986407502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.984169657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.641393401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.623366001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.983230281 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.984507731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.987186877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983820155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.995135367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.98390013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.989486455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.984458344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.986682065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.990720686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986889713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.608862535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.991518681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.61768383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.982782786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987345412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.98511502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.985033178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.984400016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.984714924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.985658889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.98504081 seconds)
  done (took 224.001037154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.225700632 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.985632616 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.986650615 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.999728509 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.986679244 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.985964569 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.993822473 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.231200464 seconds)
  done (took 20.305717706 seconds)
done (took 629.888248201 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.326995108 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.719085572 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.130450327 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.010874316 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.243605718 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.050940483 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.003778968 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.06668492 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.841004877 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.080593194 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.41142942 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.013829189 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.804627779 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.032766017 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.123773804 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.063467479 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.345077609 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.669713001 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.143232418 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.656600513 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.162144098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.928241944 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.084044368 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.88232931 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.427616808 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.961575897 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.033421913 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351800342 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.010790833 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.162080769 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.639110601 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271815562 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.022887891 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.008240797 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.058217755 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.037412016 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.212076395 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.019263921 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.127568906 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.724361272 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.670636843 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.728857463 seconds)
  done (took 105.175249613 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.9961455 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.992301806 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.992852908 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.993406592 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.001941325 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.992495408 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.993045142 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.992605126 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.99221525 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.992444294 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.993550299 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.001320429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.993382119 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.002810001 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.993338805 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.994288873 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.99298306 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.00284418 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.993624259 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.993549244 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.992692299 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.993564535 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.992694718 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.993488556 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.993696303 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.99374727 seconds)
  done (took 53.785798562 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.988936754 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.152314157 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.229337789 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010545659 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.990578269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.992711425 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.0192316 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.996744999 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.991559765 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.991483809 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.107875101 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.994588072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.002814936 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.230563328 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.007587707 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.99133732 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.990222709 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.991377687 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.16109297 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.00688862 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.020965982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.999157158 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.020524399 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.00726819 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.992803634 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993098298 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.994963775 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.404668598 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.003344222 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.111255127 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.035134398 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.025632456 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.338162981 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.245121466 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.046923152 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.999011026 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.991132332 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.116787395 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.997924508 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.992426155 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.020867261 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.000774604 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.234585222 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.525223577 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.0070316 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.991498725 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.405308688 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.126779067 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.033270897 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003382567 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.241142125 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.010271971 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.991228302 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.993154696 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.029672358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0049487 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.993612622 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.256868694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.008665397 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.021607284 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.000559554 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.994244342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.168559344 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.002489082 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.165532268 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.003703918 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.000321334 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.994442761 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.238565105 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011294505 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.534573638 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.009374754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.992964428 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.114416456 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.169042034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.43100847 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.006952319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.172164007 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354417963 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.03236352 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.006197915 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.392725418 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.036265639 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.005358923 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.993888805 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.993941572 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.993493728 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.040375372 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.020777716 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.451405144 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.535506307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277252286 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.03513811 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.00759545 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.995247631 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.258767857 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.006077882 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.994330906 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.227400327 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.547219948 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.009909848 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.001369175 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.514592137 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.012011789 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.024853911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.007604921 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.247744454 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.012656223 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.042367023 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.995706669 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.002414262 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.998145199 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.024564401 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.006678296 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.99454608 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.509890841 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.133963295 seconds)
  done (took 246.758436496 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.997589335 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.995718812 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.995269232 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.995642702 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.993954843 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.995772023 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.99565412 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.994236209 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.995488619 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.995130556 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.994142355 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.994870157 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.997606428 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.995136613 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.033149917 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.996900586 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.487524637 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.996540734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.995726034 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.998239653 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.558614858 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.998868831 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.995283446 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.996998433 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.996113933 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.996870733 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.002667992 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.030845618 seconds)
  done (took 170.943417946 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.996397576 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.051273925 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.010253469 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.044448098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.01006333 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.99750862 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.094230623 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.016024619 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.004016651 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.997898589 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.997116332 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.029240516 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.006838198 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.09461288 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.02851453 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.103553559 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.099808997 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.005703766 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.99819172 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.998147657 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.045610907 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.011845246 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.02952137 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061333175 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.010082921 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.05495921 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.012002864 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.999946977 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.999462422 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.112058124 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.019683307 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030315801 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.035476912 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.020391367 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.11618433 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.114323324 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101384512 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.101021892 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004444048 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.000382007 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.999502994 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.000843729 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.05666093 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.012239668 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.00143532 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.115279202 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.020338908 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.000290873 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.999818668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.000471783 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.012991762 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.017829562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.036767862 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.124690793 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.049696925 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.029222577 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.097285271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.12048461 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.003146638 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.096844721 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.0078575 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.113515771 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.022350658 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.002582002 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.00312069 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.00535333 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.049295485 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.110841194 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.104413084 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.007561836 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.097587588 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.056813564 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.01392015 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.002114364 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.002080452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057509868 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.111232026 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.056258745 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.063070575 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.037313723 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.011572197 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.001661983 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.003645388 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.030568356 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.009868831 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115072836 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.120287494 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.009729145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.002162774 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002800032 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.002726698 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.027445699 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066048556 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.043005014 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.108987315 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039887942 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.0413068 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.010341768 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.016325821 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.00782839 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037354398 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.010488556 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.013877234 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.2824582 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.035073098 seconds)
  done (took 216.161694994 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.373317526 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.04735043 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.077271831 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.276261196 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.357186968 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.902229838 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.043462028 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.051557181 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.060264998 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.181247707 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.115742616 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.092745086 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.040450206 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.025869456 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.046829652 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.063462081 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.076683575 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358052155 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.240682714 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.532414707 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.042168537 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.327805069 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.381516196 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.401198971 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.103038351 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.433941997 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.620633632 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.152625009 seconds)
  done (took 66.356966166 seconds)
done (took 861.092709771 seconds)
SAVING RESULT...
DONE!
