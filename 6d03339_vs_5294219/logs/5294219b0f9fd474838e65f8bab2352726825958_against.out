cset: moving following pidspec: 7202
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363315719 seconds)
loading group "string"... done (took 0.552990162 seconds)
loading group "linalg"... done (took 7.23652134 seconds)
loading group "parallel"... done (took 0.153168209 seconds)
loading group "find"... done (took 1.126036291 seconds)
loading group "tuple"... done (took 1.782175381 seconds)
loading group "dates"... done (took 1.193213291 seconds)
loading group "micro"... done (took 0.232882692 seconds)
loading group "io"... done (took 0.916054674 seconds)
loading group "scalar"... done (took 37.72515088 seconds)
loading group "sparse"... done (took 11.701436951 seconds)
loading group "broadcast"... done (took 0.920415775 seconds)
loading group "union"... done (took 12.319948536 seconds)
loading group "simd"... done (took 4.1111769 seconds)
loading group "random"... done (took 9.24501056 seconds)
loading group "problem"... done (took 1.884748458 seconds)
loading group "array"... done (took 20.662008384 seconds)
loading group "misc"... done (took 1.651853586 seconds)
loading group "sort"... done (took 3.087249323 seconds)
loading group "collection"... done (took 16.51573475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486405699 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122969101 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11403208 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118559346 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145699684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114583735 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122450876 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08342934 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773402557 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148464218 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118325812 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413551633 seconds)
done (took 5.061104896 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173195413 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082898259 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081110453 seconds)
  done (took 1.298739563 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066412511 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120742585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066263163 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067104798 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067712239 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066455446 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067280067 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067238122 seconds)
  done (took 1.658410664 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073363217 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069257565 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070281701 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068636553 seconds)
  done (took 1.418875597 seconds)
done (took 5.760744853 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767399423 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205929737 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182792162 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397933613 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129378848 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15408703 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637005951 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312619011 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183055337 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080938699 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104363647 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320711323 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110919362 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638695836 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073337374 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09093538 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138824975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420369988 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067835797 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082078324 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088426116 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128605573 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08520767 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074718973 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141508065 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067492489 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136941416 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07904717 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066247875 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207906769 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171798068 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652051704 seconds)
  done (took 10.173725532 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096880465 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096871969 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068528834 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136954323 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096485839 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069405558 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070997025 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067751459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086935322 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127825246 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088771889 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101103612 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065197545 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068905926 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084557302 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203288321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079320485 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081221181 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07084482 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075321163 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118840595 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078038084 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07776029 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077685825 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1283833 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179702882 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099398805 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099170636 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066613113 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080427419 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115040266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125581097 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065294771 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065910151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124143527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094094365 seconds)
  done (took 4.604080986 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.287348044 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140351049 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090480017 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132590479 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064785165 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107098365 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06537418 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080415024 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199617829 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.376398486 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571586765 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110720824 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103899901 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067931799 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068384123 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067105031 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340388205 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107765833 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104444445 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081684559 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06942197 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068521092 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34248465 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067749123 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063562541 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067468157 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057874707 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123626697 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067372784 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92412542 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125985488 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066993872 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101122379 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168150727 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087206362 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273907458 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070422919 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065551097 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151612827 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070540033 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066338746 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083717645 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103716193 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112380024 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065908919 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066887795 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161375283 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065234139 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078489314 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.97387832 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153560392 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094976951 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063825693 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24498583 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085870503 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069191572 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064695862 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174498058 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13645266 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069599339 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067815921 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069021376 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069091133 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349323799 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065583865 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.79180345 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070179564 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078723392 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06967213 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068908142 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072303904 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072311245 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08474793 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069191832 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075022463 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065767675 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065596921 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066299959 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083982204 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090184073 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.351975942 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066444937 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067763803 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064505111 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085780064 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097017494 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066333865 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064896624 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09941847 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067903069 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065971564 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.210477053 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06906834 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06687904 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065900985 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08817708 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069366435 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113217723 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066218042 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064421477 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087341004 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072461874 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099224669 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069734772 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099400034 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08108923 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068279231 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395373323 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065977229 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065222606 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068748354 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065878668 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067160401 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066687783 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079286055 seconds)
  done (took 20.964695064 seconds)
done (took 38.165781928 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233078222 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076017419 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075251809 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074966819 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075283935 seconds)
  done (took 1.76191736 seconds)
done (took 2.971877255 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119459699 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098670607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065062376 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095260997 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06404768 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099570869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098880373 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080452773 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098324789 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064181189 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095563991 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063868606 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063957436 seconds)
  done (took 2.331562785 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082790977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083442781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069203646 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081947965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063982013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08128773 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08032559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088389066 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080745329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072003802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063368794 seconds)
  done (took 2.048274259 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082078314 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083585719 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068969486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080827615 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065781087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080798365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080629163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084993736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080669065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073173446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063565808 seconds)
  done (took 2.045458987 seconds)
done (took 7.61953514 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077689444 seconds)
  done (took 1.269221367 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587725748 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.1113461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080969441 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11197916 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183200776 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11916823 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278538214 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086603792 seconds)
  done (took 8.931977125 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10131627 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07231729 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072920854 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070264449 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.0690272 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06801301 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068370772 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071246362 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07091596 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070703158 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071165544 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068625313 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070698687 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069117233 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06883319 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069355504 seconds)
  done (took 2.415262685 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091892784 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090682941 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074097804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074515036 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071952248 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07214646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074537148 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073267176 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07084262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072425037 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074515815 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073339864 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071328264 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065112493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074344318 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07558975 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070664523 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074099443 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075140506 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074849991 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075031186 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064548176 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071474161 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073775849 seconds)
  done (took 3.077607994 seconds)
done (took 16.893803752 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114345842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071919201 seconds)
  done (took 1.384159866 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082590443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084181204 seconds)
  done (took 1.371535744 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08361485 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065612651 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092296626 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078834653 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066162112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065401584 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089830623 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066187197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066072996 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066713575 seconds)
  done (took 1.946175184 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068503604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078824764 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071055289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081611829 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074712412 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064475933 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072738414 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067800122 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078814876 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062915912 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071456399 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082787836 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071509549 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084526737 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072523272 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069221889 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071390479 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06742452 seconds)
  done (took 2.519636236 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066018556 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067322581 seconds)
  done (took 1.344167537 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068023719 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063206116 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067381291 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067687369 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063698265 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062508638 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063469579 seconds)
  done (took 1.661448372 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385407931 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109920517 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305088482 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072023134 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081098877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250959434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06546409 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070472304 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070500097 seconds)
  done (took 2.660544164 seconds)
done (took 14.099929354 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078538796 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085285228 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094797685 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.361335968 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092085005 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065790918 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113980288 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189475948 seconds)
done (took 2.301835302 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214072397 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616064369 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387920132 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196329001 seconds)
  done (took 2.415315548 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328283438 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086296171 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058712997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067232909 seconds)
  done (took 1.761885967 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065685975 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068943942 seconds)
  done (took 1.351309525 seconds)
done (took 6.964920226 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06646044 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086597752 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065662007 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064303693 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067135136 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063324995 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063349277 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066430756 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066012351 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065669162 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066000525 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066051846 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06614093 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06638369 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063814465 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063227754 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063868092 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065804142 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063360167 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063382579 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063650952 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065695028 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063073464 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063549259 seconds)
  done (took 2.830806272 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083185689 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066868962 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071623103 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072072304 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070183171 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07409565 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07148836 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066366527 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071630066 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068639575 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069745182 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070201145 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067733126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070040778 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068063279 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069729119 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070837129 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066441647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067821253 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070002008 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070845279 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066321882 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069809151 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070804523 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069602616 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070796963 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068087226 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066564431 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071291159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069884576 seconds)
  done (took 3.328316929 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069690027 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06422965 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064843641 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070820571 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064154097 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064725926 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063311789 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063880916 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064496917 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063378827 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064734142 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063386565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063463551 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064320588 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0646695 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067138143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078891704 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063706966 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0635625 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064251152 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066984452 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063347698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063592976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063410103 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06364804 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063449769 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064065681 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06347125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064257902 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.176056701 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066442636 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066800808 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063382092 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070148392 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067347928 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063467697 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066975927 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062675241 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064115882 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063154594 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062902298 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063408913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063109254 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07008895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063683714 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064928613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063679466 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064685671 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063480315 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065544662 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062508606 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062884714 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06494086 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064591602 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067389596 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062643634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063783046 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062799428 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06495361 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062883904 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062938003 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063000357 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065152953 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063758189 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077459042 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069268582 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062842947 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06532053 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063724823 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065964302 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064501347 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075808051 seconds)
  done (took 6.033528346 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090188391 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086827784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065736644 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064861991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061828998 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064078161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067416789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064063226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065419063 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069678142 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063833565 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065407375 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065138106 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077033661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06447824 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065325101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069776039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061931846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063970948 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066860603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064077007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067022086 seconds)
  done (took 2.735666511 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154970456 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070827566 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105691793 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07313453 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067556046 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073435764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070298254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070164338 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070412953 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068688955 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068267518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06975715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067328626 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068056767 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068312239 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067898478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069825728 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068107009 seconds)
  done (took 2.607516846 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077756489 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066307074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086237058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066578682 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065902889 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068215441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070787112 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07427158 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06809036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06594648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073742374 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067944211 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068697645 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065821506 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068247923 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0655065 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068919467 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065847517 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073741349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07047488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070701174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073984828 seconds)
  done (took 2.780183875 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079370863 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068000497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082777208 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069627728 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062163476 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064103767 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07026969 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065665703 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069540949 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067158259 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065686951 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064763951 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069384882 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065521225 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069198966 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066175876 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067323273 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06588891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067150102 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061452296 seconds)
  done (took 2.598368836 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087111752 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067636126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067974157 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075655825 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067209091 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067132745 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075545616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067528426 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067065037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086566178 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066760491 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067525114 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074775418 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072142539 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066884238 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074883257 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074496993 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074529278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066933806 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066812194 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087334452 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067154716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074780489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0668719 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066991965 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066850622 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067737944 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071866559 seconds)
  done (took 3.243506891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066587365 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066625552 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063803992 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063763071 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063723357 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063255578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063565311 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063387264 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065694561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063485527 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065147136 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065618472 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066237031 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065521855 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065791577 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066247419 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065996696 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062957552 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063429026 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062968194 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065846479 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065570625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06549341 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062868221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062902707 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065384157 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062903637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062931132 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06538493 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063166716 seconds)
  done (took 3.178979994 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075014539 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072517413 seconds)
  done (took 1.390864953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062872948 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079803094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062676896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069416169 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070103002 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066701443 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073164785 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069644242 seconds)
  done (took 1.793659454 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081580265 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077313805 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067393326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080288274 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076026623 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082523004 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131375903 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067119716 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072503122 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064234529 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079348517 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065443095 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07223806 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06601252 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07145397 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072389346 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063929609 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072212044 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068038177 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064470339 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067147094 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074165186 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068074951 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062056543 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066857293 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087272973 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077128443 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065385145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068421882 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073317718 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071401455 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059963102 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065783069 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066416527 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064121078 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075606031 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081236155 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068910681 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074511827 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066560529 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076611084 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060983047 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070610687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072487147 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075304014 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066135593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066705543 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061165051 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063799258 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067978175 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061755063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066248198 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060949509 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075017339 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069592372 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076840753 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064478939 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067611452 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068791938 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068748483 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072715026 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067979288 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06813524 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06559693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075724166 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070713967 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074784233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061560157 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060488013 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064232778 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075742561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087890641 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072160376 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066821596 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067448568 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064226174 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069494937 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06736042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072070775 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072805696 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066297095 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071775736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074076709 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066512549 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068765253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074755612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065049698 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069650463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064204486 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082544771 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065592638 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064670592 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064384247 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076905602 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069420952 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066839846 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064697309 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07339833 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060255588 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066814018 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06641799 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065930883 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075000314 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069464065 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070469745 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073601641 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072314116 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065515524 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067699976 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061899413 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066028125 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063999347 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071785128 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059246204 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067367043 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065632838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065538024 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200765704 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065302198 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067706423 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074629086 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073475091 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065967822 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06405716 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070124414 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066791196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070294186 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074474409 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065260449 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061978785 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062233576 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070515189 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067049119 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070195587 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070730461 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06921133 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061334352 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064307985 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071917908 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075892861 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066309703 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068244923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072496889 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068319563 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066017043 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073800239 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069655251 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06581021 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071676791 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067469551 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061742158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070033537 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06941336 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065848089 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070375867 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070018667 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068877375 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067736948 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065058182 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07428302 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06787297 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065698871 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066729155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065247836 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077911036 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068409898 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061820644 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063182127 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075812766 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065063242 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066656793 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066186124 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068804117 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067418505 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064938566 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065893522 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069056964 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077783601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070823597 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06766962 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071391821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077582848 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066533995 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068742056 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066243173 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067941041 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066971826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075179647 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071705156 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070636057 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068575149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062570597 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071533276 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073086881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065468186 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06374316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065120315 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070541274 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071265813 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070290209 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066959585 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064020717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066565968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069105577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068699786 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065829427 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065465417 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072601308 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064108957 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073229684 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067384438 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07626488 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069187425 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061356716 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069155151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064064606 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07158319 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061106005 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063642698 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065065898 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06659544 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064239162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067199151 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059046526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071340779 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071522244 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065480684 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064138962 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064631667 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071005275 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066266405 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068372254 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068370733 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070655278 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074570059 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064109135 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068218 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.20310292 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06726959 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061563783 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072643833 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065383349 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064793112 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065788985 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064354275 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070063953 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076234177 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073456059 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060188125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069889779 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065758592 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065807795 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06267319 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071559229 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069949956 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06810517 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073490036 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068479484 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06727231 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070568273 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065827238 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067315329 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067593469 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069575905 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066954349 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068980995 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066824243 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069782565 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065909041 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065038528 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069234276 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066407415 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067179214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071919077 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067009269 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066327569 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069741033 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067935513 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067549454 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067386955 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066503086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069636902 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067480347 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066906624 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06946979 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062280743 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07343456 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066306183 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073417269 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06691859 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063449539 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073606303 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06896772 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071843285 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066913787 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067611085 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068465749 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066218017 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069688413 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073053459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063704384 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077059054 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074693301 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067952899 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069145028 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067016512 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067709395 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065194661 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067469325 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06678485 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066882234 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065787563 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070500308 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068471326 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066106562 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067539645 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066984819 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066226307 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067029306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060681738 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065265034 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065289922 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065776099 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075725014 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066689957 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065652918 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065076732 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067680763 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064795486 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062859675 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074989441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075435592 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067285013 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07360161 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065290209 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067735786 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077482595 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060946802 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064820077 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064807696 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064349795 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073146987 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067175793 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075237985 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065584746 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064965721 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062927411 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066036418 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063423302 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059726882 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062664764 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068301843 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063986261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063920319 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065064145 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067215143 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065938283 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073835842 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064020089 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065892474 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065002365 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194569033 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066243969 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066674416 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069574848 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067586237 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064488624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064884267 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065810154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067339782 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067964444 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06584023 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068932162 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076315776 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066787124 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069854848 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07042312 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061933111 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069196774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066832335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066664456 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06524981 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07047268 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069958151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068500759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075187582 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066428625 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068128331 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067002952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064468408 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067359731 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067115095 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067836403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065839294 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068753487 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074682531 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064767262 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069502043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067032838 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066862701 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073182063 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067484057 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070229928 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07336672 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067161072 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068327148 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075269499 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071689123 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069881805 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067529663 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068181533 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072831771 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065504452 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072605856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067789239 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068046531 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068087126 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064595607 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067044795 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06655155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065927118 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073244103 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066646125 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066336962 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0662335 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064331897 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067671815 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069660729 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073956711 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068889261 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069744786 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06143764 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064208277 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067350049 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064215253 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067820708 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068947193 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071944372 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068259701 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066536634 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064708725 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075045945 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071434991 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070059367 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064061516 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069567853 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066804265 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067886316 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066684633 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066185714 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067585082 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069601591 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06799863 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065506532 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07279009 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06983258 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06678497 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067821771 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067012816 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066728954 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061768339 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067304434 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068340969 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070997738 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06870634 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066156135 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076473332 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063998313 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066113396 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069174673 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065117082 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069781771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061048923 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066833349 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066024342 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065767766 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060499901 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064021565 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063206389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067086095 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064144426 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060133209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074926521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073411549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067912619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.195694523 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066944063 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062024925 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063916275 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067086636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06844757 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067810723 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076474717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065101339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065357911 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061566961 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066808268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070187928 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070010436 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063872896 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062116542 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065735865 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070180733 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072460261 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065812071 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066355168 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06985597 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06911076 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064665985 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070438297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063396966 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070194404 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080371458 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068460027 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067891031 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073093002 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074731428 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067802619 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062130087 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068126825 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069855476 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067561965 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067504202 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068594667 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081898402 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069398141 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066297373 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065689854 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068867609 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06548022 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074422487 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067832396 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067370987 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071327178 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067890033 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075889336 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069163222 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074654711 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070052846 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069770919 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066253385 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067261431 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064542631 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065573478 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06746217 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06782265 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071566086 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07475238 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065992258 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077539223 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075461477 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068483455 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063427569 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06589626 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066178458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061676243 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067327348 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064450798 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064255561 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064005744 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064878156 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066889432 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071163846 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066888974 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06673565 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065865908 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060386707 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068212252 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068152592 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066895512 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062749477 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066077058 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066675964 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070059966 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06947657 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064291444 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067860943 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067527467 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066853299 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061526872 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072572282 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064888876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0680682 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065472609 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066957057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067533218 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069663648 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07103881 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067587486 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068847059 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069786474 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06836867 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063851084 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063459221 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07087532 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063881233 seconds)
  done (took 42.501147644 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100556974 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06304705 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062613125 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06240502 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073435171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062875941 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061595994 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062979866 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063753591 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065178476 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062096411 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061837336 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07082315 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077547523 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073528508 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066406802 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062026916 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063118346 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061921181 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062805015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070937281 seconds)
  done (took 2.754213329 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073811896 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070625807 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072550263 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076022281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067406862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070588608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072650546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07054416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076378297 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067120984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075814916 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070529571 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066984512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067264186 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06756718 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070980302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075883236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067508089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070710833 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072619819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070531769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07208105 seconds)
  done (took 2.885212022 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066870949 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066173545 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067729879 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060784392 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066372487 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061897235 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.077815316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063455124 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069038903 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064552524 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064998562 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065055133 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067548648 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061066888 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065821081 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063883499 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10794172 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069038308 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065147048 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06681591 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061752012 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06762451 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061285017 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061917556 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064915661 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069411811 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066712843 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063876099 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065203614 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064913716 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065281903 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064099187 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067247752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066072181 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064847672 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064611895 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065282877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065164838 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061393394 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063659416 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06609863 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061809534 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065704151 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066796894 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063613917 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063635034 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067706077 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065382182 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060847986 seconds)
  done (took 4.560245201 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080089964 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108879617 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067202316 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088487001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080432983 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075529243 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068821596 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088826574 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06327104 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064061745 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081299974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079232201 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065551401 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069826905 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06917405 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065761982 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066653261 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064315707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069336395 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064907716 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069398778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07159031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079944057 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078427219 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069596151 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065388147 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064972909 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069515662 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077865869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070044121 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069924023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070916898 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080176844 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067312769 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064438192 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067183709 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081217847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065425393 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067986586 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062972927 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067351662 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070011221 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071785125 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081528609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065670803 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0709926 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065865348 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062764904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078307757 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067473429 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073477951 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079944733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068982115 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06547078 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069616396 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080289684 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065465193 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063596803 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068236101 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077522844 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06362848 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068916719 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079284929 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067287463 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072091147 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07951685 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070411273 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06888392 seconds)
  done (took 6.336597797 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074976948 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072703877 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080646196 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080454678 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071901778 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071963534 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071893809 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072319411 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072305784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077368033 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072220592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09259723 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067223011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074615988 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072639029 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072366788 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072305287 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072247535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072474872 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072163196 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072828381 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079437524 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071938095 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079918226 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098141344 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067433993 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071860275 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072213094 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079790452 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072043549 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078956821 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071820182 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072321422 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080336582 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078729252 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071845092 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065182066 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07199723 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072583584 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071989076 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067386674 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08032373 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072011418 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06710227 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072663081 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072121195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080400235 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079496666 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07505037 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076964977 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071996775 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079760702 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071883671 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072605885 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079647551 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104247288 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07971113 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0800117 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072091452 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079496343 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079732426 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085833493 seconds)
  done (took 6.032415826 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083034045 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074969059 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076491862 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061066328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063946184 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069871032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063715688 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063892493 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074534501 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074534208 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077008535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069798333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072596942 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077072832 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069619682 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072739911 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06956877 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070552042 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074483053 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069917687 seconds)
  done (took 2.773079303 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073336073 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082524594 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067318122 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071898896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068587863 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071148614 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068025012 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06906956 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066876911 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069028664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075619123 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075748064 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066621567 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071977919 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075516158 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071783646 seconds)
  done (took 2.481221789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075315463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072602805 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07926746 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065925291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064413162 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062281811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065731096 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062037849 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06228854 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077552482 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065741126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068482386 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06569622 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064736866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062922495 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068514121 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062389957 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063203508 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065680455 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077928483 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076648295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06432453 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066850189 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066089898 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066181876 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070524462 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065588735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063328549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062842792 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066050209 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066643468 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06964956 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063144255 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063806608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064172972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063479923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065391082 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066293728 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068703202 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065736373 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064463704 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065988773 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065661673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066930895 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061995291 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066232654 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062624802 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068011187 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064030189 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066388664 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066244068 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068300207 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066474854 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072650461 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068917468 seconds)
  done (took 5.009686241 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079452206 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069597379 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061836823 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064750959 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068598141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067047559 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069234519 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068246811 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067609273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0642618 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067949529 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068712099 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067536665 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06957603 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068010305 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069714199 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062228291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067919385 seconds)
  done (took 2.57039933 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071777129 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066179643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073563674 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066174121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066046064 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068079653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061861122 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064694687 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064817377 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06601697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066008332 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068017348 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06465627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068047055 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065638636 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065447937 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06815059 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064491982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065900334 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062053252 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068429419 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064995045 seconds)
  done (took 2.803710603 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092502533 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080979592 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136641316 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080050154 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.0828821 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07161815 seconds)
  done (took 1.88883109 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090541967 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079452556 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066406736 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087806052 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073821181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068215809 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067383524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0676492 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076170369 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075893992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067515592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07634143 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075773967 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075702143 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073237071 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073161813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067538231 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067578327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0658567 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084349128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067620915 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075621539 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067549245 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067115707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067413113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075189529 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076027777 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07611381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067143531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075593033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072700315 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066960707 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075959947 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075747698 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068802308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07642644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067126328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083873128 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073064563 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075227728 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068480432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073734742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075577825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072746755 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076455893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067860302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072123917 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067525249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067481463 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086120604 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073397886 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075368441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073601857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076284869 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076237633 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086036002 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076493193 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075633062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073241257 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078566754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075380812 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073052338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075073002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076303419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073432935 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075324132 seconds)
  done (took 6.222925437 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082241863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086236773 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06813707 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076719114 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075536266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067865785 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067774241 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067478819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067527933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067453236 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107958434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067703222 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076038987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07566258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068103814 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068027091 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0677832 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075884412 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067446319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085918248 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067908749 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075496172 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075897321 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075562067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076331115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073033704 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067698126 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06799168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067697982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067517085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072479826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067948919 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075832337 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066923077 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075478451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067729938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067350036 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072667446 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067602022 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073534323 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075463617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083625905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067414176 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067441547 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075910645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067429068 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06735597 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06751749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067636404 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06697096 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07649974 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076352623 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076213178 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075385163 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067975344 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067820343 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067932032 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067631697 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068601278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073837889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075573948 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067332007 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08604904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06793555 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067539725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075875671 seconds)
  done (took 6.140936561 seconds)
done (took 128.697359132 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182090243 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164892529 seconds)
  done (took 1.691026841 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069880829 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096635828 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076333048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128551728 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067059814 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100644424 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099153653 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077859282 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066430106 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066177308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06614665 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068623637 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131185011 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066313302 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066222028 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068967159 seconds)
  done (took 2.671263182 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097184857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156762093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100207454 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065821445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097027578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073012485 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064651666 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075345147 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071043407 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064998777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07304424 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070681311 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064759945 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0711398 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071082515 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072902792 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065176487 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073082052 seconds)
  done (took 2.786676368 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101934354 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091621201 seconds)
  done (took 1.552225425 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157349541 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105676041 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150655226 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346021012 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167946965 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228601184 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126490224 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12703763 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122266545 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123112494 seconds)
  done (took 3.009222889 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098074576 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152015002 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25453251 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115239211 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072847888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095639781 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116217137 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078432288 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080782841 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080793893 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080553715 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075881564 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098236427 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073277504 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074039141 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075856755 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102430588 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07240536 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074427315 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076818916 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099000122 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065441549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073639836 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071988333 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077757251 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077726131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065475877 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065299353 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076571337 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074318076 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076514716 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094526223 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077968266 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107481079 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070424177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108099676 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076687148 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073488279 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074002093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074168707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078815576 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079451676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071848945 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075692495 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065524595 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076246016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065573666 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065516986 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078058516 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067083036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078486134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076881328 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106987999 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066915302 seconds)
  done (took 5.963728142 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101915116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103917393 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071784669 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111898431 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09977828 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072347102 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101263559 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0932331 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102796978 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06998013 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06900827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070829169 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08249461 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083357478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112982294 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104923377 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074272539 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071444536 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104101457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102973505 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068511337 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094599827 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089653587 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10187078 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067619135 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070574903 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068096664 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070538133 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077102917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078850591 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070427266 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081095619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085238185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078466817 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067352942 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068009001 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068252658 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079924492 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080008171 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079228916 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078254624 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068204821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067611346 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069493784 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069667318 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06770076 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078895164 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081136048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079026058 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069762125 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07004209 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067952412 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069522357 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082096692 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077881308 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081410566 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080293294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068010929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068499157 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072451581 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08117379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079408786 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079350146 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069285118 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078922291 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06818964 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080008084 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083843275 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06860132 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069826355 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068389218 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069394774 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069015913 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078250506 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078143406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069493132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069337724 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06816407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080210121 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078577976 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068170704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077161317 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06711024 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06809121 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06974301 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069379955 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077835073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080265265 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069834083 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068672219 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069043241 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067896535 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066331407 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076566665 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079074512 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077616522 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078161224 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068244251 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077770749 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077731135 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068985224 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078482226 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067417008 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199464055 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071219835 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079915187 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077630834 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080625455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0697878 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068669335 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078463706 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082093133 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068214023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079844284 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081782415 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081971352 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068995877 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082808925 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069338355 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080845691 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070114145 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081064966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068842209 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08044897 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068885716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068789329 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069564132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080678931 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071439551 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069529717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06999466 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069768704 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080891142 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083053597 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070430438 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08183708 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079022617 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070660474 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079659318 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069652254 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07928963 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069596146 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069528282 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068245741 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082473909 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068285715 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068961819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069551992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081312019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069133363 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080748941 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078685702 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068264971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08170305 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081491245 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078765074 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080501297 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070042381 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068372024 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068605478 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069335045 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078960997 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079326316 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070587875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069377267 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078579405 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080624773 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066757634 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077940856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079026427 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078952257 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068330354 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069743399 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080180798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081043852 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078413423 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07819668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07825655 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068355283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077787226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07861897 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067969956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084755241 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067943338 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083364337 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079270623 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076941574 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079034427 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081193255 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08069919 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080761065 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083791182 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068322433 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068041336 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080234964 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068301701 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069554682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077666421 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069006559 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068186279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082163543 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06721707 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078372113 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066958359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077313439 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066280348 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069349823 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082039938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.199570977 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069738777 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080821455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070043905 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078668224 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080739915 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079932751 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068679871 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070296821 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080638605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07920285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069393385 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068950902 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071514874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079790668 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078157276 seconds)
  done (took 18.690751065 seconds)
done (took 37.732145894 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208904877 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152897506 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198083173 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118420472 seconds)
  done (took 2.137997097 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121607355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101248664 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095180911 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065003824 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101616895 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064543562 seconds)
  done (took 1.943300434 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312084262 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211106396 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183187952 seconds)
  done (took 2.093600666 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198265551 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187234857 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390329199 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253103309 seconds)
  done (took 2.527326071 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14371175 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08952893 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067196467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083099744 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135410975 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16134372 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101625676 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126690744 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077890935 seconds)
  done (took 2.433470352 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147374231 seconds)
done (took 12.679753031 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.205418589 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 0.1446468 seconds)
    (3/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071615795 seconds)
    (4/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.213667912 seconds)
    (5/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07934338 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072548957 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141212821 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111130715 seconds)
    (9/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074131238 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075136624 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.235588532 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.150129073 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081383293 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.225660436 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10180086 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130170245 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.109172266 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197983002 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076930202 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073516537 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158183725 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193516711 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100829382 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102553173 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071647385 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075084673 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174000004 seconds)
    (28/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.156239108 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180840446 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074081026 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134953564 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073518915 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.1447977 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183910111 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075950783 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106425936 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181926795 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.14886749 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078699404 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090465233 seconds)
    (41/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148606055 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075639828 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076884549 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176535544 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081421343 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071365876 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16370536 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087161313 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145568763 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.173256531 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157700647 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100919327 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087851428 seconds)
    (54/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108295133 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.149018164 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08916248 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090029064 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088598718 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171005139 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072510828 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.156448782 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051257827 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072131102 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067528756 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.158742236 seconds)
    (66/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05170837 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067894182 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066682068 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088858136 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072359926 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126588037 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070987673 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073724742 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.135965263 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135536697 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050685274 seconds)
    (77/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.192617057 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074036117 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089171128 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050940414 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.157077569 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.339172977 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.189419403 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079928725 seconds)
    (85/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070087517 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06659236 seconds)
    (87/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080380285 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.271145337 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070471306 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065782699 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08058669 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.066881036 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072789101 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092727944 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075903641 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06769617 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150932683 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088929199 seconds)
    (99/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053332569 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134908193 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112746224 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174406984 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051125866 seconds)
    (104/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067546248 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089102369 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0657299 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051997243 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.175920941 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065568886 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115579056 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092863279 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051503427 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050732098 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072754719 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07585029 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094492854 seconds)
    (117/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052343194 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135155095 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052405678 seconds)
    (120/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098510175 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072673204 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182704411 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053329373 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110732516 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092070219 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07341417 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052174096 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.132357622 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073471594 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075375527 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184584068 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149258872 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087720343 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084903946 seconds)
    (135/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072337888 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088500803 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070174494 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146309565 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.156141316 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071577984 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065477609 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121646624 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107714136 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130593857 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065307823 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071380354 seconds)
    (147/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052013063 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068049655 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071433175 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183134519 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061043907 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051082496 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064471897 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062410974 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072074086 seconds)
    (156/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060035683 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070549185 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065743545 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071776881 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11674579 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073578031 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168807883 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120286294 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064818217 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060929675 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073553079 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050876276 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072467176 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065143114 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052578038 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070610133 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051095556 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051477214 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108845088 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050837715 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071776571 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050710014 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098324173 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171832607 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051413892 seconds)
    (181/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080119408 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071491803 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065099197 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072541462 seconds)
    (185/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053307397 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097295851 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066708227 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051806859 seconds)
    (189/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063995409 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052040413 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068444063 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.075387197 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050847126 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051834753 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051250709 seconds)
    (196/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.230769233 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074039747 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134299306 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159586696 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062053601 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07501015 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072711666 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052203139 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054153643 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073034942 seconds)
    (206/309) benchmarking ("sort", Int8, false)...
    done (took 0.140054765 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064611593 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053098167 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067406051 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064183295 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091615051 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067752798 seconds)
    (213/309) benchmarking ("sort", Float32, false)...
    done (took 0.128214141 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05215186 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075155761 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052847614 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164657005 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174757219 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088128743 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074440619 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071897179 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071991485 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118351709 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075178168 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052452142 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06583492 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052735976 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065705668 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070811506 seconds)
    (230/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073879789 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091527496 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075909229 seconds)
    (233/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05249473 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173309783 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089599846 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066095808 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078077335 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06415871 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065978591 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150722245 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078625368 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052592403 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051682947 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052434737 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092358114 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089836075 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.130186976 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086181865 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065696367 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071191177 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066902056 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095080096 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0656705 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066329282 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05104958 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075105183 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064816311 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06555216 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066407146 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088342073 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064735097 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06494238 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050732785 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064887125 seconds)
    (265/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070180986 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052582856 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071403334 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089575634 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072586243 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051291928 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088134877 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065029752 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064666583 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066593056 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067660732 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050827143 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051096559 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135736405 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07083621 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050919415 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072235182 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06649525 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085399934 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104935531 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063898133 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106176093 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147847184 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063763501 seconds)
    (289/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06900682 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066499042 seconds)
    (291/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062032184 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072633643 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065162851 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099451267 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087249474 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070266841 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053102331 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053264778 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065718244 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065332133 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067404094 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171986486 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064895993 seconds)
    (304/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050761244 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051801798 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069856996 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051175942 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05121703 seconds)
    (309/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053113904 seconds)
  done (took 30.34789219 seconds)
done (took 31.755272679 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085045705 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093312765 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076150288 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093577847 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081562454 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077307725 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072930905 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078848857 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080671322 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082201829 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07910069 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055158918 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074649792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074755428 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074876508 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0913798 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078232672 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073455133 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073152672 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065301575 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073074679 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065951909 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067688463 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054806704 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077717792 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07185355 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072376434 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074398554 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065674562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065969781 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069373307 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073445732 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065674066 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078185395 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072633884 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073630384 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074907631 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076763886 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068201358 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066240146 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074445409 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06614708 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073176684 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074498465 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072525417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071639757 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073568027 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078412248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091609679 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0687413 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074571769 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076119422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076662774 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072345151 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06991699 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073386629 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07120752 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091418608 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073619344 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068259663 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073749156 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073728364 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071272158 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073416316 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073164965 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075232846 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075526306 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071266291 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074829681 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071318476 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065709363 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073323934 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068959704 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065845463 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075759632 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076947277 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064817023 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071826743 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072749091 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071551015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064871752 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067835612 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067266274 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071784649 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067499209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054708219 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06894202 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07168752 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064521947 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072900004 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071665079 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07185114 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067317805 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075630528 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064993536 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070571549 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065549759 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065380406 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067608497 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069181524 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065313773 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068028703 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074578228 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066955424 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071139482 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079079276 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0659796 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071659733 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065227304 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064735057 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079539772 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074172012 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065192358 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067650059 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064244221 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071709996 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064282784 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064785639 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064997125 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065009529 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070067883 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064144741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06635234 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071024821 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076250007 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064310673 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067840474 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066322243 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064036544 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069801046 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064242568 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200974733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067611017 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062423466 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06863031 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066579135 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073418308 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067942853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074135294 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067077016 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074097373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070948883 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072581844 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071300821 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065177228 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059729258 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068732931 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068553402 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068028407 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066551102 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068847266 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06599895 seconds)
done (took 12.490753636 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067188318 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143793557 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099542802 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095595242 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086214169 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067028112 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076476879 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103125349 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068309504 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102515604 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088207481 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085509931 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113056507 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065090741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065941366 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069864 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067887522 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082244638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101543694 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086747276 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117157805 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065517649 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095190673 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090256639 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087592249 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102130519 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067144969 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070127489 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070047398 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091750224 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086976457 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070363015 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067020654 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102111552 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092961099 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083635396 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066941278 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083020577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066583262 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066510158 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067920007 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098325355 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080244432 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080699742 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070394562 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069677626 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067083359 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083666542 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089470466 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078805603 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086920971 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103398262 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069207055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065958033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065017334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085860405 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065993173 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068769042 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066550913 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06843251 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06650133 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069021157 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080960371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082248877 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070031745 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080724192 seconds)
  done (took 6.831975817 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084374792 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090680016 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083209459 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084510173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066685637 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066957221 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066869413 seconds)
  done (took 2.045050084 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067296785 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089018137 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089553188 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089716302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085214217 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087764055 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076315008 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066861542 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080705138 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068119819 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087342419 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102611781 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067614236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073375549 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090819608 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066894146 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090449949 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067089514 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069977791 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090442941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068758207 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.083205605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069801515 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06744583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080737948 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067616122 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113710958 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07084549 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068315686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069470214 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064942291 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107065131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080293348 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075392341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066915574 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080533231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080822467 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065362026 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082433319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071948264 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079903961 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066772836 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067081632 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064383107 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070477478 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076453763 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067127694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067523143 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068917877 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085882509 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067049898 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080938405 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06981847 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069131461 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068135316 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070468956 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076740343 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067414676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086443279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068005347 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082975003 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082390096 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080231773 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082455452 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069207151 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080455171 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080428101 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069331297 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068493566 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06990282 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082304755 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065001562 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067616352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076683556 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068254132 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088805615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088817212 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067855971 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07580146 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066923101 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066333081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066847642 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088818142 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069176706 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066478867 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070657635 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069241206 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064614178 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06567781 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06993995 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064443424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067861897 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068999656 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069234658 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068772321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08282195 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068530046 seconds)
  done (took 8.773293528 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0692026 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068309211 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069957567 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067723033 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068255591 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067869689 seconds)
  done (took 1.938532945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093019147 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069780841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080375203 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072701297 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104530299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086910451 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087524985 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078817152 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084187997 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079210706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086626693 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08875468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092907881 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073065397 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087010704 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072241442 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087939382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076193012 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078447669 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073618532 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086883487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072942524 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073136407 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081826909 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075756404 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072015444 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067358981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079222087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078500069 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079076278 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073033584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075577417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070931339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079176835 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08704013 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070785585 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071884908 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077923408 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073026047 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075732807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08811152 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072851092 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074688208 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077395311 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078426686 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070801317 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077395472 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076195686 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086319673 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077216054 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077450672 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071279196 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075305647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077470208 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070357631 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078325592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077252029 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086356459 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072336707 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07068769 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069390252 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075536484 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078096223 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075742157 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079303554 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07749589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071005956 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072813284 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073153356 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07248478 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07726131 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069366263 seconds)
  done (took 7.108210682 seconds)
done (took 28.188842532 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543384741 seconds)
  done (took 2.0351222 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606152953 seconds)
  done (took 2.122495273 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.136801339 seconds)
  done (took 8.651087156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392089997 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478168407 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692742642 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130630535 seconds)
  done (took 3.25426617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678698264 seconds)
  done (took 2.199394961 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.20935733 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195726246 seconds)
  done (took 1.938247707 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377922923 seconds)
  done (took 1.892665895 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102577372 seconds)
  done (took 2.615279859 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263118508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163674615 seconds)
  done (took 1.950428786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461732639 seconds)
  done (took 1.982427839 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.88650171 seconds)
  done (took 6.409383897 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215244037 seconds)
  done (took 1.778142704 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242817662 seconds)
  done (took 1.761279337 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.717187193 seconds)
  done (took 3.23965092 seconds)
done (took 43.350996086 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080889083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082285998 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082129352 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078891452 seconds)
  done (took 1.835441578 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077071823 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074212301 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077716395 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073153845 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077143321 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072859833 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07481223 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076996206 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072442956 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073228021 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072746208 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072657145 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075390828 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07465277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071552387 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075390099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076217568 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073169602 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076166839 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072711111 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071798715 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074877374 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075105707 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072349871 seconds)
  done (took 3.310133091 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078224547 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073546278 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075641355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071594484 seconds)
  done (took 1.830540704 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07866408 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092673419 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089329362 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077665044 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092764708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086407264 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069425946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069800964 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073331637 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07758293 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068659316 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096722874 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088181644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077138616 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079348478 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066503187 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068806413 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087279649 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077999778 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078069479 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070427226 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077491231 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068400731 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088613678 seconds)
  done (took 3.429117745 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078035967 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104258417 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078320565 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088686863 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089625984 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065642491 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074480762 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089922308 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123736864 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065808043 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070508678 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065927276 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072637106 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065757457 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076411833 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105535763 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108468003 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068973151 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096294646 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06605827 seconds)
  done (took 3.199282574 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073204572 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070734524 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065756976 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06890938 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078615082 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072582871 seconds)
  done (took 1.973116629 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06860033 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067837217 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068165053 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067754272 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07175222 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067686398 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066372675 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067592007 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067287387 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067279469 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066595309 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066156536 seconds)
  done (took 2.35164877 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.180381074 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069522402 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069676445 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066146362 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070842187 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066687596 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080229236 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067856048 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091203871 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066676113 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066909085 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068506198 seconds)
  done (took 2.505929869 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207390863 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076742168 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238295903 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13783428 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11295449 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116037511 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104125836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11425326 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144519262 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102104232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169056486 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166409209 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107661334 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137876277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089705771 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097733258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157008139 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163219144 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10409586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166746597 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145011576 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125748644 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147676927 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102256787 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106800645 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123402464 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071738159 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080574191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17199391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132709733 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147363092 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111740122 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09436371 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177758662 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172254349 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143249922 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135117466 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084109431 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103039756 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133038057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198912327 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088372726 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163691546 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248339462 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081537725 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134934541 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122474046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122132223 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107681273 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091027444 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147174749 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184845074 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139862067 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087630858 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11395224 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116498718 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118059939 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104877881 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182509022 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162846617 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12984604 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072044897 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100492659 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154139402 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132365394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11001835 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128332616 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094441961 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135066726 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154878991 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119802268 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144914227 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12994973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089385464 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120944552 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140435022 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12972988 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171084927 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125344276 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073502885 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126417103 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104462533 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082085899 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141810331 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075876366 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17525247 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099175489 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106674495 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113730872 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109209258 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109445457 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162112435 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287440696 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10500558 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066418298 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105687803 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121341315 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149164003 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08837236 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109903944 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117829727 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078263377 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142695686 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076383454 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124698036 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075986793 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126382767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134617955 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076177726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122573664 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102364293 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100799091 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136507283 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161410462 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090573258 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08319955 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168813185 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123899184 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105560069 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144970547 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157265197 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099058668 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103631658 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151479234 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18145573 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089966383 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163747129 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107951941 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084191963 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087637353 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124766814 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113420396 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123241027 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082619819 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11936027 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169786215 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07593096 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09608405 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134426312 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079159723 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08082108 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103964106 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10089562 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095490928 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100849034 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104706943 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138032033 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123705112 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250649586 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127924549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100424373 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172020729 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089764527 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102264454 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104712392 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070835474 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139115676 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159619126 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08068893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166410909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124958668 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105670314 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120979165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083186577 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141846974 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079722298 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071186854 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145326118 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111965934 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110896127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152474004 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105906926 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1282168 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121611668 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13647623 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133910551 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129243988 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106126842 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088179986 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111681667 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126442719 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073255516 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092037501 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080584935 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104666236 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096173334 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083833104 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143528308 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125623737 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100556888 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112201097 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097228812 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148220254 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076966791 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129755468 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119002297 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094171753 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151853969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152645581 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131215116 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099294084 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14478636 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069587277 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218869767 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091698838 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126515438 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084504564 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085828986 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118358915 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149221052 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131435777 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140487802 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113059474 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123342372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156269891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070107455 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116119852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150089308 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122106999 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105326928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091149173 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10008855 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143389937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109469255 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183972091 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115476346 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126953523 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154723356 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100712178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080752078 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104050091 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136722218 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105518827 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146210012 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100084142 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088765869 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110694319 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074749525 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100978851 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128689833 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120893093 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141871849 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115117266 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133984259 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078265996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118056768 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12071411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122821885 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06410015 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120345961 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161905527 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09382736 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118932912 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153266707 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079447532 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.27005669 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179655854 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148642307 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086213743 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111027427 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119613367 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130022201 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122430246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141324156 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108890717 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137003597 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110117516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086565116 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088456824 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099430214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106520924 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0955267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110022026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115670405 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09563044 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13291536 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104328053 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111079008 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119302843 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097086327 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089776731 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097043366 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176595454 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120231281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173863316 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099555469 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146360208 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165231963 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07516461 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079413568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078667263 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140837194 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084147586 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13148739 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098188694 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106434942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12453259 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142985189 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095701682 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06899684 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109340201 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135383256 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112472831 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098022139 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10462746 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16346414 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100523377 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079218154 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113588645 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10498969 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101362284 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323897569 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062765996 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100266626 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077782301 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082458333 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129149574 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154215454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082462308 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102844328 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120159937 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111651041 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129706145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103165671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100481117 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115326862 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151274872 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130904447 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08979941 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112987932 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130366285 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158175737 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106129226 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096790485 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172874486 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156659392 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16109513 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090015483 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115119138 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115032298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109133921 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139599621 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083766527 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164930392 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08229996 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136935076 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104858964 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090778871 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131092641 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117216178 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088893664 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149352838 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118419171 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083187958 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078547591 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118405542 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120209891 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106971794 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075446399 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139523101 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073175621 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132595427 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315694478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082808198 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107592417 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099072299 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080297307 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109891678 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104193025 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090509235 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099518953 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174343594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088791078 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152289667 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1443776 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115207702 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137919974 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100840701 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636166231 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078643461 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155186729 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118474353 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176060096 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098268012 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118872175 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110269583 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126104665 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144600953 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106080748 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175947652 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133869998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117499402 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080358919 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103290432 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103648837 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089614667 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106108962 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11448445 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116768914 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094006221 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11633501 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124416038 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082518817 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096009432 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157044041 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117720243 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146145082 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14141904 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085308203 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118289559 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13892762 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080188486 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12287675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15241938 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252952147 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100846119 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081578604 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104699638 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171958289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0736648 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165358333 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121879153 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111307801 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114152469 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116673285 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134113066 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109684322 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123813679 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095471525 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111655244 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114168796 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083077948 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077577434 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106184486 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113563825 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098406542 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099375372 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098814634 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153357431 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071487126 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097095471 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103776759 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147079932 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176909628 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08829947 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083566085 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119455201 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113598582 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11389811 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121375847 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080079182 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082765928 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082534276 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077351457 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108948753 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112823177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104657392 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112063869 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16582287 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083209762 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222971718 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095843724 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105076288 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070209363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079119514 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09636799 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09754267 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10746369 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099768821 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169319367 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094103164 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089659289 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238679784 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07473842 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083944647 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130964155 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112771766 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119641845 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099020596 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063204691 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109691023 seconds)
  done (took 59.374027453 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108820883 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082951845 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097663605 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150620782 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123568109 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212871922 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158513491 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200362859 seconds)
  done (took 2.784205867 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068771628 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094974982 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100665492 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08236512 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067172389 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069073474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227109523 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081493354 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06693048 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089030823 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080366801 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069798381 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42199132 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066292715 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068380183 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063801049 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067826649 seconds)
  done (took 3.425934411 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368586643 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604096464 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374526323 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073959088 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.930342252 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089693824 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.086091763 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127862608 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074842324 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541153842 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.699863432 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129366186 seconds)
  done (took 18.750014258 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076938791 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071111791 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085367328 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084675026 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074060749 seconds)
  done (took 2.03836938 seconds)
done (took 108.390421013 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081576651 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405370342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054294386 seconds)
  done (took 2.129299866 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083247619 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085544216 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084968214 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083121862 seconds)
  done (took 1.986819184 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075149707 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077242663 seconds)
  done (took 1.794783707 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227339022 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159082832 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08696502 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083223807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079212389 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079413477 seconds)
  done (took 1.888512851 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072970927 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076445583 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07270095 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076697035 seconds)
  done (took 1.941157072 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076991345 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053177266 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055188428 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056560861 seconds)
  done (took 1.886203721 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08694279 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079998637 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078405551 seconds)
  done (took 1.890877533 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101721418 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085534632 seconds)
  done (took 1.831501741 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082202726 seconds)
  done (took 1.727934157 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099602368 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114835952 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132264651 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111361045 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13911669 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10943958 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08585751 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087639071 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077820026 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087859808 seconds)
  done (took 2.690411794 seconds)
done (took 21.967807797 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079064478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366268976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361464121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089616653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668395247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35735624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998543741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092429049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114134951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068387287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084173046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649370327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989249788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319498251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976499371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323682611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649014117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068688285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068146733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068423048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985256493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067964969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068169613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068842973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649485988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371515829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068421221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318845548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068386068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069921634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355489839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068411283 seconds)
  done (took 16.190783326 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07086229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118987945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074833593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084334224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071076827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070189936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071703925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069569526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119840583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068085407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085236198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068261904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072148984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069391871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087469292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068885156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069183698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069419329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069014814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068935913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086914436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068506418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068396292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068866332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068270599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080302447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068762145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069117555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06901596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070715223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071670866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069809296 seconds)
  done (took 4.070973872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116222654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125726975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074538678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104368163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112832625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070479952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144418938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093385518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128549689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068369009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084896489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068698989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101000114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069591735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088048155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06916877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0701054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069048709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068880882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069011915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087809608 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06852299 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068785222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069499901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069262047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082205846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069244341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0696541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068922652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070557764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0722221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069512632 seconds)
  done (took 4.329908493 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072876062 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075905444 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083474344 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084466591 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070708959 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072572557 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073681381 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070216643 seconds)
  done (took 2.271607415 seconds)
done (took 28.517929767 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080707541 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070007664 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072983256 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081513537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073379603 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079580963 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067589949 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074993185 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072610235 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073635826 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075051489 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067755654 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071612425 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068131197 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074238204 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068245563 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079659979 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072103829 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079427084 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079734353 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070577487 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073640238 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074400896 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079885069 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079756111 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079575253 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078252159 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073368282 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070210536 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071052775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076904811 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084129757 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069104916 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079544357 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068166026 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06852374 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071955902 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068403084 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080348014 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077735721 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070280345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076678206 seconds)
  done (took 4.7724693 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087513099 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092137544 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085135108 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061417343 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067768751 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064976548 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08902285 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060156661 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060143505 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087946112 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056605108 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059474833 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062768211 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054579074 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059815561 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057318575 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062354899 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056634895 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059398612 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059601872 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0889052 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054572256 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078192445 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062954005 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059553288 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06218031 seconds)
  done (took 3.430641946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075438962 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084727122 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088608626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127043605 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103614829 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077346928 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08013084 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092931643 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085445001 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067410006 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071533663 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094426439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08855889 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074078797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068646362 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084798766 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082254302 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069416716 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074549259 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092591469 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085904006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084955229 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092680244 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081198546 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067201991 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070229125 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071608408 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08142042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072368989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076626381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071955667 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071484403 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069750604 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079163947 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072029185 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069851327 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090965995 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07781694 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078555784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068542123 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071635943 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068822211 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091458784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127078194 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067300559 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074952617 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076230895 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077230466 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067914199 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086662682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079021571 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067629428 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070976291 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067507697 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068212362 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08092022 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070242055 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070363075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076881552 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07132552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090363889 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072154958 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083057709 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067596836 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075649974 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067276623 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068729872 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067086265 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092850836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069358365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108932279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069101071 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069399148 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07676941 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075749611 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074385498 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06851827 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083211613 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078319233 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071672943 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076774074 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071424906 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070822125 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088790968 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070647396 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069749078 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069068102 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074278328 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070918455 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069146509 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080842085 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067985824 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070715318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08481103 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067819671 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068900666 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073969225 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072723463 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067595387 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079181687 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073048712 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069210844 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077380369 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067940061 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07077848 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079881606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074189654 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067059859 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07248876 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073761337 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068561079 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069246791 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071145913 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069635153 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076136786 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074155132 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072615185 seconds)
  done (took 10.656929334 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16451349 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155465328 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07118457 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146205878 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077011023 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079661841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14887033 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095185705 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068757907 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069133186 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069231861 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110917135 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106825458 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116178463 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079108222 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068589695 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083927104 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11446396 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15039168 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144076537 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084942266 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077618082 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070408977 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06979433 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07134252 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079117396 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086061707 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077371835 seconds)
  done (took 4.449897353 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08190054 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097452137 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074726707 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090480994 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091895868 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069090439 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070802963 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070331497 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080737267 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079288451 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068218802 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07425626 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075253074 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071705993 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069272356 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07497338 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075887037 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070211355 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071837252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073250874 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078603917 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081249692 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071779244 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06774112 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073549357 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067589143 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064990171 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086125916 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068499363 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090813341 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066182809 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075823804 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081597864 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069051727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068147229 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068236684 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068555699 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068333311 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069638565 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066520223 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067333047 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057847132 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067464077 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079751442 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074333692 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057176596 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072895899 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073487429 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073923712 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066198745 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070893612 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071008839 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071367956 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075407075 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073425908 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073303607 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069149664 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074159009 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07573834 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068083231 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064845555 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06660068 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072766346 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066491842 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075900728 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072290699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066555147 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067585676 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069888668 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074242622 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067635329 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070791312 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065218235 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069773738 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072669495 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069732876 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069319655 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066498107 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067861562 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068129758 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055934048 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068021864 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054036786 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07105657 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065899997 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066589448 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067878902 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073286477 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080197953 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069189746 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074114232 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068848132 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066929108 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070732159 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06065593 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070925105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082931747 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083248553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068101726 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065883568 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082583008 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072303394 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06711645 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056763386 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07531604 seconds)
  done (took 9.220952525 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090215949 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070653496 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084053345 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092000358 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087218607 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074988582 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077171688 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069799587 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082993351 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074224247 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076730146 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0688002 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077489493 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077609786 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070785625 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077461414 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072466696 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083839071 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083458449 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06925833 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076170492 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080696056 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08995164 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080514615 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079519966 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080874348 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090122366 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072785495 seconds)
  done (took 3.927360938 seconds)
done (took 38.118978112 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.746414465 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.923701827 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743689748 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.123119832 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.054043629 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.762563412 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.910615439 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735247659 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.945876654 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.782463308 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.015343542 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.790806794 seconds)
done (took 65.218613337 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.75091877 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.887219464 seconds)
    (2/2) benchmarking "String"...
    done (took 2.00986891 seconds)
  done (took 5.580730427 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.038974432 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.327238894 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.975116882 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737629816 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.744546302 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.976760766 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.550121492 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276481908 seconds)
  done (took 30.269731937 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.878451741 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.976874315 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.422839774 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.461306909 seconds)
  done (took 15.471277393 seconds)
done (took 62.880637298 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.753107256 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.770742545 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.747176115 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727157416 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799127591 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.748135894 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.045969683 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.746737939 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.739177704 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.729218946 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.742198486 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.185731172 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.747428762 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.130664411 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742132724 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.749569695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.782709781 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.200894165 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896644767 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.753128326 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.763312966 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.781434536 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.741257352 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.75238603 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.740028928 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.7420028 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179901954 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.747613896 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.367613488 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.744446798 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.77199656 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.273857386 seconds)
  done (took 203.026129378 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.739818781 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.832219423 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.866918056 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.784297397 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.414208972 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.922725259 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.913340819 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.432402381 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.741968863 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.7581808 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.965905792 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.74494744 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.999285207 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.689179824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769957289 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.81866373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.036344536 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.031959841 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.776912148 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.914436897 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.7590525 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.878179224 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.838329301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.979095998 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.745995517 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.834998229 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.92099103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.762464111 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.929287893 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.01464102 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.765628873 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.751016688 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970857154 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.616270204 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.761922582 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763357463 seconds)
  done (took 170.128859133 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.905871066 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.742236785 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740478896 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741574694 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.754021794 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741965352 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.86569647 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867309621 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.208727605 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.183577182 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.792625286 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55940965 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.741997493 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809939715 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756169726 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743027736 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757021008 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769319992 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744692588 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742172969 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867069876 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.755821157 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.251111756 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.750089349 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743189462 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748788309 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.117054129 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743478715 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748694637 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.003652943 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.744118045 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743815302 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639704283 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.940102026 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83393604 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74510522 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749102844 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.743396524 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.96196672 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744503911 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.743934913 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.745669385 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924580157 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.743355416 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.871885166 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74468689 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243974965 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.743921902 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744169031 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.509644986 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.409109446 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.744754213 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.743381795 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.745949797 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.74434778 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743341181 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.750716227 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.507116116 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.81755597 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.744801057 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.748934899 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749414047 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.744288695 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.89203167 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.747647438 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.246916882 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.804791669 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.963445053 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86543577 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746828677 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812872948 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839033002 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.744753016 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.744365669 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74468517 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.744386461 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827625504 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.745328169 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868242492 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.745137575 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753738195 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.746460283 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.796042724 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.815162541 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.745471212 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643707163 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.745300136 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745452033 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.056109701 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813775264 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746347339 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.74678571 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745460668 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.747808128 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.74601112 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.877180794 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868767725 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.517240253 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.747440248 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746335892 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.551210966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.748968341 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.892998268 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7468448 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920635653 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.747969074 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828468967 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751776196 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.748491915 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.746467407 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.778830342 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.747252335 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.806907001 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.747408469 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.117648004 seconds)
  done (took 400.064076707 seconds)
done (took 776.865910906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423700349 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.384725765 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.49407228 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.403159735 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373853509 seconds)
  done (took 13.770072923 seconds)
done (took 15.459129142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.834362773 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.839132401 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772749606 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.837030529 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76864511 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.837610483 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81711595 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.773565625 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803343213 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.772995497 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.805732793 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773444526 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759727814 seconds)
  done (took 25.086343491 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987371557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.981224347 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820869075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975205602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800477299 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.986963853 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908149364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903206871 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.899394697 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764668835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762382325 seconds)
  done (took 22.482536698 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.986451401 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.981753784 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82684462 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.985773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80155494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98423664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914288489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907084282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904759954 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765649771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763483755 seconds)
  done (took 22.512750837 seconds)
done (took 71.770748857 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.757828256 seconds)
  done (took 3.450308665 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780966799 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.917011427 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.764617307 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.762023468 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.757626606 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.758695613 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.763792852 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758098363 seconds)
  done (took 15.956001643 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.757683983 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.757682155 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758217384 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.755183834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.755318311 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.754704622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.754726335 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.75855748 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.758348918 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.758349537 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.757715224 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.75634199 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.758980971 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.755536196 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.75649952 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.756147325 seconds)
  done (took 29.803494135 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.757095815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.755974329 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.755743622 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.755723298 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75598965 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.755792302 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.756617188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.756349455 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756006836 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.756221018 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.75779872 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.755730894 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.756190502 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.755997538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756370454 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.758122395 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.755877919 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.756627656 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.760395586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.756361792 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758536438 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756818856 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.757771262 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.762772124 seconds)
  done (took 43.863560125 seconds)
done (took 94.764482219 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.636825255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.164826884 seconds)
  done (took 8.49680382 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.761445998 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.759952469 seconds)
  done (took 5.25343736 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.76040129 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.759405339 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.760612592 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.759714991 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.761145268 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.761045299 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760094297 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.760767563 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.760486645 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.759759363 seconds)
  done (took 19.298893057 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.760475187 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.75987291 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.757617976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.759888171 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.76130476 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.758113489 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.761027055 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.760034609 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760273167 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.759525407 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.761182621 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75912927 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.76103434 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.75969244 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.76150639 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.758176946 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.75943954 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.75946989 seconds)
  done (took 33.373747513 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.762094522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.761790678 seconds)
  done (took 5.21965346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759354685 seconds)
    (2/7) benchmarking "second"...
    done (took 1.758470776 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759048161 seconds)
    (4/7) benchmarking "year"...
    done (took 1.758844432 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.757999222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759422948 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.759143834 seconds)
  done (took 14.008209039 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761939675 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.925004205 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.993222278 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.402641027 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.763818209 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.765510381 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.736939559 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.764936022 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.767110702 seconds)
  done (took 19.578577458 seconds)
done (took 106.923155629 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.57536679 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.758367784 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.10015516 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.804485263 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.816117724 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096384712 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.7587969 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.97725474 seconds)
done (took 42.583766391 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.837272299 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.298059944 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.341306476 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.13415458 seconds)
  done (took 12.468759141 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742736564 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.284804889 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.7937613 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346238169 seconds)
  done (took 19.884764299 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.122467111 seconds)
    (2/2) benchmarking "read"...
    done (took 2.128172598 seconds)
  done (took 5.951095759 seconds)
done (took 46.837081183 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760572473 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.760906967 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759633737 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.757820666 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.760291665 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.758138476 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.758290198 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76050821 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760552493 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.760196024 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.754774183 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.75403224 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.755005488 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753407912 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751775377 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752585209 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.750070223 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752868571 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.749702039 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749570654 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75013363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752183164 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.746250286 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.746529737 seconds)
  done (took 43.81122278 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.749082542 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.747037814 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750180218 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.747740598 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.746817457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.748323388 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.748655107 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.746036885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.750710939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.747991676 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745467048 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.745280559 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.748043781 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.747648357 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747996292 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.745434545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.748075278 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744731104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749351561 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.746650958 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.749627495 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745765018 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.746020557 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748007081 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.745655185 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746329778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.748982528 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.746360686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748762312 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.745980752 seconds)
  done (took 54.108256187 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.753393328 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.756892368 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.748717463 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.749537304 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.749928538 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.749600805 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.748758308 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.750082791 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.749605904 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.75006178 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.750584522 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.750392942 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.750835562 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.750382016 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.750252901 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.750763342 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.75073631 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.749097625 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.749630088 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.74975102 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.749629877 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.749418699 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.749607359 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.749548728 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.749650593 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.750852648 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.749725509 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.749963776 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.752056996 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.750479057 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.751009156 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.749913627 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.751201584 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.751845351 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.751123536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.749295913 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.754876999 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.758510766 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.750147745 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.750963003 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.750744731 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.750371733 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.750673719 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.750590973 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.751433892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.751416993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.749800759 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.751259056 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.750524718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.751398975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751008753 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.752030793 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.75103719 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.750315514 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.750908172 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.752430245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750603528 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.754700418 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.751935824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.7519954 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.75242996 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.751670967 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.752597486 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.751834846 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.751931079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.752236942 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.750798994 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.752539905 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.751650616 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75207552 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.752515045 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.751390915 seconds)
  done (took 127.765398424 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.751344926 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.749735314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.749460369 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749884384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749320566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.751452425 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749930571 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752179505 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749458604 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75155177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751928504 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749556749 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749468883 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750763945 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75146177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74746181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.751406118 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748073995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.751310651 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750625474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749509386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747151069 seconds)
  done (took 40.190504656 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750116311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.751174309 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.748500471 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750360074 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748437939 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.751483434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751692795 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750458994 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751205039 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74846323 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747448958 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750515719 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748585776 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747970027 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748014737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747430389 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749982082 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747998848 seconds)
  done (took 33.17530958 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.747653983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.747791468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.749187743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749266458 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.748722604 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750920891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749202201 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751333599 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.750773955 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.749070133 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.751360303 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750015366 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.750900549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748219305 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749892874 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748671249 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.751280565 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74872352 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750830023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748187579 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749329578 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751198936 seconds)
  done (took 40.178803058 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750739888 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751427248 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.749251301 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.748815273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.748909717 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.75117757 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.750782226 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.748904856 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.750704895 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.751795721 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750015802 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750560438 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.748813382 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.74928015 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.749827231 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749755118 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752594779 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750224874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751478831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748448057 seconds)
  done (took 36.689740744 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75146511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752216282 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.75242056 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75208155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752503239 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.752532114 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753236308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.751679876 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75161959 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.752424917 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.750789543 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7514534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752517177 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751883031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75118994 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751802944 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752321809 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751666244 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752385316 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751190986 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751478212 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.752551804 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751371039 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.751620453 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751046462 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751170403 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751049122 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.750639087 seconds)
  done (took 50.737276786 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750169507 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747058853 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.745635827 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.744471631 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.746403526 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.745217732 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.74684699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.744810464 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747672574 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745498484 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748348556 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.748062477 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.748202894 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.747268424 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747639949 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.747021395 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74772416 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.745027897 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743930228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743483582 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.747187119 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745680331 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.746539401 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743856422 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741646156 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.745490062 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742524636 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.742606312 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744590816 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74265071 seconds)
  done (took 54.059562529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.762491193 seconds)
    (2/2) benchmarking "in"...
    done (took 1.763118049 seconds)
  done (took 5.203918177 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.743204777 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7448938 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.744131835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741948012 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.741499715 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.745601907 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.746802729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742795863 seconds)
  done (took 15.629241928 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.744146295 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744513993 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.745033385 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.746020558 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.74469201 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.744892525 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749435451 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.744748495 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.746048217 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.746412797 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.75075403 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.75144031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.747072149 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745446709 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.744524917 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746884509 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.743554911 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74463526 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.744215964 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744536145 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744754801 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744884276 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746136355 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.741237708 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.745036333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.752790437 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.747175014 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.744476104 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.744017103 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.747335889 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.743864885 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.741499789 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.74443728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.744486314 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.744382148 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.74533444 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750366277 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744596271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.75018103 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746137495 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746799759 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.74323097 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746166889 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.746378611 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745181072 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.745645924 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746432249 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.742922322 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.74529676 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.748411045 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.750180215 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744463856 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.743446326 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748405805 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.747687688 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751307083 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.747017164 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.749093705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.755193061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.755637446 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.758510361 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.754034114 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747501951 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.746294447 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755518626 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.769899323 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75120577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.744304432 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.745363929 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.746925928 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.753005796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759868512 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.755377462 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.748160611 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747625823 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.747165687 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746721478 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747219678 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751867361 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.74966048 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.748318257 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74764649 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757555601 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769582796 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.746351333 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.748411209 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747959956 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.747860022 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.748539464 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75783431 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.749190681 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.747572584 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.747057573 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.747317191 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.748465214 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749265497 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.746181967 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747310363 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.745962392 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.74838498 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748850123 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752083302 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.757124188 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748539446 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74881746 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753781364 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.74844512 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747983261 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.752857843 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749622936 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749830868 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.749422416 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.754264059 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.746150973 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751770505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.756617346 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.750369634 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.750669524 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.749967327 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.749254453 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759777624 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.774271087 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.749905707 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.750197957 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.754041616 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.761014913 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749567163 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752067718 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748582009 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.746737876 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.746940894 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750160425 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.750863423 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749543705 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750735243 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751262668 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74686436 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.750758499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.750487846 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.750433746 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.751310237 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.750724206 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.752365815 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.751063415 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.751196322 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.751697776 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.754358358 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.751163708 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.751125652 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.751567388 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.748634153 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751369829 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.752183919 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.751660143 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.75018971 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750720435 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.750368306 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.751889516 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752275131 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.751708961 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752352426 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.751945992 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754903197 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.752317983 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.754830677 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.75109262 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.747283866 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.752051837 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.751961639 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.751578064 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.751353211 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.751723262 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.755514622 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.760571879 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.751975612 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.752158639 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.754078847 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753846529 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751573596 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754244135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.77018218 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.759387398 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.753343627 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.758041984 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.752633536 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75349437 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.759094624 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.752432595 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.751575981 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752449631 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.754510934 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.759196142 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771782449 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75855465 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.753656119 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.755841328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.753024388 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.758133596 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.755265902 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.75219404 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.751962033 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752374866 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751355193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752954256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.752889628 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.752507795 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.751286244 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.75197657 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.751719851 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75597671 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751021377 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.752171298 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752457074 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.74823177 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752954497 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757176289 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.751320959 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749161884 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.750162348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.750941356 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.753858879 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.752325271 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.756588052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.748744467 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752354776 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751928493 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.754894427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.749984493 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.751464342 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752836188 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.751589449 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75830864 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.751512044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.751912135 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757082443 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.750485171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.751597254 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.753954147 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.752278119 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.751120461 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.754231832 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.759616128 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.753431958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.753845924 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.753416445 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752101857 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754319654 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.758147205 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.750289611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.750978242 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.752744878 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.75370999 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.749476761 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.752982478 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.753262733 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.753177306 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755172106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752937942 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.752744401 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.752856923 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.752542418 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.753336105 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.755521421 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756790506 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.760794199 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.757505017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.757548056 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.754743052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.754265614 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.756937362 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.753938797 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.754405868 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.756914172 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765258522 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.76152714 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75931701 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.75518313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.755735071 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757165043 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.754329687 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.75571527 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752907886 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.754433248 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.755213222 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.752443579 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751326162 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753474076 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.754072172 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754333468 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.758568279 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.756606425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.752429372 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.751396753 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.75280835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.757428346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.752612448 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.75255111 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.75384394 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.753882163 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755509505 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.754726001 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.752269233 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757783375 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752780648 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.752135246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.75206001 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.75629225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.751949541 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.752498594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.753260217 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.755093342 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.759069792 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.758272587 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.760123722 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.753765046 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759620638 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.753825975 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.757297148 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.760036478 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.749850191 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.751219462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.753021617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.751962879 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761014061 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.752428543 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.752790439 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.756717397 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753428152 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.752819736 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.75511286 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.752806634 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752054306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.753413892 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758854008 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.759694985 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.754527781 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752183065 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.749841142 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.753046945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.751268174 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.754432309 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755671166 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.75249301 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.752202227 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.75148355 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.751979384 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.756437909 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.752498853 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.753310362 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.75006556 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.753392639 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761684196 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.752745813 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755885229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.752818928 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.759238678 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753844727 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763611883 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.754054789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.752981936 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.753364813 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.752359269 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.75346895 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.75574 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.753895652 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.753769064 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.753870957 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.75470195 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.752850302 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.758947399 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.753529387 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.753613644 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.752312158 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.759977084 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775519732 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.75450106 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755830456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.750555983 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.754299113 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.756533512 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.754749384 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.752835317 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.755685424 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761758722 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759056032 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.753448097 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.758080486 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753222184 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753810226 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.753330904 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.753805679 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.755595408 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.753639069 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.75386351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.754018251 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756801843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.752405451 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.753050452 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.753499619 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.754407402 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.762453978 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.753195955 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.754261916 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.754287745 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.753159664 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.75556048 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.755379196 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.753917831 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755149618 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755255704 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.755697667 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.759523353 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.758662846 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.755848811 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.752801283 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.753663326 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.754235291 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.754441552 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754326546 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.756940373 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754848714 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.75504642 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.75496869 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.756394391 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.753759312 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.75490975 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.755428282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755405065 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756932188 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.76050282 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755243143 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.754739876 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.755174883 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.756085925 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.754860926 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.755678933 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.762153832 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.763123245 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.763151506 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.760854653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.759392658 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.754593516 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.757525665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.767372063 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.75495776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.755586602 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.756509272 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.757032915 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.75871965 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.758328043 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756480545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.760455594 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.755067937 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.756124965 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7623525 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.756139628 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75688641 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.75709608 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.758784047 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.755951264 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.756489233 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.756533727 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.756025318 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762931623 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.758659742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759928697 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758485558 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.754860598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.758099305 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759922536 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756615918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.761352836 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.755001385 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.757629342 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757158848 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757213898 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.75445499 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.757884745 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.755663739 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.75938136 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.761440998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.75475779 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759928484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.757322854 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.758056108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757664821 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756992384 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.754267004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.756286827 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.756856223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757814691 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.758406498 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.760582971 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.757605528 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.762111068 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.757445499 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757239389 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759818128 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.765237343 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.763321806 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.755719388 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.756339897 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.757296305 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.759914765 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757953058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.761371636 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757626435 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.757130453 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.757380563 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756905065 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.757519503 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.76431218 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.770401418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.756872716 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758028876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.758028412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762210484 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.761753893 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.756833007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.759343765 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.760318553 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.762036727 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.768171511 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.758905283 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764716656 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7578726 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.758625122 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.762445343 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.761931146 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.762416388 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.758455097 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757589468 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.757460568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.759908642 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.772147562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755303038 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765233484 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780555156 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.757152642 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.761047152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.757712106 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755919891 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.757000697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.759401017 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.757970562 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.759513738 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.758442991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.758771984 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.759351488 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760977767 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.758177596 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.76235166 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.758032882 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.757290207 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.757845112 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.755555808 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.760394057 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.757867909 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.758614277 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.758175207 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.759465344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.757103954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.772560774 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.765469892 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.758130315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.758629101 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.754223139 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761138021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.763748109 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766902351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.764556368 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.759836699 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.758308444 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.762368769 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759707189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.756773106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.758508307 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.757853884 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757798392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.760240395 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.768917344 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76538293 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.762027026 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.759253669 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758790565 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.764309739 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.763501766 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.761091214 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761649127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.762255516 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.765059476 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76581397 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.760000647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.759551293 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.762892724 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.766114499 seconds)
  done (took 1047.392478295 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75631498 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757067437 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.758245162 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757942387 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757649334 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764761457 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755826041 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755690367 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.757258564 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756266761 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756991763 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760815886 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757318251 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757664503 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756520029 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75647085 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76026147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756799705 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75590272 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756522696 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758055256 seconds)
  done (took 38.609448729 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.762232634 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.757010917 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.75817828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.760516963 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757669345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.760785929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.761975778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761059815 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760405304 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758831821 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.760061906 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766316954 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.75829184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.758859912 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759417583 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761119626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76232357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763119961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.761463041 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.759318874 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761316131 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.758969131 seconds)
  done (took 40.424572613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.763097049 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.762129684 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.76088005 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.758475819 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.762237343 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.758729398 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.762259529 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.762022025 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.762811866 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.761385061 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.760821664 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.762192911 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.766687905 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.76607246 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.763817335 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.76153671 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.906560053 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.762729413 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.762810039 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.763052882 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.759856508 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.765910418 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.760794206 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.760492897 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.761854607 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.764076437 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.762689681 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.762916546 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.762890304 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.764382892 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.765204898 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.762969816 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.762197862 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.764280818 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.762879805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.763671857 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.765735653 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.763852344 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.76038418 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.767320799 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.771056447 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.780168191 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.763840934 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.770755559 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.763055954 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.766656763 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.766111874 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.770208935 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.76257788 seconds)
  done (took 88.267303297 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.764158981 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.766074709 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.76273077 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.763294162 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.764420819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.764765366 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.76587248 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.764352945 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.760693942 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.761061176 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.765359794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.76199716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.766324929 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.765089805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.764374373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.762448134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.761321808 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.762472462 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.762482545 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.762943616 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.762896857 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.764496213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.765686033 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.768778756 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.76559477 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.763854278 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.763018808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.765444812 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.763106462 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.766141229 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.765581759 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.765656509 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.766021157 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.763529478 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763120547 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.767270099 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.766366944 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.763195839 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.766327808 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.762670427 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.766288225 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.766428991 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.766026754 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.766386622 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763905159 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.763382503 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.767763001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.764300246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.764539287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.768184043 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766278901 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.763942236 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.768795211 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.764344274 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767157413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.767015729 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.764953689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.770623239 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.767860829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.765363174 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.764580109 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.76785557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.764630667 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.769074213 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.767638793 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.765976762 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.765352456 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.768036433 seconds)
  done (took 121.7283903 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77121301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.768401226 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768293861 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7683409 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768219404 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.770385789 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767981476 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.767459426 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.76783986 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768401527 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767862743 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.768437005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.768805631 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.76851531 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768557124 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768570688 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.769091424 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770970707 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769359061 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768780717 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.768733113 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.769794961 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.771969817 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.76817501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768962554 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768682716 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770179209 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.769315732 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77315114 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.768635971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769695825 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.769561214 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.768906866 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.770008718 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.776791925 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.769485817 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768037808 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768531278 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.769441916 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.773796092 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.769055686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76812664 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768872792 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.768612772 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769372842 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.770780794 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.768595879 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.768767311 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.769106592 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768929297 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.76935077 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.770361452 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769470634 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768576735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767572888 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.76877743 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771094901 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76862051 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768849913 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.768409211 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768214359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.769032794 seconds)
  done (took 111.400645436 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767687828 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768828436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.765618771 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.765457154 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76882679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767104283 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769360869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.768736566 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769177361 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.768859841 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773594318 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766491048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766757989 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769928408 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766576322 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767539022 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768299374 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767115651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768632395 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767491136 seconds)
  done (took 37.067697078 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.7670368 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.77374419 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.766116429 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767184838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.768962872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.767048089 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.775917443 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771619925 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768365038 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770696093 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771608042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771420474 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771348601 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768592494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771428023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.769039505 seconds)
  done (took 30.025146683 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.76819769 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.77310377 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.771009763 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.77182404 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.768080578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.768723368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.772566727 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.769326303 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.76945892 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.772418615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.77107096 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.771447997 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.77253496 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.7720144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.769809719 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.772049234 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.769233737 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.769777931 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.775467638 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.772995859 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.771217318 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.769775988 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.772487343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.775368502 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.769985149 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.771468432 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.770646844 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.77008236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.771445691 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.77477762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.769882854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.769999801 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.770868289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.770643613 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.774065026 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.772087049 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.77178185 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.773694567 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.77220416 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.771830909 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.774550492 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.771536056 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.774170143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.772077294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.771049906 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.7725095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.772070357 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.773458005 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.771125577 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.771285388 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.774166429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.775807367 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.77451712 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.775903182 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.775105237 seconds)
  done (took 99.161361192 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774621906 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.778016062 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771453812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.774809642 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.774488493 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.771196343 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773867492 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.772930756 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772991948 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.773969372 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773047577 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.774071505 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775376932 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774890314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.773347916 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775207143 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772201999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.772142363 seconds)
  done (took 33.638077811 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.773564735 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773431508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.776297542 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.772985381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.772965569 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.778513972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773244569 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.776343086 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775368152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.774249325 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776476168 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.777619429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777537452 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.77726942 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775541999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77512874 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.780448069 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776534198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.775494334 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774204461 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.77777689 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777679996 seconds)
  done (took 40.781201854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.778323549 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.77712626 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.792314783 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.792566248 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.796927536 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.803275582 seconds)
  done (took 12.455534561 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777074717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778811816 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776870359 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780710108 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778018597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775724797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774918421 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775446346 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778462788 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77835813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775262229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778983553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778266681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776481924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778788856 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777485338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775770878 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775340865 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775660673 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779116874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777424099 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778768737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775054679 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775679244 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775676918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777110403 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778345423 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776156732 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776353045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777989057 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777919868 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777192451 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778882625 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77555358 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779631881 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778723068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775763504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781157684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780057006 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776473611 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777544894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779380213 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781035315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776631474 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77981112 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776598401 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77781089 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776468742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779598494 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779864657 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779125894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776949325 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780311878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779632925 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780983801 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782009203 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77826795 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777451707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780331742 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779907429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778340366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780751664 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778421469 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778408162 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780528862 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77867792 seconds)
  done (took 119.065257345 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778360421 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.778169697 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779273438 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77925856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780180901 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779568072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777751839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779155857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778354603 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779965451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7821916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778551628 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779359402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778465431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778736767 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779898214 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779215618 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778935533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778499829 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782112675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781173216 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778702037 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779833328 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779372364 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779409322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782177193 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781497131 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77860963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779557077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778958637 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778873288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7793751 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780426282 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.779526087 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779203059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77956872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779533845 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780284905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779375736 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782153924 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780333254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783215971 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780272601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781294529 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780150171 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779405803 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780101728 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781337773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78206701 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780493356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780707332 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781584311 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781651739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781184369 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781931972 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780657433 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780945774 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781534205 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781740504 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78363805 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783568573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781762535 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784781053 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781668496 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781713611 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783047688 seconds)
  done (took 119.222225605 seconds)
done (took 2442.483155126 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.788676055 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.034569968 seconds)
  done (took 15.541437481 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.953266757 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.90592547 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.789217143 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.831273512 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.789674641 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.809997532 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.804050842 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.790218381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.789958853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.789833278 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.790688851 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.97554767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.843377047 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.789990511 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.789471092 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.883724305 seconds)
  done (took 51.055441735 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.792641418 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.796010501 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.804471663 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.795764026 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.793803027 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.812063452 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.829749242 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.796269232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.85470599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.807942636 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.917995882 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.803547935 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.792788438 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.850430055 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.807842243 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.807735743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.886547114 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.869704262 seconds)
  done (took 34.545724522 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.873205471 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.795179913 seconds)
  done (took 10.401823204 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.788508399 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.808576027 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.796316678 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.799808342 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.794142143 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.792896266 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.829520813 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.827350207 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.823713116 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.796759779 seconds)
  done (took 69.786708985 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.799644888 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.795606044 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.796839685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.79476306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.787049294 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.793079789 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.792806356 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.789950052 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.486817591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.830175529 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.805532283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.800553639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.793862572 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.796340169 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.792653363 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.816970639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.956093411 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.792023428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.791577677 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.800397643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.794946768 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.848411156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.810750888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.799431757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.824707496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.481769138 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.803741775 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.801658296 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.907395591 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.791947484 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.795260902 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.795664089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.79951938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183820179 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102559955 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.794657798 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.804050769 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.803002264 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.792760118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.918526703 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.797954336 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.802164593 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.74483753 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.079664183 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.884024041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.840455482 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.159833638 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.802653439 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.796594727 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.826597202 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.798119524 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.798480422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.810030686 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.314936612 seconds)
  done (took 128.656915422 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.792833335 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.079845355 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944090598 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.79304498 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064553656 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997271147 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.792849148 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.841040557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.793599666 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995387056 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.956255949 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903886381 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792187079 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.791566033 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791487503 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.790301653 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.953238242 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.86009508 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794550519 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.790914007 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821071667 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003796536 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.921265663 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.794795332 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.813834822 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004374947 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.914954647 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.901230594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.082144992 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.790539955 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858094686 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.793142816 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.791597487 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.791257867 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949283631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.889317333 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882488047 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.793537842 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790384459 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.792086238 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458843364 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993352921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.892221419 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.936617136 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046264804 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999318586 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439993648 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.790616925 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.430105075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957296717 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008844862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999881432 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.91825574 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.794157311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.153542085 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.791159359 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.792680026 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031213787 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036989824 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.897127878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795548495 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.793670819 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792441501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038186406 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.795085365 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891740114 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795816663 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793261953 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.892439575 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899320708 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041118149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007453554 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.828577942 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.092522877 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.261085064 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008166739 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.863199638 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029120964 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.794883962 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.793415908 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880236425 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.542194932 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953233336 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042796535 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.016486726 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8303329 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431718125 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.793140356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987747114 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980046175 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.99043623 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035537506 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.947912571 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.990374391 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.794520007 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.793377666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.002925879 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.93356028 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.796553522 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149997912 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030635617 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.361664884 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.826615438 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09440243 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930670322 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.161956133 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.421405344 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.797136308 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963087781 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.836169162 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.796790916 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797538517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.987708637 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.60984317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.796503578 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.327219533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.860271495 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.798997733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998679569 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.797139295 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00723277 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797764701 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031834799 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.826390248 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831048941 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.040678346 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.038654676 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.591213326 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044691904 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041746327 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.915443258 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018097437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.390894998 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797603068 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072408594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.798295941 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.796885709 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.965068111 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.797124077 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032809697 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.798732228 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.025181973 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823722786 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952705775 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800940809 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037465926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83525102 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850318254 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.802164101 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928847658 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799843418 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.681741495 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.955372356 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800712093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.796508347 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.480245592 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.798215424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944325913 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.030383615 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823816362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868081174 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327081808 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.797816063 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890740822 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825830159 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.547296708 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.799763044 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.95519723 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.76753913 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.230669463 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.797436614 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.039248527 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.984157726 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.802596497 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.799069481 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.541405279 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.504716248 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797610872 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.959051064 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.547098987 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.448640018 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002491943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.801856039 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927590598 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801399546 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.879851201 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.15218158 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.799138214 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.798727266 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.800896139 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.799429808 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799028882 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083080481 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.830179186 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.335172438 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937298479 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017843869 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.110674739 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.021372866 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849295881 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801510822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047468368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.801754442 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.865763811 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.802232687 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.82355612 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034781789 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803842922 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013802466 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055235568 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.78029763 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852082169 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.802846661 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801037738 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.80025681 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954056221 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894592331 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.803512959 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.801825497 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.912691441 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930423667 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994017202 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.397902629 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.972028522 seconds)
  done (took 882.831764314 seconds)
done (took 1194.536886928 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.803453065 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.802001191 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.794954328 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.810283826 seconds)
  done (took 28.951828081 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.813208904 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.812993387 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812586724 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811483653 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.812329007 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.81128085 seconds)
  done (took 12.618861935 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.868982458 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.806949852 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808119646 seconds)
  done (took 21.229180914 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.881423454 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.21964258 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.923241308 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.256901536 seconds)
  done (took 10.02902635 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.813347832 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.813650736 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.814713374 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.815259616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.816429968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.815090258 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.814180713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.815121322 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.81655617 seconds)
  done (took 18.081502774 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.184704757 seconds)
done (took 96.835632997 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315341434 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 5.584878304 seconds)
    (3/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.892015417 seconds)
    (4/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184078396 seconds)
    (5/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895152435 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.834472096 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.887221162 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.884254637 seconds)
    (9/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.914229762 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.890758306 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.016607689 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.889443661 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.944102409 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.867385842 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.886280793 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.72973817 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.713966505 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.710951079 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.851097228 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.834339035 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.807119661 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.550834754 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.695426719 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.459644727 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.16268428 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.21376415 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.907285824 seconds)
    (28/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.017493652 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.008146906 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.21164342 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.909194662 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.891517583 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.907820224 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.166374784 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.810658899 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.892946017 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.195852643 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.908504093 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.965993788 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.78306864 seconds)
    (41/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.963949235 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.836095467 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.808025756 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.140030915 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.62074553 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.920604867 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.808895858 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.829047613 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.351625809 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.460672656 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.412557818 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.084204449 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.77822197 seconds)
    (54/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.131419692 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.012942123 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.111206607 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.107355846 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.895945011 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.882938918 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.925630497 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.279507095 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192938477 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.061173 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.934009857 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.01803283 seconds)
    (66/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.986903167 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.877153584 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.867886509 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.129705084 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.839635655 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.907947982 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.836732853 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.603522144 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.896459671 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.815658175 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.441806632 seconds)
    (77/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.016852118 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.161634204 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.17582226 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.919984469 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.340076561 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.920671876 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.199245441 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.484542464 seconds)
    (85/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.390519154 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.265352835 seconds)
    (87/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.428708774 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.99983338 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.958379512 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.98121405 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.381217051 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.524383122 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.893557469 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.814747129 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.465733632 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.919072505 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906174422 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.752217712 seconds)
    (99/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.190549237 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.948646425 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.909193395 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.093518109 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.117828412 seconds)
    (104/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.936603535 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.818644591 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.797959448 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.205813046 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.118247457 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.148376095 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.802760172 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.516130752 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.418030641 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.037369094 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.030466846 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.81222362 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.939046802 seconds)
    (117/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32347143 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.817318528 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.466590865 seconds)
    (120/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.971608044 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.841516129 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 6.811800194 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.803726741 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.180700535 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.414190275 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.009766549 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.804256519 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 3.933239925 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.837215949 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.898617705 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.80180812 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122994953 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.815371352 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.178795742 seconds)
    (135/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.911648895 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.06260497 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029514341 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.902748846 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.301705994 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.077715543 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.475243579 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.931663769 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.087118733 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.921398894 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.921650034 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.916653487 seconds)
    (147/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288135818 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.881342712 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.836107959 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.41001251 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.090536999 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.830658048 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.031647892 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.16570558 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.839949308 seconds)
    (156/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.994911822 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.953675052 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.813578296 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.607446517 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.811060714 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.832852315 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.809697638 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.420413172 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.168616783 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012367676 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.844108953 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004586395 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.825891923 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.18821905 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.226933164 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.900749704 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.978477148 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.805422887 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.815615468 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.208736363 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.841213169 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.112597248 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.955983929 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.816184243 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160989193 seconds)
    (181/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.72986477 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.843506766 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.813515447 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.87179335 seconds)
    (185/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.774309934 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.24163198 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.815643395 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.259741192 seconds)
    (189/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.913226889 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.798469991 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.865820467 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186096913 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.914625667 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.292563567 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.963306548 seconds)
    (196/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.8246446 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.836574343 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.81089837 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.003839728 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.314326577 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.85403665 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.145507454 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.264030634 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.987203408 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.925707199 seconds)
    (206/309) benchmarking ("sort", Int8, false)...
    done (took 4.773543649 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.9005976 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.401538721 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.741639165 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.966797779 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.613086953 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88785657 seconds)
    (213/309) benchmarking ("sort", Float32, false)...
    done (took 5.583966913 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.714893704 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.926235093 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.161233403 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.823637391 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.816546947 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.845745114 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.589080062 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.022765791 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.215797005 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.842040716 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.815474601 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.0127596 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.091857582 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.805590266 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.153911873 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.846959403 seconds)
    (230/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.823959727 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.879388613 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.911898513 seconds)
    (233/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.953556123 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.131762513 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.510511224 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.132390535 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.497217099 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.86552658 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.112723105 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977366062 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.33171381 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.047604406 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.193134483 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.951709534 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.846432728 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619745199 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.713840921 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.738807016 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.921967201 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.037362634 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.938952117 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.022716603 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.914215866 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.837714138 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.208970734 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.923397987 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.041266294 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.825066661 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.939090757 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.822636782 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.972817292 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.077263004 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.030502811 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.151573803 seconds)
    (265/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.850003797 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.029832513 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.848886131 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.210010537 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.212811669 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.117384613 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.987544835 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217164403 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.063241568 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.825522714 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.969633844 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.930718994 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.999889226 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.852065197 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.932282751 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.196679918 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.918917536 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.973742706 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.711453147 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.00896638 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.914242842 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.813819904 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.945874487 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964649911 seconds)
    (289/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.909197629 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.908587109 seconds)
    (291/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.044386681 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.619361996 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.228766024 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.901685649 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.878268492 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.865703937 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.81178283 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.082242758 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.905477218 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.239170675 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.585143897 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.944786689 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.483761738 seconds)
    (304/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.059911213 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.967747901 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.850959147 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.127206282 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.140619702 seconds)
    (309/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.813234162 seconds)
  done (took 998.112363542 seconds)
done (took 999.932898356 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.029949442 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852746927 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.835026954 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.857906993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.948102478 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.871315772 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.845881412 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.837808448 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.883218423 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.884721176 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.835051096 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.868980654 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.838387647 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.837382565 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.836213005 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850635538 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.146813475 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.864366047 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.853569528 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.845817266 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.855142372 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.836077216 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.885681473 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.870536231 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.839178732 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.839752853 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.84083627 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.855381147 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.950383698 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.840857659 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.840720084 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.848341081 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.147349245 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.86198595 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.832802451 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.857851122 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.849145924 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.845515199 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.841420779 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.870379692 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.286826813 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.84499744 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.839514746 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.836996173 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.838125749 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.842169857 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.83967951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.843742522 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852147179 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852812266 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.282752048 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.860005525 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.842212819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.838382156 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.849121921 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.839446506 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.842746531 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855117339 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.858807057 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856659005 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140003634 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.869769492 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.840289545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.857074483 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.847536414 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.32102619 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.841194041 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.843605875 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.286942803 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.850655036 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.321980394 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.854715225 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.841129628 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.855063103 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.87137075 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.149985573 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.860403161 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.838591227 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.848099973 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.838531902 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.850382186 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852636339 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.844689174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.84061266 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854651009 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.874190218 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.849351596 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.843402677 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.850165359 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.859924349 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.849137376 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.852101016 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.84431683 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.834854212 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.849536721 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.843620087 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.844475481 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.844734742 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.845235837 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.851140668 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.286738726 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864725552 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.837349646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.837118812 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.840728314 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.855898843 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.288044013 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.8493606 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.863096365 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.889614488 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.842366325 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.140693419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.870836885 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858226072 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.850355988 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.845129329 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.837255176 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.141237182 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312697635 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.86474747 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.843963354 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.841187308 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857765817 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843970555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.838248869 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.151605061 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.869175625 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85686336 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.963965629 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.852390952 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.875099089 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.84084537 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.845517978 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876281296 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859794528 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.876183487 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.845285394 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858619882 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.859300337 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.839313633 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.855155949 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.853413365 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.844133633 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.849730491 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.836747531 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.877285158 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856910633 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.85674827 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.863971189 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.965354597 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.841110696 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.143910875 seconds)
done (took 291.209004628 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.909322847 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.837075656 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.93911921 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.841896974 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.924183437 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.925689283 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.837250614 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.837805461 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837615451 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.216475664 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.836930486 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.839384208 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.84013264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.838363812 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.923310194 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.840068023 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.837602387 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.205976841 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.840977112 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.911428799 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.839581875 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.838458997 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.841486624 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.219799323 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.841212341 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.832899938 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.911993287 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.84136645 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.18644348 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.839222099 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.836667887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.187819832 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.931766371 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.859042366 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.851924289 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.849275905 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.925848091 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.847203058 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.922592219 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.921690826 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.940645125 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.882379107 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.840359902 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.841475253 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.84511882 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.843349912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.839485699 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.871003048 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.83854363 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.839916923 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.180777857 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.852231071 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.850525715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.840593828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.840430739 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.863860528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.839756837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.843938921 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.933754506 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.845816747 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.904248593 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.2223009 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.21836213 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.842604915 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843782405 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.840250627 seconds)
  done (took 182.464870683 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.910082619 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.915312896 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.911444735 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.849341012 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.891885818 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.915843047 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.84747376 seconds)
  done (took 15.015490673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.849484127 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.844297933 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892164676 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.893330144 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.84462974 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.995072054 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.26328044 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.855490963 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842450512 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.898312731 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.844606016 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.845728305 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.851350268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.839246756 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.892640945 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.855840024 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.960698155 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.845702492 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846182787 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.998543919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842128004 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.851708948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.8989074 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.856655946 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.845290238 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.850722734 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.441266256 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846485141 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842965847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.844183424 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.842210211 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.889379006 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.845879938 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.842940237 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843199013 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.962147815 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.845884431 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843946786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84529756 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.845482817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.84501801 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.844967339 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846582939 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.843141351 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.845076743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.87057562 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.846296796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.846253202 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.846682066 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846537194 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.896245133 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.845728144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.842473496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.843911084 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901341053 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852900653 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.847955309 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.845024483 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.84772426 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844363959 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000756596 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.896173116 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.847028449 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.896520486 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848194605 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847526651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.847145234 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847860694 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942660001 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.847261117 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.895979698 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.844693424 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.004728566 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.871387034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.848646075 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.849892765 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.850344444 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848228244 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.841021898 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.854416044 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845234585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.849854509 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.854858517 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845721955 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845542498 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.960734673 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956694291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.845325206 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.861640799 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.855259957 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.845830981 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901467937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.848290511 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.846031383 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901774213 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.964914824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.904358463 seconds)
  done (took 203.976761343 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.852443728 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.856343498 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.849534126 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.863773531 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.84844079 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.848873225 seconds)
  done (took 12.89848342 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.850290762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.850191779 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.84969234 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.848750177 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.849504435 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.850375614 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.849985464 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850407385 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.853282393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.849778508 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.851532156 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.850640736 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.850137296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.849809556 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.850386172 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.85078067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.851160213 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.84720701 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.850148415 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850978786 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.994809595 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.849910037 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851316219 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.850843476 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.853032384 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.850151216 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.857171408 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.850295881 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.849830155 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.858703387 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.854804001 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.850633323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.851100217 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.855539831 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.855562138 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850739453 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854646657 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.851346894 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.848685695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.852020388 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.851897076 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852476987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.851330614 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.852236305 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.852585697 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.855375918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.855505567 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859631828 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.851432266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.851826421 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.852057651 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.852134576 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.851990123 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.853705054 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.85274244 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856658319 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.855050727 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.852162367 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.852216551 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.853272337 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.852767838 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.852603346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.85340244 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.855693771 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.860064883 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.853308427 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.852989523 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.856817459 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853888728 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.852656339 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.853445048 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.84852276 seconds)
  done (took 136.291771192 seconds)
done (took 552.434913756 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.107980964 seconds)
  done (took 8.889074842 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.904941609 seconds)
  done (took 8.784649758 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.516316018 seconds)
  done (took 10.297833904 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.859720427 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875371632 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.85375949 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.848982163 seconds)
  done (took 29.230759018 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.897662378 seconds)
  done (took 8.679515063 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.859304984 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.842990359 seconds)
  done (took 15.52072109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.919854753 seconds)
  done (took 8.703730444 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.913558121 seconds)
  done (took 8.702607652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.862833166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.858190488 seconds)
  done (took 15.518377227 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.834128791 seconds)
  done (took 8.616607595 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.655730943 seconds)
  done (took 11.446341382 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.857140252 seconds)
  done (took 8.655354155 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.866006078 seconds)
  done (took 8.649308107 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.064840916 seconds)
  done (took 9.848191945 seconds)
done (took 163.324573944 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.848626243 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.849523231 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.845672272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.845413381 seconds)
  done (took 29.172092866 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.886208028 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.885162458 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.887418226 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.896888637 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.889476517 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.885299904 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.878306549 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.878299182 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.897568379 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.890389207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.888344182 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.888145094 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.886113629 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.878745848 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.888957237 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.888209253 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.897587639 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.888658574 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.880993226 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.889707568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.855553129 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.896920242 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.890295168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.854043232 seconds)
  done (took 47.032259124 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.051815527 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.92445375 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.00719314 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.90538648 seconds)
  done (took 9.673566079 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.905687679 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.907612973 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.918873715 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.958152225 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.982860913 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.916670449 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.880389446 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.875798064 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.861581988 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.907293438 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.983672242 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.923371209 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.992343773 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.854893505 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.04188512 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.854884883 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.855051077 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90701499 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.958815548 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.988258848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.8560943 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907390867 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.910589974 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.924038136 seconds)
  done (took 47.85933858 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.853739919 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.862102828 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.860467431 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.85495031 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.854047345 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.854193061 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.861492463 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.855595746 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.876131058 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.856197452 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.853898459 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.854497243 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.854055339 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.855805006 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853883045 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.867524769 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.868670895 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.854250229 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.85884786 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.860907081 seconds)
  done (took 38.958191754 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.847888297 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.703204378 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.20024657 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.104961284 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.848539501 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.848768972 seconds)
  done (took 31.339730615 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.869436784 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.861302799 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.856282119 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.91268518 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.993903505 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.863777305 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856355181 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.866673285 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.903741064 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922423318 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.875564345 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.883505215 seconds)
  done (took 24.453024845 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.851290008 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.852991476 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853959746 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.868383416 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.867209901 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.863298475 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.863689342 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.850601073 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.870731046 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.874819494 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.865368027 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.86883171 seconds)
  done (took 44.143342312 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942286688 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.8949097 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.893660138 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537471511 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230996932 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062841845 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381546017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189727326 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857483875 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125921023 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887349733 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95938274 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108544191 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360121862 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886986472 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.322172513 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151235846 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065717216 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881394847 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551055017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91703059 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047253524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.620896932 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910910178 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064612215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.981713066 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.113064588 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853624397 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988418033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891442031 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863120253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852265487 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127676255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234666002 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95854951 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863378756 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471175653 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.568732811 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.847986142 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.618603065 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598647443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.980376932 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864823067 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854571539 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787531655 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.0142679 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230095502 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.861743356 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.566458123 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853508236 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866278456 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942337126 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.858180707 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.669557736 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773078108 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857369273 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.851640434 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861036381 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425780325 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.98925391 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048065222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.830366998 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.9474645 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559878674 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246544099 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.004868254 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.858834151 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85877106 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789643732 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55427861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911103804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185066569 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.877069542 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506815534 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155491729 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.943485489 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799301601 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130242504 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394746305 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.83004042 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08424423 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855845843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791783241 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.90002212 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790795431 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132900245 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894168976 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.657585146 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899192958 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189412818 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870800457 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877038669 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881058311 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080115264 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.744115185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856878154 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.666855943 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999756473 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878153121 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190557954 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793428796 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.861720394 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112231702 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.069045082 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940058661 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364699631 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016469159 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443350485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.912196414 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.009564734 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907818591 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.127806117 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915703285 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985708398 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911833945 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858636228 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182714394 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454717307 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.997671008 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.890642215 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98473881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.191798412 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887735056 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923297656 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861386234 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858302674 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.633075016 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41044675 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.857935605 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.864483566 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.942574464 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908649918 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.859895145 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808248574 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.477779871 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944754582 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.872042428 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083509905 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.453427654 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172397677 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793975655 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187300763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914781153 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.083213335 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.503829441 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.94064231 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121042834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937160435 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.97033161 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909695456 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878761027 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958520684 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882449085 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.009695022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15557325 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.863323634 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.864608335 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653490981 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897624535 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866151702 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.865591229 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611732586 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137332869 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885776439 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868223437 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.750717942 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.873886318 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926285204 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866720323 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.871297031 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.398156397 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590851037 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.869777661 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.442436164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086846983 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871823459 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.563609748 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973533991 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.943597722 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142028888 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920945284 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.795872018 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573675519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.5543555 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861920746 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797805081 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.861320622 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8717515 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873058467 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.059879267 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137924752 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907487474 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.561594347 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.905217927 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873174448 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.866174146 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86242452 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.371460585 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.996692386 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.056502522 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911077556 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006479121 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.876770088 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79780734 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866054178 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867237156 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863349231 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.863858154 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89609609 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.566078002 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236370539 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128618663 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473942833 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879092069 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.592811234 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.922202118 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.924738194 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.682339931 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049371003 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.914133858 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875571279 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.874579344 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.565091228 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.571801453 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430397647 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175377816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171370706 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305223121 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.087279401 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894876071 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199540108 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79980309 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.422300115 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923703134 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207639833 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810632975 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949750527 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.50951835 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214035612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879314484 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092921802 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254514314 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.59682992 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041202245 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076910698 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900878492 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.028547823 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82879619 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.392799148 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006342137 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.578050222 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07183615 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196520024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.547407736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.027283304 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.864401274 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578537377 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953504805 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577545925 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.03778674 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.057300728 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.805427461 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337272957 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875840624 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091144321 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225950253 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.02627894 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.992659015 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804738723 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.877404463 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878367417 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.876044865 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.861790456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.748790325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.12059623 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879909512 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800757321 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.977284325 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162360403 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.769905308 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872021993 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866611756 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186564873 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408503077 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039267531 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.968559497 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386626426 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874396974 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801231505 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801942967 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.560617495 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873550053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842724294 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082394532 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.970308845 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786816477 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955286114 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950842137 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123894767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.88237275 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14444405 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142524767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563751106 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893909905 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.968401933 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544886675 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.983704687 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868913085 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104885497 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.622280473 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097390565 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.938727643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.835363338 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.86898241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08626659 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869122971 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.773089657 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102988519 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.593512084 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.945135877 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183193681 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94477852 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.782225229 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919372297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.962163054 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879434023 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948749778 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880670554 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.881960691 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.881369923 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916623304 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772209376 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996867596 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88502242 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960850823 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005578605 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392633056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.876252598 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144692747 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22643015 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201115051 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930231752 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871724648 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871221821 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804434468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020416411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.097082293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144310213 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999224104 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.985364242 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897151084 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.587504803 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088805501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114865316 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147276498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.766006775 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388511404 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915801272 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.872286053 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882954834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.083019491 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0901099 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178540697 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016226513 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95871233 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237701639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14725286 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873007646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871594699 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464706308 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.958674 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565338865 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.917249612 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772768632 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150698149 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882717904 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255884962 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896010372 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.02923156 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.389821962 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57701022 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16353648 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86252403 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938716137 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149028582 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265868609 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188462489 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941934112 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884723088 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.982693457 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021077539 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.752420707 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874585391 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874263118 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.088097448 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.584189318 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.883169813 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156885944 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184498968 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.872340428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.758865543 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896510826 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.883678159 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098512259 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151179825 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128735007 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885743534 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882282255 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.690215096 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14954225 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934969772 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808862601 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.878048786 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974452192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12484442 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896107753 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.327962234 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.586857279 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155356768 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.876119892 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897321287 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041735704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248342689 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199187669 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.409283946 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088822489 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463528269 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470520472 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178491162 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.880463992 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.039146227 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181376707 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.879841952 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.965196109 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916394486 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.145847519 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188756461 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.952826914 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579007478 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.845088523 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.218297972 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438814143 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816980051 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886890213 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.941017331 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878419769 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007995708 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888868555 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.763736154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037290472 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.639487728 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150241485 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.88320902 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.869489289 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.595046576 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173797556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913289549 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018222395 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887176504 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.595548158 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.238331248 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132802678 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.961839358 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.891647606 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.881357358 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878329528 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864300214 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076163841 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.074517965 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154611008 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.991426861 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.918342346 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881330937 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.095485101 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090157499 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.780409103 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019262204 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96134818 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924369219 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.78835233 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380712144 seconds)
  done (took 1673.125196633 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880529369 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.949220242 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.901778471 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.99283156 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.898998883 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900344091 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.043346252 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.99911161 seconds)
  done (took 57.382017408 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.877085937 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.073550482 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.888245218 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.880051275 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.889784072 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.894388188 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.052620318 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891751625 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.888481885 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.889385161 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.880966591 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.878965573 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.202918052 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903418729 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.890276956 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.870459884 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.88828551 seconds)
  done (took 74.583356187 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909599649 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.944679516 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.899713669 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.896347541 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.831326571 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.889593599 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.655755944 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.906656219 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.882987329 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.105077758 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.510684246 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.892197093 seconds)
  done (took 90.142548769 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.89054651 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.886939442 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.887748386 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.88583043 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.887294718 seconds)
  done (took 11.258927256 seconds)
done (took 2180.935624058 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.126408027 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101390684 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120139549 seconds)
  done (took 6.039789049 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.031875545 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.07954848 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.198445525 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.203433817 seconds)
  done (took 10.334051867 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.171680925 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.264431151 seconds)
  done (took 6.254388843 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.271348924 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.886459267 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.265073126 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.88075482 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.887038456 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.883317757 seconds)
  done (took 22.474966423 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.886162381 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.889105163 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.885801678 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.8894724 seconds)
  done (took 9.369341994 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.870612244 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.584784435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.870122858 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.883461367 seconds)
  done (took 21.028349294 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.635360634 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.645465908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.63112831 seconds)
  done (took 9.730160541 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.392775603 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.783235168 seconds)
  done (took 8.994489212 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143773266 seconds)
  done (took 3.963656673 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.017966675 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.194464726 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.395598749 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.40487233 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.496299922 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.61378225 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.201811215 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.132187101 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.288497581 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.322456284 seconds)
  done (took 24.887334618 seconds)
done (took 138.443044439 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.257974561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.125449315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.092390749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.216549965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.11150999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.088428749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.098974999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.198763073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.724839382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.723488862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.215647814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.105624711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.050665217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.120066305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.051697369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121246578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.10493164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.267137197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.913435692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.111571552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.107000474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.855879698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.056720384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.868631636 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.105369906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.037402909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.433283713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.123356958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.063461811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.437853874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.040236751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.263303193 seconds)
  done (took 172.914452278 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.639782716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.883992235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.885339264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.885427082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.476027237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887480315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884648817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884659558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.277300187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.272155874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885556298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.494228257 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886920724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.899392781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885971863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885567949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.400894941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.683046808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.89448782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.898048796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904203463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.468071269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.907773119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.509361461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.452022049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.908432985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887253305 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910009407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.891621167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881444998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.898911731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.886879878 seconds)
  done (took 210.120398565 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.885949662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887106707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886815429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887108376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.888154199 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892938325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.887248867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.887291623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.653840412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.649751167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.893919479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.892858352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894942378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887903234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897098349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88756166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.900243574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.901108779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891591208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894753145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897122898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.71608218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902351756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.697265023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.891551807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.893041239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888920321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.895344997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898339525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897555758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901522674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888968377 seconds)
  done (took 221.556223454 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.091397451 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.896200093 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.89680747 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.85262821 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.896231085 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.895148038 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.890559402 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.085020089 seconds)
  done (took 19.342164304 seconds)
done (took 625.763971796 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.331858008 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.167745897 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.069607354 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.91913073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.155793525 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.951097972 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.915447732 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.979651796 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.644925458 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.982826469 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.569557031 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.931653546 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.652650143 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.936434656 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.041376616 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.973795302 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.446119008 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.535880819 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.0931509 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.986048042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.088969058 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.847932866 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.988206096 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.657501192 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.671328594 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.889731392 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.084068754 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.451855092 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.927835609 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.084293868 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.652626643 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.28207703 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.927050711 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.914359075 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.968897587 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.95051001 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.248732693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.923844347 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.038753502 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.65114167 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.977148665 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.526204681 seconds)
  done (took 103.865867671 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.890567756 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.889406458 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.888608608 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.890398566 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891700436 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.890206725 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888076468 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.890083437 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890481306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888703131 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.889458854 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.891637507 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.889430112 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.891878658 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890027126 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.890288236 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890435114 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.892371897 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.88858119 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888776135 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89168435 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.889571461 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.900346088 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.890562988 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.891550198 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.891749077 seconds)
  done (took 50.994887901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.900448188 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.043817143 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.121002367 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.917764032 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.899387089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.902250944 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.917453445 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.904393773 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.901342338 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.902910004 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.994141434 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.906034583 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919186246 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.12390019 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.915275782 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.901085505 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.902027594 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.900218554 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.048975749 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915242644 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.919158993 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.905146853 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.918316724 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.912669284 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90326527 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.900758724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.904262707 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.373619031 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.910230116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.994585619 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.94318164 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.925128381 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.337495154 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.132854853 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.952058559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.911245466 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.90286909 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.998574112 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.906396064 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.901995818 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.919715858 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.906152765 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.12383868 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.402668648 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.912681549 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.90285081 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.383216961 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.006189942 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.942723824 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911960544 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.127261631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.916962838 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.90356174 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.902058296 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.939743121 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912408798 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.902336192 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.267682007 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.913640954 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.922058751 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.907575029 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.903381399 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056559036 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.909657247 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.046581823 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.912619707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.909993501 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.904009338 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.126832897 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.91861103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.414180816 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.915722154 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.903140737 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.995502911 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.050694082 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.407861598 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.914604619 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060167522 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354676236 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.926414061 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.909957739 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.364511639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.930390777 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.909667472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.906493508 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.904812335 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.904141288 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.947672436 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.919586582 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.345942361 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.413495818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.279454083 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.928156719 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.919721744 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.905081625 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.266917396 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.9116656 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.904214916 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.120825296 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.419946747 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.916705191 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.912254145 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.398814479 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.917986582 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.922673145 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.912024845 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.131529158 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.918380204 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.948767256 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.904887872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.911449231 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.907852327 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.923558504 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.911522431 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.905795706 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.385506258 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.014212886 seconds)
  done (took 235.940148929 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.903002666 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.900230352 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.897613793 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.899902792 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.897625981 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.905160407 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.899065316 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.900013499 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.905195496 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.898530012 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.900098351 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.898511631 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.900477471 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.89906589 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.402438734 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.907983082 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.511538748 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.903379049 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.901014589 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90246436 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.580435996 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.910283026 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.901501794 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.900429601 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.900709582 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.89733786 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.902440806 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.939868476 seconds)
  done (took 168.904501072 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.904463111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085204964 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.920981811 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940599896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.916211841 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.90275273 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.929763615 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.925521331 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.913500815 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.903088492 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.903483981 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.967543778 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.920487433 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.039906683 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.937141304 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.937627538 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.010466518 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.911683017 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.904099157 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.903147202 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.933552437 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.904244633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.968379131 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.035596865 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.922057145 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021163374 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.912587566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.906997413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.906376666 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025319516 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.921352266 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.966293113 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.936423638 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.927764421 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.031076632 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021822289 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014037813 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.935050723 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.911136472 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.904676656 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.904442081 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.898833809 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024916999 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.92237318 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.907371153 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020201187 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.922768013 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.907787468 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.915669298 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.904733243 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.920961713 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.927971172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.975759119 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041684851 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.937774572 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.934309978 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.931642772 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.200898614 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.91728619 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.009566293 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.904631696 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.025766756 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.925220191 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.899793499 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.908472558 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.913109699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.935514124 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.943623103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.014293406 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.914695273 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.010002661 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.941940607 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.917856866 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.908016784 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.91041953 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.027185981 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027032945 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.942050709 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.945762342 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.942926609 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.910231566 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.909076619 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.901797431 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.927341348 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.912932477 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.029700418 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025346063 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.914655476 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.908720553 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.909706181 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.90990706 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.935027584 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.036444268 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.941230359 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.011621283 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.976369534 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.982233536 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.921490686 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.922282431 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.916116138 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.973694359 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.921246297 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.919152284 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.2548717 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.981502679 seconds)
  done (took 206.760388441 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.390252171 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.964490032 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.967749803 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.195975078 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.328921523 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.736836747 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.955259572 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.964124507 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.986901651 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.125667206 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.020170993 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.971359457 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.950268916 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.936026715 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.961055799 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.985156123 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.96621429 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.256623492 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.077836137 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.039628156 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.937506302 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.266432369 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.273414855 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.330684884 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.992417604 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.277025971 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.640306379 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.204746751 seconds)
  done (took 62.548564454 seconds)
done (took 830.83782533 seconds)
SAVING RESULT...
DONE!
