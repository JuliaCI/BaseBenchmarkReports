cset: moving following pidspec: 18337
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.354015386 seconds)
loading group "string"... done (took 0.553872094 seconds)
loading group "linalg"... done (took 7.205401121 seconds)
loading group "parallel"... done (took 0.15258915 seconds)
loading group "find"... done (took 1.132751072 seconds)
loading group "tuple"... done (took 1.774429525 seconds)
loading group "dates"... done (took 1.189760268 seconds)
loading group "micro"... done (took 0.232969159 seconds)
loading group "io"... done (took 0.919344134 seconds)
loading group "scalar"... done (took 37.72993526 seconds)
loading group "sparse"... done (took 11.656308711 seconds)
loading group "broadcast"... done (took 0.902668781 seconds)
loading group "union"... done (took 12.435004951 seconds)
loading group "simd"... done (took 4.114214006 seconds)
loading group "random"... done (took 8.855844876 seconds)
loading group "problem"... done (took 1.762353508 seconds)
loading group "array"... done (took 20.244173703 seconds)
loading group "misc"... done (took 1.64595349 seconds)
loading group "sort"... done (took 3.086832995 seconds)
loading group "collection"... done (took 16.599499595 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485270212 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122898766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116622325 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121291519 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147853493 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114095572 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12301572 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084047086 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.864390824 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147443223 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117683386 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414851957 seconds)
done (took 5.157280952 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174307669 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083043105 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081478203 seconds)
  done (took 1.302214842 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066562222 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121872932 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066816146 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066460477 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068732321 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067947488 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068324516 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067812524 seconds)
  done (took 1.66674951 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072737811 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070016572 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.07074331 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069663254 seconds)
  done (took 1.423441477 seconds)
done (took 5.781053636 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766154417 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201434432 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182693264 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398661649 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132958475 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157537828 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637624609 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.300143401 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183220972 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0812225 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106600084 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320412289 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108249981 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641586576 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077014834 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090820137 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137525394 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441387815 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067527185 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081787948 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089057989 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129159482 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085617458 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074482168 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142472802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067541567 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133933444 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079896864 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066141543 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211437886 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172303452 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65845634 seconds)
  done (took 10.203186588 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0961895 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097681752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068636286 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137921926 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09731702 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071695551 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07270401 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069131247 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089768763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131394679 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092165924 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104328224 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06728298 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070856561 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086917967 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207721598 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082197646 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084050953 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071993602 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077022521 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122343357 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080804623 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079999854 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080236059 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131638947 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180714504 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095993189 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097314367 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066939262 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082270945 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117017673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129127971 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067470656 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067916647 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127284898 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096404345 seconds)
  done (took 4.674656048 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.301745636 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11039736 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140418572 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090213692 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134666801 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066436348 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110730513 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067589645 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083324734 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20630471 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.37094948 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577540631 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064574447 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110812754 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103695538 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069406848 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069319313 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06881852 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351200609 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106304856 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103100088 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08031274 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068653407 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068001922 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346388869 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067108929 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063374126 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068188984 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059392209 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126549501 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069133139 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.933233793 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125883594 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067095959 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101010158 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.293114384 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091215929 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144131116 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068012558 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06515836 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149890479 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070464138 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066577678 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084259398 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103625056 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11254925 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066160172 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066877431 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161809456 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065391229 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079325185 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.99551336 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067534195 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153804941 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076168568 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066218134 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249141438 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088465499 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07082628 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066223315 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178958572 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137598811 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069494823 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068493073 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070064042 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07135452 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370267011 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068403439 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.026722921 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067887467 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077330051 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069422988 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069370783 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075334615 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072545149 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084623682 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065916447 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076000011 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067509743 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067333625 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068493303 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064734564 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087254589 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.352454286 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065747653 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067319289 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065315935 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087384397 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097648266 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067862288 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066150572 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.206324025 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069404354 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067311792 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108620535 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069454613 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088228945 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069020811 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11455242 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06906191 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09366613 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072862175 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10083108 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072478458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101318745 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084843483 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070418433 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.404623212 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065402118 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064731119 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071252049 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067151282 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070169765 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067868659 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081826665 seconds)
  done (took 21.3851821 seconds)
done (took 38.70345783 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237291303 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079627962 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079490582 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079735038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079937947 seconds)
  done (took 1.7860487 seconds)
done (took 2.998708171 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120133094 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098403839 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06503304 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095206477 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064531379 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099892937 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098864814 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080866108 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099165367 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064250411 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095944638 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064486606 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064326111 seconds)
  done (took 2.343119819 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082205748 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084591561 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070962158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084261084 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065873973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085213428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082270613 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090696942 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082669415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073559697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065620301 seconds)
  done (took 2.072269804 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081481531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083464346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071222628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08399251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067945269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083159046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082467042 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088192592 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082891645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074840327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06522614 seconds)
  done (took 2.067143385 seconds)
done (took 7.683554706 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077278523 seconds)
  done (took 1.268854096 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591076426 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.148922303 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081825858 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113562236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190361056 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122289042 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27895145 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089365126 seconds)
  done (took 9.002476343 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102489475 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071003598 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071788549 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073323882 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073981031 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070855922 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071711084 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073527282 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07434315 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070249985 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073056754 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071377397 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071512706 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072838286 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071069208 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073648265 seconds)
  done (took 2.453965774 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092504851 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090909434 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073787673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075275487 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07445343 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07426211 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075991993 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07570412 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073301242 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074258151 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076894155 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076178038 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07395005 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070886637 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076158802 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077845814 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073049507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076087664 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076573009 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077112371 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07632542 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066580866 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073232772 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076129321 seconds)
  done (took 3.128974393 seconds)
done (took 17.054748318 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114169504 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071999465 seconds)
  done (took 1.386199574 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082238049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08451557 seconds)
  done (took 1.37372805 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084893379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066684589 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092769725 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079130121 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067233246 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067588126 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091295335 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068498609 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068295029 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068965065 seconds)
  done (took 1.964207194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068709613 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078941822 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070621076 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083917416 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076998358 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066692598 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075942599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070282973 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081226223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064665168 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073716999 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084873597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074039371 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086525233 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075528182 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070901633 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073743676 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069569055 seconds)
  done (took 2.557677891 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065720444 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067545735 seconds)
  done (took 1.3473205 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067226016 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064433466 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067903103 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067606773 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064303324 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063289091 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065756629 seconds)
  done (took 1.670281111 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392006795 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112532385 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30830659 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072718497 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084391175 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255957605 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067216951 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072162828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072260182 seconds)
  done (took 2.695527521 seconds)
done (took 14.210866063 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079213297 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085843447 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095992107 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36603127 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092679282 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065971835 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114028038 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189931717 seconds)
done (took 2.315636595 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214265956 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619092245 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398473459 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197931675 seconds)
  done (took 2.433596702 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328934189 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089047693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060701237 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068868064 seconds)
  done (took 1.771467263 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066444096 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06950004 seconds)
  done (took 1.362005048 seconds)
done (took 7.004675791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066899311 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086700837 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067369557 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065670453 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065539541 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068249625 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065125633 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065125817 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067405175 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067571734 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070611276 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067872194 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067709351 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065249165 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065497177 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065191901 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067655472 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065167151 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065015464 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065530419 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067716414 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065120055 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06514378 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067465131 seconds)
  done (took 2.877070828 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083644853 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066668903 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071858087 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071598653 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07003209 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075635742 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07249599 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066431896 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071603389 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068639038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071310324 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071190506 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06945403 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072158203 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069888826 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07221952 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073206621 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06877151 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069928158 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071743867 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07291118 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068097288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071872028 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072751937 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071299807 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073606136 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069908172 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068374079 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073146837 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071836842 seconds)
  done (took 3.377787927 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069847431 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06472279 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066646276 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0730698 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066152555 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066958318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065162534 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066156153 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066038347 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.179354208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066720938 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065563662 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065369999 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066224517 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06632712 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069100351 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080768208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065614314 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065267209 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065790367 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068439301 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065044399 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065378976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065462984 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065253453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064761132 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065711985 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065405073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065841514 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064849515 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068626448 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06881378 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065168232 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07230922 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068392238 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065078056 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0688972 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065012954 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065363837 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065068602 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064841397 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064782734 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064990465 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072034465 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06562481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069648215 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065098556 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066384264 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065411354 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071485907 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064710625 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064935 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067414878 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066153081 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069079161 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064384176 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068683272 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064814623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065905807 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06467699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065008534 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064733781 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067477164 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065745311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079620712 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07187812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064649779 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070454269 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065874067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067886965 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067410729 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078871224 seconds)
  done (took 6.188337876 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103993835 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087747122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065745416 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065307995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062605703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066008211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072612829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066285386 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066898777 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071684395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068884669 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066968971 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067251577 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06881772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066095897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068184924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074559266 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066766865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066018197 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069210635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069264684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069760033 seconds)
  done (took 2.795515517 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155518721 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07009306 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105388154 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07309085 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067562946 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074756246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071768852 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071859106 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071973224 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070632631 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069997675 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071884247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069682388 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06999358 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070092531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070006885 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071835001 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070066422 seconds)
  done (took 2.631950164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077089025 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066823429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086692679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067918872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067577789 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070435935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072341448 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076532151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069912477 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067812417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076271111 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069823837 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069896097 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067774747 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070095212 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067807097 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070093334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067734718 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076231993 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072654431 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072622489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076039021 seconds)
  done (took 2.816506715 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08021615 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068238543 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082651818 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070695625 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06431202 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06675393 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071590811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068497923 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072050403 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06940132 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068138282 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066281842 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071127414 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067391404 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070846117 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067811503 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068818889 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067731678 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069160295 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063648655 seconds)
  done (took 2.637006844 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100180779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067474189 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068256591 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089414713 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067961139 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069632966 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090425913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069277064 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068704179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08924141 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069095189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069375064 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090547646 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07430459 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069120675 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090911506 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09065744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090365775 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069191484 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069013898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089173181 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069176631 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09042249 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069054132 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068737489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069432723 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068892344 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073941949 seconds)
  done (took 3.404482738 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066868054 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066668228 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063863447 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063659894 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065057756 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065356949 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065490049 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065447459 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067634091 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065956745 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067475362 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068133634 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067981205 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06733663 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067610642 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067537678 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068171801 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065077847 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065329258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065146951 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067482015 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067647944 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067372433 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065310199 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064711436 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067667595 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065178828 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065308705 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067467575 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065515226 seconds)
  done (took 3.235593924 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075960883 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072676193 seconds)
  done (took 1.395443448 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063378356 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079333968 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064045192 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070007583 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071300081 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068077964 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075309441 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071744175 seconds)
  done (took 1.80605667 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082404422 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079193741 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070108029 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082971967 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078854298 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085298497 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135711157 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069485233 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074725689 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066387274 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081646962 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067250661 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073920174 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068257222 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073527243 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073976277 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065802255 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074671006 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070387568 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066612745 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0691209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076798923 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070989224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063363511 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069220917 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090364821 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079591846 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067788524 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070730741 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075017676 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073378192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061698788 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068088535 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068353222 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065609408 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077789041 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083881299 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070168755 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076669712 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069302415 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079092522 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062869529 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072675665 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073878994 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077535194 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068088573 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068457481 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062891001 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065521372 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069989574 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063160525 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067808577 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062458743 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077596126 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071457694 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078937898 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066923172 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069321243 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071020965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071159095 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075894413 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070091207 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070454477 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067729047 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077878701 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072531091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077445569 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063131233 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062350686 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065685364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078226658 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090734895 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074214075 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068847721 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069067713 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065741532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070398884 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069070869 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07319376 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073416324 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068160816 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073152885 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074561878 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067903448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069670631 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075738316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065638938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070276721 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06514016 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084201492 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066295729 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06589479 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065376579 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078263985 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071256749 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06750184 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065401518 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075049842 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06226292 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068695905 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068286015 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067759407 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078127934 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072200542 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072279441 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075821882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074479268 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067277345 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070321728 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063839391 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068067891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065885702 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073513382 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060986378 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069124543 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.19416285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068381868 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077901958 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066358816 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069157501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076264496 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074956379 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06704251 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065272229 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071800297 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068701056 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071562145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077191397 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067446575 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063730514 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064303429 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071914211 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067980301 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072018534 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073980532 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071194735 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063232976 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066799847 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074188142 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077764817 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069130611 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069719341 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07528234 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070190404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068047423 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075694015 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071346469 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068501759 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074535495 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070185721 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064021141 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072383483 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071864415 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067390507 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071975635 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07184199 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070767509 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069802513 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067371598 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076493938 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069860371 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067214745 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068517465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068007651 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079597366 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070578438 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063612817 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065674721 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078438132 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067075011 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068861825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067972674 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070681633 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06897075 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06659484 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067644901 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070666549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079227201 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072275022 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068645269 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072500866 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078411196 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065770997 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069130284 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066789867 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069093266 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069130421 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077046216 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072582402 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072353954 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070055638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065018497 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073971949 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075369374 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067636635 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066079495 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067273496 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072792016 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07384144 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072113749 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068465523 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066341079 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068768854 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071636132 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070348243 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067736039 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066800619 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075098292 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065989552 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075244332 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068789439 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078171883 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071586278 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063140983 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071304962 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065669846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073994466 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06318676 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065803068 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06728412 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069427312 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067140237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070535797 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062041592 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074590815 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074600442 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068620352 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066731644 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067240667 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073611253 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06846821 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070395616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070700061 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072849817 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.207069026 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067280069 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073598321 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079666639 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068914581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063805078 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073894257 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06783432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067945759 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068576707 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066589489 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072092132 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079326392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076206963 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062702583 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071331808 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067600715 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068282395 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06406134 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073244081 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072439861 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069137308 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075556591 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069710918 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069247641 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072869302 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068507246 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070085052 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069683332 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071714468 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069555008 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07130535 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068948153 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071671915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067923667 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067159049 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071057701 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070193422 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069842569 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075339816 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069033247 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06911549 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071424909 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070074726 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069623071 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069379257 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068734431 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071983994 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069606944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068278897 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070804097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063967592 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075777476 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068881785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075975757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069194611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065229468 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075268963 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07095428 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074996703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070261096 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070276307 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069551319 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068919052 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071604269 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075172471 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066620886 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079949238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076348245 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068962453 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071844913 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068675621 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069717216 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066623192 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068664079 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068766108 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068555114 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067774722 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072741594 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070406842 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068171766 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069841901 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069027761 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068642569 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069862139 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06260469 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067497045 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067540484 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067867216 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077791168 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068335343 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067575401 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06653984 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068562605 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066998247 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064852084 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076178999 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077153325 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06797844 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07471652 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06640495 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069027624 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07865802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061653668 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065839974 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065486704 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065273865 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074750173 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068298466 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0766003 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06749777 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066592788 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064477688 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067841242 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065724263 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062011633 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065096946 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071506277 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066211509 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066339985 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067487371 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069297235 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.200651827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077575682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067507452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068857811 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067589953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065064785 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066612642 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066574626 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071384865 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068818785 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066696757 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066389377 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068757792 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069265598 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069498413 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067515518 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070269257 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078673318 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068549684 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071740893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072146682 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063109085 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072110665 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068784249 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068705384 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067252378 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072768176 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072133662 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070452077 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077988195 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069996133 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0692709 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069687784 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067066037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068450706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069209919 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068880813 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068060405 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07057102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077160966 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067397975 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072162826 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068895843 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069234371 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075879273 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069542499 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072026536 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076075195 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069594978 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071291807 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077454829 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073392734 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072467564 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070112745 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070105206 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072621801 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066441325 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073654369 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067129664 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068284905 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069161174 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064771828 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066154926 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06692832 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06831857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074955817 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069152059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06781394 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06771092 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066902003 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068975437 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071792465 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075813551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070593586 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071209089 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063381332 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065554711 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069488324 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066120741 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069261886 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070576603 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074090551 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070965807 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068492979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067162726 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077108389 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074309527 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072035584 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065917988 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071823837 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06928575 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070565435 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068964613 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068825585 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069640369 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07177499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069524267 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067253088 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074502294 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070973033 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068679344 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069116698 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068256452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06766204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062927702 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06867067 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069561758 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072908165 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069998677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068301331 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078255836 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065714954 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068039735 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07087689 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066667514 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071994097 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062441283 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068730446 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068108812 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068079976 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06245385 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066267083 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065001687 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.202874059 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066746558 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063107403 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078765636 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076300799 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070457913 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066485062 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065612067 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062866909 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062302469 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066533663 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0682868 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070340976 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078362249 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065578063 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067033322 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064446895 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069187567 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071432117 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072133984 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066091388 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064252964 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067857076 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072325518 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074548722 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067329223 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06870982 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07167719 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070523726 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06699997 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072783052 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065789584 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072581084 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082402626 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070172894 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069545435 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075679868 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074870188 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067859642 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061737667 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067564359 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070619911 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067254684 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068247868 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070878212 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084085288 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07220653 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068085429 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068318713 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071132996 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068167596 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07711855 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069248703 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069494484 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072814505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071240415 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07865175 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071406877 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076212631 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071689611 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071348947 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067022699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06909393 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066430669 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067950604 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069490638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068935822 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074469085 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077650215 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067980628 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079357374 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077515998 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070431118 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065196253 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067839509 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067322929 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063412676 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069230609 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066299489 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066071743 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066179084 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066984909 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069285228 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073594781 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069091848 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068703537 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067730858 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062166296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070319589 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070034838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068624633 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064689835 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067892535 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068527189 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07178796 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071445687 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065701032 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069608677 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069673463 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068502917 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063109401 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0743249 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066702508 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069596419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067102692 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06801747 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068506141 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070750237 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072963376 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068560467 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069993018 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071435244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069749668 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065099242 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065370334 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072390545 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064990423 seconds)
  done (took 43.658314665 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101241711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06359229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062853419 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061820395 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077997951 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064957054 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063660896 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064808266 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064656142 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06719714 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063671802 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06387356 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076188864 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080058773 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079188798 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071772153 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064145747 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064864454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064221216 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0654562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073151003 seconds)
  done (took 2.811796321 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07501544 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070630658 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073491902 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076909223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06765721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070660357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072297225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071016496 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076185753 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068605254 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077788095 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073269722 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067225708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067117271 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0672944 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071190986 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075829694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067445488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070642671 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073126276 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070623197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072748093 seconds)
  done (took 2.897309835 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066720379 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073868701 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067568805 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061427445 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065824802 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061739394 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071037603 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065968912 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071867432 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067427227 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067017642 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067017103 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06992015 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063528562 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067939189 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065919146 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111589225 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070590789 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065608698 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068442514 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063414797 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069620991 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063446523 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063834153 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066891288 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07126095 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068624601 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065720103 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067362692 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067342016 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067804158 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065704546 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069485229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068141179 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066944319 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066793573 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067302026 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067687588 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063397313 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066031767 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067894039 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063888055 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068340796 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069145539 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065520662 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065740139 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069146623 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067844862 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06309391 seconds)
  done (took 4.650235542 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080563 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109722654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06804621 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088322097 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080107889 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076228164 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071011764 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091118115 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065376644 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066208277 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084020371 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08191665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067784236 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072340922 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074203517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06818709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068843339 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066626999 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071849075 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067100797 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071923606 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073361409 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081218369 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08033569 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070108945 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064553581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065085458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070152268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078872265 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070381281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070342302 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072010239 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080857224 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070524265 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064578992 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067640776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081707856 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06653065 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06987552 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065442707 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069637524 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071603585 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072945472 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08224555 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066718709 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072325436 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067429803 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064733915 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080025414 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069977623 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075287922 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082345571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07149414 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067686461 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071783556 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082020377 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067179971 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065609763 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070469077 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079868367 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065616247 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071499893 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081391216 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06932985 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07471367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081867962 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.0729832 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071145625 seconds)
  done (took 6.461478791 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074822554 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071857163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103098952 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08424016 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072843133 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072780675 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072590127 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072224458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072055446 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077440492 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072702871 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09279369 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067437777 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075154895 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072429927 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072534783 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072777891 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072793082 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072626583 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072338231 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072885394 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08336876 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072081655 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083932682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079783005 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067874992 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07208755 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072720588 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08428874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072806437 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079762555 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072243521 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072150176 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083951151 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080978064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07415478 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066794308 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074353132 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074832012 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074206672 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068875755 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084541264 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072605472 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068220395 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072848255 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071905698 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08394911 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080104468 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076677893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078725294 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073869744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08541701 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073806153 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07421741 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085521725 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106853869 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085511692 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086003824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074687812 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085941674 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0859669 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088388223 seconds)
  done (took 6.143492875 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085107045 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075445137 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076933496 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062021709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065502951 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072194794 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066152772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066087161 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076791482 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076900415 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078924708 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07201844 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074889396 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079008726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071752255 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075122588 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072015785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071985885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07688198 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072097571 seconds)
  done (took 2.814155965 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074251343 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083218656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067933288 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07361297 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070406308 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074353475 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070101376 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071301759 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06909941 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070938917 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07799642 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078070963 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068825495 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074073806 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07790868 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074543018 seconds)
  done (took 2.516527062 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075219543 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072370015 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085697314 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067736802 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066106954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064455747 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068276222 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063190498 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064056428 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080252397 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067566052 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070169323 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067829303 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066470981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06527989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070729546 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064478874 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065162945 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068049699 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080599409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078284297 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.073725922 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069080025 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067462133 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067721689 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072966718 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070207878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065548558 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064804697 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067557081 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068274213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071186179 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065252903 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065582776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066108712 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069375884 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06717441 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068154079 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070264759 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067209253 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065876173 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067524494 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067358372 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072279727 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063840596 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068125443 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064019518 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06982153 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069844022 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067825713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067250559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075502247 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068146076 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074707324 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073505724 seconds)
  done (took 5.14671066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079389033 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069462141 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062080533 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06425152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069217229 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067301651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070381973 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067637583 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06763063 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064997673 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068458436 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070485618 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069707439 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071360813 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069601933 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071537836 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06357847 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069828005 seconds)
  done (took 2.588788911 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071040715 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06624905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074096969 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068037082 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067699467 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070278565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063761449 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066263633 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066624203 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067778245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067714322 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070158436 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066968924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070167954 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068038363 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067843594 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070073041 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066488112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067834404 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06363748 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069800988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066088746 seconds)
  done (took 2.841060939 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091985769 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082959369 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140920444 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081006016 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086120809 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073919445 seconds)
  done (took 1.903050799 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089651115 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078623238 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067595506 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089427373 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076481274 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069554491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069111514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069624915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078369698 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078105364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069370264 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078128396 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078030575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08042633 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075358274 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074950061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069485534 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069340578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068012427 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086367925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069734798 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077774473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069607999 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068987887 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069098308 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080362394 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078301088 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077924054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069576959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078094564 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07512362 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069836429 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078476285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078176562 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071266658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078765554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069741599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086852361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075499873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081174949 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071067675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075956084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078443698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074913182 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078389948 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070370813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074531199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070121002 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069513637 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088651336 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075537641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080574661 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075726804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078498116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078510138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088483827 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078656085 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080611403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076370763 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081895265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081012986 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075590274 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080359826 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078160744 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075793612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080818195 seconds)
  done (took 6.389014799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104462558 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068424515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068019081 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076946613 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080426025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070009384 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070031538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069852437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070411855 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069961871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110653521 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070655178 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081088948 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08162557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07036593 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069914201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07013706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08089986 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069680928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088816381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069633418 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081236828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080829561 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080323025 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078991095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075875487 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070090279 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070132953 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070136008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069822766 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075229134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070168566 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08069644 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069602198 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08094827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070038729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069852035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074789419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069547832 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075312216 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080909271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086485399 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069188314 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069085343 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078342326 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069858437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069290938 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06926583 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069251644 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06937487 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078600902 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07781519 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07821491 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080292466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069427652 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07027126 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070072114 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069758179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069542909 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075234159 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080173375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069571707 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088121299 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069363052 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069208826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080990779 seconds)
  done (took 6.317990954 seconds)
done (took 131.529981959 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18263468 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165511106 seconds)
  done (took 1.690527418 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06897351 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097782198 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080168806 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130949719 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066646811 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100026881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099425763 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077807092 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066103692 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066735009 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066761421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068592455 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13131955 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066463425 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066415277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069193649 seconds)
  done (took 2.678365586 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097205974 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158734199 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098979416 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06751385 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099947632 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075615523 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067214526 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077545421 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073378776 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067298401 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075604939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073296255 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066937481 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073399033 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073435802 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074155242 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064975906 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075022806 seconds)
  done (took 2.818002521 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10138564 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09222746 seconds)
  done (took 1.555322645 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154479566 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.111154142 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149759935 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345892151 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167765402 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229180326 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127873431 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128206312 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117898447 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123931822 seconds)
  done (took 3.012346275 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097808973 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152357586 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255141481 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115729867 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073876638 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098871697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119388264 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080476776 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083775652 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083154003 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082313977 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078766448 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10149231 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076711215 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075706668 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079337379 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105703798 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074697565 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075777836 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076908215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099051345 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065493866 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073715489 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072659677 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078080428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079405416 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067810506 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067520924 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079281719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076099267 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079430447 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096801161 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080461019 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111142607 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072878288 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111622887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07903643 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076476324 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076065056 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07637854 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081539818 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081669133 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074879417 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078904462 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067331789 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078994082 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067667032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067365941 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080939431 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069316478 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080705841 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079942936 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.11150444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069016383 seconds)
  done (took 6.082980975 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102883718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104023616 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07244125 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111608199 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099544698 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0722794 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101342619 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093418808 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102975085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070276283 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06849827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070496275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082615416 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083113719 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113181819 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104194876 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073854843 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071338643 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104123946 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102694847 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068410001 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094769513 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089966408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102260597 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067370295 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070425575 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068327527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07048588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077401217 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079104978 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069848639 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081283204 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085628745 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078870241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067203089 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068979838 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070528961 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082747638 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081850785 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081397499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.0778703 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069578113 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069932593 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071248798 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071908956 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07015335 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081389044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083507169 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081460285 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071356832 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072028731 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069946192 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071624167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085866485 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080629192 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084530315 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080767456 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068527993 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068790979 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072727551 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081682894 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079598279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079645712 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069726372 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079509019 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068466715 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08317681 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086220821 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069737435 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071821265 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070368888 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071601968 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071381455 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080188185 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079963049 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07134806 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0712504 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070578292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082393362 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080348737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069721439 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07887134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06877294 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069929486 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071154713 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071050923 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079653037 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081743042 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071263498 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069818947 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070904702 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069967236 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068458482 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079093499 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082135684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080209789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080356007 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070655137 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080651139 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07979276 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071320674 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080449132 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.200780387 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073294507 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072900168 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082807682 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081419805 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083066402 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07233038 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071198831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081733002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083358208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070662345 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081836407 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08457117 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082440903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071073316 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085383056 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06967705 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083986857 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072048835 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083385327 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071805139 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082360585 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07137598 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07077239 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069781717 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080584545 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071664626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070376713 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071627617 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071696928 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080153096 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083251218 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071297818 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082460113 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079543428 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07097127 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0799749 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069600796 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081553727 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072421529 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072561144 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070247575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085837569 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071512164 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070628131 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07205051 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082060421 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068871449 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080091862 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079410398 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068544397 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081526694 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081229608 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078100478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080768591 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071015815 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068248315 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068536879 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070437113 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079249814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080216054 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070702592 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068255212 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079015761 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079603847 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067466117 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080094055 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079860496 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080268245 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068908467 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070836432 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082810212 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08098648 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07883236 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078558471 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07917353 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068628376 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078886738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080011345 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069748902 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086447154 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069934503 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085100464 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081625927 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078609358 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080701413 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081911424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0808303 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082160369 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085418943 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068070357 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068658125 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081355403 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069863674 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070801714 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080337106 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070564994 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070667252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084919388 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067636442 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078034414 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06657391 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077670519 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066118739 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.201903247 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087152117 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069468494 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070308201 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083136749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073056359 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08163148 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084363289 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079520276 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068593311 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072276481 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083557793 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083437578 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071374087 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070806998 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07314117 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082095649 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08103416 seconds)
  done (took 18.985043485 seconds)
done (took 38.190114864 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208847617 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152131822 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198126334 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119205442 seconds)
  done (took 2.138655193 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.140419255 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102891518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.109043911 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067356968 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.118180103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067547322 seconds)
  done (took 1.9993083 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313700564 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210810682 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183141159 seconds)
  done (took 2.103545878 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198655273 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193310744 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.400772592 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253596922 seconds)
  done (took 2.548942042 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14464284 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098257138 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069385641 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086015298 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.149271613 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169181641 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.112533039 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132316991 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080588611 seconds)
  done (took 2.492101106 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151200068 seconds)
done (took 12.831794771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.23343865 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.205878421 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164431497 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.123935314 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.173895903 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172622421 seconds)
    (7/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111150542 seconds)
    (8/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214187923 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16323444 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084059115 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154617482 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.151492991 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202796789 seconds)
    (14/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09030165 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079965392 seconds)
    (16/309) benchmarking ("sort", Float32, false)...
    done (took 0.129871282 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07646191 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074934567 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079209546 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110187397 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.175998031 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.234231689 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.144482559 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074809429 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.235938101 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199417833 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.382382521 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190376764 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075259453 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065880786 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.209729084 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190027643 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075172333 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139430647 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076050303 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139338571 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098406457 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065171194 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077617623 seconds)
    (40/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164550918 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074341277 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093219694 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073744008 seconds)
    (44/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.116986731 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.179728765 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178519657 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076443673 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164251486 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06704982 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071227548 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095437805 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076033059 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074569781 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063999445 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153257786 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088213558 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073570127 seconds)
    (58/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101769911 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090722633 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067592861 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073445519 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075103013 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054027813 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075996696 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068716235 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.0881949 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08106732 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076847395 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098640806 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077983911 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07480784 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094443368 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10886232 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090721922 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178108153 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.145066671 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063261768 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073723445 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072741101 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174984575 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137317849 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.224384722 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153265976 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.177153851 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140976686 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.069929496 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05549845 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053978714 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.11337304 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17134241 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18947354 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170839532 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192410013 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053827108 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070507617 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077890712 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068605474 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082703707 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067675186 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06820704 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084740023 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074183126 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068648436 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094678754 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093639814 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05348734 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15364369 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096437913 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091746401 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096099066 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128211521 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074172738 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055665264 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080885446 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.190379173 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.146500713 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138258433 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190356928 seconds)
    (119/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071977272 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075319117 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102072171 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074116531 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07253216 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073516982 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054144695 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073778566 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.136259645 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075514557 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070348142 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088015697 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07270496 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091522631 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073336742 seconds)
    (134/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07766793 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066997542 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085547495 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053769748 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074247762 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066621595 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170763167 seconds)
    (141/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054176574 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071372112 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069392074 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082879885 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078550567 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075093826 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06695416 seconds)
    (148/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06742952 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074245202 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106442122 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069222527 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067107901 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07211254 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 0.126954362 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054498862 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067032028 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075413762 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089205657 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077950658 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134596712 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.16074713 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092217555 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069842663 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067235596 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054240053 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077090046 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096642521 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067518562 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124896735 seconds)
    (170/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073306043 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162120732 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072331554 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064510961 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.181732679 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07392525 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066597376 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116376866 seconds)
    (178/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052945249 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067161914 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066914275 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055266591 seconds)
    (182/309) benchmarking ("sort", Int8, false)...
    done (took 0.141480086 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15231624 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072951514 seconds)
    (185/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106858282 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.179226735 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.231787284 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068210924 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066465681 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074140207 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073768992 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06832917 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180964865 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054432385 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070040471 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054127919 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055271644 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069649938 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145586434 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054033732 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095245463 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065962873 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066469984 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092945373 seconds)
    (205/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054328367 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088948164 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099558147 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054121696 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068220957 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092339506 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056842932 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076307234 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075241334 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092874548 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05505671 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142829091 seconds)
    (217/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078357542 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053560814 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054764904 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068751158 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073809329 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067346235 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068512671 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054252005 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066888571 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110531583 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068350608 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07873619 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135021243 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122752701 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094190447 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053859325 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054133019 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053919496 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067535104 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053022572 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054006521 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076187647 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081229247 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054192055 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071740141 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054967854 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067245511 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089024404 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091300001 seconds)
    (246/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053448046 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053185837 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053533341 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068302854 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081292065 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07404424 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053870484 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053301337 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053936395 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06807488 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121811903 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06923737 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053262574 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17571934 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075184709 seconds)
    (261/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06933005 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067110476 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177938606 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098001969 seconds)
    (265/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06338936 seconds)
    (266/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070797539 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112282291 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08966905 seconds)
    (269/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080693073 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075511841 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054477153 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068150173 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100628707 seconds)
    (274/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073272272 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053307629 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069394583 seconds)
    (277/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11013029 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067235714 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074919628 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06600113 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052989829 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052972976 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131939648 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074763384 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065404592 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09129226 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054301837 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074257602 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05333644 seconds)
    (290/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053605153 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072086244 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100806009 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066777931 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091553331 seconds)
    (295/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072478779 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.153423207 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090033357 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053654801 seconds)
    (299/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06237878 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081415685 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054332671 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096337929 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053519978 seconds)
    (304/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053681977 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055709054 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055705751 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053178825 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066788654 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088797539 seconds)
  done (took 31.247511741 seconds)
done (took 32.657016945 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083933105 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093586408 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075949554 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09356802 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081071576 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079501439 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075761319 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081400801 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082896832 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084131645 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081597245 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057230022 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076608375 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076830519 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077185882 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094380579 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080277709 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074721742 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074850363 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067030205 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074904116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067450416 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069480179 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056237627 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079819454 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073543846 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074769967 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075973732 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067621421 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068073618 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07118718 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075603911 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067404077 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080017774 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074297287 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074866576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076722683 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07861645 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069544564 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067774956 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076342946 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067941489 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074869738 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075451734 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073903621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073211269 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075329467 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08021293 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095068325 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070956207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076198492 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078007791 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07901996 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074455488 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072095162 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075040041 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07307069 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095241658 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075696687 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071126759 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075684851 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073646902 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070654513 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073762955 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074988338 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077221385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077236771 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072716344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077104413 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072629471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067278873 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074849435 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070854191 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067325542 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07784076 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07848465 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06655956 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073074263 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074388196 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073261728 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066700257 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070582476 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06898724 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073517909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069860616 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056320699 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070863273 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073216426 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066243998 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074413049 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073196029 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074326284 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069104378 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077102555 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066500015 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07180886 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067025465 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067088647 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068796246 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071048214 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066541191 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069479343 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075518558 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068358974 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072817948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079938184 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066522834 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073329772 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066259873 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06619353 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08093995 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075626689 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066611438 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069747992 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065901481 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073697678 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066452718 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066646654 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066524562 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066703665 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072669608 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066443846 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069109109 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073278632 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078142494 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066020012 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069496259 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068986405 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06573597 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.206825723 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066867681 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068442963 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069988892 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063984674 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071189842 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068198038 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075168723 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07112374 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07510418 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069938374 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075374891 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072917262 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073724045 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07281601 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067083482 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061278453 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070796326 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070656638 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069835251 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068580992 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069322156 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067931139 seconds)
done (took 12.753768246 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066920622 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142504253 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099558267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098467895 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088368701 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068464055 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079411376 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10531966 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069688282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105842121 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091188539 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088144957 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116308264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066934013 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067951682 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071765052 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069758188 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084488133 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104676735 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089311891 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119037608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067555907 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096928374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09278694 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090576928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104352419 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068881581 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072204357 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071835756 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094134152 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089787513 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072317047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069251677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104251261 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095560199 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08630019 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068048797 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085256586 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068493722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067740392 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069578904 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10139173 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082499168 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080039076 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070043274 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069307108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066857639 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083498088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089259077 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078452567 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086466396 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102925106 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068409326 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066800797 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065610753 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088497248 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067397796 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070208959 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068255351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069734402 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067796113 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071294041 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08360738 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084350606 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071979131 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082853616 seconds)
  done (took 6.938596425 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082428336 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089782056 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082839757 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082811725 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06623159 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066879645 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067972199 seconds)
  done (took 2.042831861 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066936788 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088950773 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088807586 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088996837 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08561534 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089288256 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077572456 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068536678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083639405 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069457604 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090689528 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106510148 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069899411 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075562471 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093856538 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067897653 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089795779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066575215 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069478551 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089689103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068363588 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081736205 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069447516 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066521564 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081083348 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066401917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113098958 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070681349 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068060998 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069674478 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064331657 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106390137 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080340696 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074945529 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06624271 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080461225 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081256193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064821637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08507645 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073837994 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082922102 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068585722 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069209494 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066469473 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072973621 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079745792 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069154864 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069349903 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071448077 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089244427 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069038653 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083143595 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072485023 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071832216 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069916639 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072850918 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078799385 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070078918 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089719935 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070112819 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086557133 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08562102 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082731159 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085812129 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071166978 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082958916 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082921805 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071507636 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070616469 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071949395 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08576291 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066643579 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06972959 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079388701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070405691 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092924801 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09116542 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068167555 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076731623 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067251901 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066978493 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066647919 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089722326 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07099375 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068462387 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07311489 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071726697 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067203677 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067432273 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072114587 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066444093 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069985969 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070801037 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071363924 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070991212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085707888 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070188918 seconds)
  done (took 8.920903799 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068718156 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067801237 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069218237 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067780638 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067373277 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068335572 seconds)
  done (took 1.937359225 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093888529 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070159762 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080872641 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0729743 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104474825 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086704925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087033537 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079379175 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084125513 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079494684 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089036231 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092058631 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09681736 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075244371 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088747992 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072902939 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087397592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076375737 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078987918 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073080319 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086924859 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072878851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073423799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081805023 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076178638 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072514536 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067341198 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078971469 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079123854 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079165661 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072937556 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076163463 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071400936 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078707525 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087425138 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071161071 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072139219 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077640071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073136328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076981946 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091064499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075760542 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078241153 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080344696 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081596778 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073916286 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079775929 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079225724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089997729 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080147328 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08068868 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074677907 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077783002 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079724789 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073268872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08117932 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079955618 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089393725 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074922959 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073190396 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07183708 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078142585 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080959179 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077996721 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08193685 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079687772 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073233887 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074927665 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075438613 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074075937 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079920526 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071653757 seconds)
  done (took 7.212991945 seconds)
done (took 28.546274849 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543020092 seconds)
  done (took 2.036024484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598985184 seconds)
  done (took 2.115920626 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.603692218 seconds)
  done (took 8.116987124 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402283944 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48530492 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695722937 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131508982 seconds)
  done (took 3.279924285 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.679717658 seconds)
  done (took 2.207138631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209439957 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197534898 seconds)
  done (took 1.945700211 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377245618 seconds)
  done (took 1.896559253 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111958689 seconds)
  done (took 2.633446829 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263562745 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166070248 seconds)
  done (took 1.949906051 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464823404 seconds)
  done (took 1.982949193 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855065722 seconds)
  done (took 6.374504854 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215141069 seconds)
  done (took 1.783421825 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241720013 seconds)
  done (took 1.765038434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.847160627 seconds)
  done (took 3.36816759 seconds)
done (took 42.980048317 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079880744 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081302789 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081001887 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078205081 seconds)
  done (took 1.828719967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076830564 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072665105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077483158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073658954 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077353773 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073851471 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076849895 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079516328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07468146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075052321 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074524079 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074640531 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077147396 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07628323 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072937722 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077417013 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078391388 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075061818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078239864 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074499357 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073094593 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076941843 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077257383 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074164705 seconds)
  done (took 3.342074116 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077933073 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072709574 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074731777 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072595202 seconds)
  done (took 1.82850705 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077979816 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092327438 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089317306 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078091126 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092599007 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086302362 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069013688 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069103922 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072986011 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07719949 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069671212 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099326145 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091119142 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079114893 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080550908 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066261101 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069610145 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086832458 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077264658 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077400191 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069790624 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076556813 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067844509 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088044434 seconds)
  done (took 3.430288517 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077349327 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103068773 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078095553 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087460667 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089606123 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065019523 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074242411 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088827078 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122497704 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065866905 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070222208 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06585409 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073971725 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067486207 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078899293 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106820354 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111060611 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070437683 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098038937 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067399159 seconds)
  done (took 3.196359559 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072819707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069636896 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065887255 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068487391 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077266195 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072328976 seconds)
  done (took 1.963007665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068006173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06753084 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067335199 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066882501 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071248709 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067239594 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065908145 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068540388 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069656937 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067660484 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066716469 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06664051 seconds)
  done (took 2.344473295 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179359504 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069398451 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069323821 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0655311 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070618383 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066111786 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079558516 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067681069 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090422887 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066129286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066291531 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06854777 seconds)
  done (took 2.492027906 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206734681 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075874629 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242929587 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14020576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115192626 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118853856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105193491 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113186228 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14340588 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10186155 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168135651 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166193892 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107826215 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138075756 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0906552 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098335777 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157465759 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166332691 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105655774 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166130652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144014035 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124416582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146252668 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101010209 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105746422 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12232724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070730901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080064038 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173375286 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135617629 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149675504 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114262284 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096305427 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177973321 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173349232 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1435548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135826379 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084269551 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1025534 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131672339 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197273065 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089092617 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306710284 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109787309 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081154057 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135411727 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120272908 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120999414 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10762154 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093096565 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149994668 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185656446 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138395453 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087915708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11203978 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115699 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116911524 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103868769 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184096618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16113072 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128269837 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07106327 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100712935 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157496713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134448873 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110471504 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128212953 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09416024 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133927233 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153747837 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118992909 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144175178 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128361244 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088622789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118708896 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139411192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128704124 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169119191 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123637189 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072002594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123669831 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102503765 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080249778 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137899379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075458382 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175482191 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100729272 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10834875 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112522228 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109432904 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109892973 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164390072 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290058222 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103580493 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065955253 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104052259 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119434382 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148403163 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088511025 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110582546 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116999103 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078027188 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14037182 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075462201 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123875004 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074805122 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125185798 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132941528 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075882434 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122267193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100350137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100399396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133142929 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158749579 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08957055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082206807 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166995548 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122830692 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104446028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143316874 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155362179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097982025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102455691 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148827162 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179662399 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089550484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163290765 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107296218 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08365727 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086850782 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123500249 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110980348 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121984852 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083142688 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117533229 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166491844 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076260961 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097530843 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133892697 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078422261 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079743366 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102819653 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100642713 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094179982 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100187568 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104377114 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138825431 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271900259 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107111121 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130364061 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102753766 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175727374 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091633177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103944552 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10721552 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072197322 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141160325 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162578236 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083035975 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165656362 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12415321 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10547699 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119324158 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083250825 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140594035 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078232973 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070297635 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143684081 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11122234 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111713908 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153559109 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104876492 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127543133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119744702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134643847 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132273668 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129040455 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105711697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087298742 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111124212 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125532786 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073036258 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091264744 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080224424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103470833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095502939 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083364364 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14183412 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123425598 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099521143 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110406743 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095474096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144943536 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07559875 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127262678 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118040795 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0932133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150485988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151296154 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13076509 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097812698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290502174 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07076374 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074612317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091349069 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124534195 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08380198 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084023454 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118314422 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147118211 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130818292 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138722732 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113362385 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121913702 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15451421 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069041239 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115183511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148170458 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121113886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104858381 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090077458 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098657208 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141717481 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108709034 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182030325 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114151865 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13059262 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153070958 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099024774 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079196714 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102763294 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135224634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105158615 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145182855 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099733814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088071305 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110774758 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073890871 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1002591 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126928805 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120901963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13651156 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113000358 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131750039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076228383 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116321888 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119010134 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121257985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063332461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119001665 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160471246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093294324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117616963 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298068984 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080265632 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125702746 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18107383 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149985957 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087850931 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11337842 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121412979 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129904935 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122258013 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142980365 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111068065 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135623844 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110140834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085284191 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088140153 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097158388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104768053 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095906893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111530929 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115546915 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095539424 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133496975 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106272605 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10959216 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117678569 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096062386 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088970044 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096671916 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174826606 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118695701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171509532 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09812675 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14494441 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165264644 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074714543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078735421 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078302813 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139727229 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083922699 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13061081 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096950326 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105248075 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123545623 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141556004 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094185719 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067896282 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107464893 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133257818 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111711297 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097200512 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104075741 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161747288 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099104562 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077763839 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258339411 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106781737 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103056608 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175792879 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061817949 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098484981 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076344019 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080976588 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126881663 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153271859 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080671601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103610506 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119730587 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110738922 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127653444 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101820184 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099912862 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115098568 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14962298 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129651577 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090322312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111713172 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130094389 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15631954 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105689752 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095622133 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171529304 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153175757 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160692946 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.105647327 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114229211 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11368971 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107848609 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139396506 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082807984 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163926089 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081574423 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135888169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103695909 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089577678 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128988795 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098008134 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086929122 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145688532 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116217455 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081906569 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076649114 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117181849 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118843549 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105721217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074596693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28293966 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072913092 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133795964 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169738204 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081600943 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104589766 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096562341 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079191297 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109043188 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103180738 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089643783 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098916211 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173012826 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088825449 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1498251 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143008422 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113190821 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137549842 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099990886 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636560535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077421688 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15279796 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116841923 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174658748 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097674737 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118086211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109324769 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123659688 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145564201 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104613981 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172809664 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131612701 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115848229 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082421062 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102274302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102613895 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088361927 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10473623 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113309656 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116290128 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093569523 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115026567 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122175175 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080849139 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094423416 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157234729 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118720095 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143033481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140257909 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083741014 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117267156 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283935514 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080413054 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123119628 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155698968 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107721316 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098094952 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081090414 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102561659 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171255155 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073704056 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165372795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121060765 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110343237 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11325846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114780825 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132821059 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107964736 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121686134 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094832081 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111142123 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112620121 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081275914 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077016707 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104707364 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112768757 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097313391 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098449492 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098909669 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151286153 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070943592 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095984421 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103899355 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145666479 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175436702 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087459874 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082595179 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119328844 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112925111 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113390193 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121160273 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07949966 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082100781 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081431938 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076628931 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107868185 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111618028 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103520859 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110469856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163170678 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081683469 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220250671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093674539 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102770636 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068468831 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07752715 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09396511 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095554803 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252461806 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100609558 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172312708 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095845247 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090855613 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094317043 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073054172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083246507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129662363 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110148786 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119643031 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097441461 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062702557 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110807891 seconds)
  done (took 59.04228151 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107910293 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082513682 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096997894 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150186849 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122513777 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212222117 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157891825 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199052224 seconds)
  done (took 2.772979557 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068312373 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093331706 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099314194 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081909566 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066875429 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069190095 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224269401 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082845344 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066261265 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088184837 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079007281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068509973 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418845355 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065683773 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067329253 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062842709 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066660779 seconds)
  done (took 3.403740981 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364462793 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601229514 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372308557 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07480846 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.862494784 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092715843 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.152341092 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130961251 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073744933 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542789267 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705165993 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12481334 seconds)
  done (took 18.741281688 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075189267 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070036773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084324972 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085298751 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07469329 seconds)
  done (took 2.029755745 seconds)
done (took 107.977644262 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080939172 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404071152 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055094378 seconds)
  done (took 2.132218642 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082608545 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084349821 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084245177 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083241742 seconds)
  done (took 1.981303871 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073819133 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076332635 seconds)
  done (took 1.790740341 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223198025 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163128012 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089311445 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082015024 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078640751 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078415565 seconds)
  done (took 1.887456374 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07158194 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074420742 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072132395 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07656499 seconds)
  done (took 1.936893508 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075328774 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052672575 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05518613 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055743871 seconds)
  done (took 1.882787886 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086461744 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078666498 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077387983 seconds)
  done (took 1.886783963 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101632884 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084900954 seconds)
  done (took 1.831327439 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081025611 seconds)
  done (took 1.725567098 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099301648 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11351324 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134710889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114060526 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143173748 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112884928 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088796888 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089751334 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079771235 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090447979 seconds)
  done (took 2.711534477 seconds)
done (took 21.964887336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078300842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366132651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361077831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090738216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671061999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358833666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995714253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095615128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117683006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07029892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087567905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651606065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984807231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325721587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967285241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323700081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648376533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068149692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067547235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06773793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974220062 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067219443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067694424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068261589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647567008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371028893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068088946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322734028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067171757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069114358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354689527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068302254 seconds)
  done (took 16.176805583 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07055088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118516041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075783714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087590153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073985757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072393513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074444659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071911586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1233091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07030666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087776886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07027074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074549658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071434523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090874908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070902226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070932106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071396946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070787973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070931222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089648594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069914726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071127053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071832338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070555926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08256576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06817538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07065356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071113917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073230358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073846513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072283648 seconds)
  done (took 4.130327303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114828323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124310178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074296231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102651224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116129303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147078501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096608899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132015625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07076068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088293474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070722488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104361124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071865382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091625564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071035613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071977509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071675887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07110059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071236403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090811758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07081777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071009043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071862808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071488953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084586474 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07157006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071702578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071598876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073648264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074655452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07162371 seconds)
  done (took 4.392188988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072744854 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075096759 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083172092 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083402551 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071748456 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075046118 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075421011 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072323161 seconds)
  done (took 2.272135546 seconds)
done (took 28.624511635 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07836324 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069456385 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073332074 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081864881 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076002591 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081125669 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069668747 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076857975 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074257694 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075741072 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077730897 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06957686 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073513256 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069619177 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076354023 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069993419 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082460452 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073879443 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08253468 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082806328 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072541129 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075586096 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076539705 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082601072 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082898251 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082169316 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080432328 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075418886 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07145165 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07298812 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079308504 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087247377 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069328653 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079478395 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067957528 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067985641 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071334996 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067976076 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079422134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076659958 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070268912 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076189745 seconds)
  done (took 4.820629213 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087388269 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092479879 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086719407 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063918317 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067590328 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065361157 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088555069 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060426725 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059321564 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088027105 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055927199 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059784798 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062225453 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053985477 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059096948 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05660353 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061260165 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055579595 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059427244 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058899029 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088016265 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053821367 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076970285 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062342544 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058772683 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061973592 seconds)
  done (took 3.413808777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.084045575 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083661279 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087699305 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128261611 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105722653 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079565471 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082328886 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093740327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086461276 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068954243 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073062791 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096041782 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090263533 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076016152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069425158 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085896714 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082264695 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068830209 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073003203 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091545872 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08484363 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084634732 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092762931 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080108511 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066720444 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069610202 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070741332 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080739132 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071828472 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076228165 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071401994 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07094469 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06888566 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.0785672 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073645622 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070762239 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092499279 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079404015 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080392069 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070309242 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073757843 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070964627 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093746736 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128312038 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069359937 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076449721 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078106698 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079118905 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069721609 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088721072 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081004615 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069176698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073093416 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068714776 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069743371 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082688944 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071153205 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072178019 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078526815 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073028343 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090890433 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071624605 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082085008 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06698425 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075075149 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066361327 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068115096 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066296022 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091868323 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06875046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107683862 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068672812 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068506281 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075881001 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075151783 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072926708 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067980852 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082128474 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077764084 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070430708 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075521226 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070973205 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070054341 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087437373 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069948489 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06880317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068607897 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073508365 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069930464 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068578395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080079793 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067537623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070594089 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083499757 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067026631 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068527121 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073662455 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071773241 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06655191 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077727954 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071830811 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067865669 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076004034 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06702259 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069599758 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078272864 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073045435 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066063706 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071760002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072940386 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067961834 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068891433 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069861671 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068701132 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07499278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073348719 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071715015 seconds)
  done (took 10.656231051 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16021102 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153878447 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070147224 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146087955 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076952167 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080796402 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15099675 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097655768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07039641 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070743409 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071037737 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113557207 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109724643 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12219698 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081300293 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069862721 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085862549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118212529 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153198171 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145997302 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084694654 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077425433 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069447524 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068889859 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071284293 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078337892 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085046148 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076818731 seconds)
  done (took 4.471864844 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081471965 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096609214 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073911319 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089551492 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091128915 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067977409 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070002515 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069912895 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080866779 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081263915 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07048351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07655844 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07702391 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.0740501 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07158655 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077657946 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078256267 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072225807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073514581 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075499086 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080271531 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083181911 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074709597 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069302729 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075550408 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069245405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066757297 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08740063 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070618266 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093096925 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068282935 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077493181 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083886 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070831394 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070145673 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069945874 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069989305 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07006444 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07160624 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06891982 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06855348 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059698276 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069144527 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082513647 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076741962 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059196184 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074999057 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074930084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075204369 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06765916 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072512291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072804895 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07341513 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077086151 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075180807 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074240147 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068631601 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07404283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075288375 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066986688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063985482 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06622363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071873176 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065683684 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075181455 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071625026 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065854991 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066985124 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068959603 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073417137 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067068516 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0701871 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064922532 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069438975 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071653015 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069118645 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068535556 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065655446 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067003619 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067596398 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055615374 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067434491 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053520002 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070401342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065736377 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065714431 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06698367 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072089897 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079486312 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068978352 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072909968 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068202015 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06635987 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070254567 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060074351 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069934764 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082165804 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082733915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067593606 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065638746 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081120058 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071631001 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066235115 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05630059 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07440874 seconds)
  done (took 9.264727709 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088962159 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070818741 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083032406 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090931121 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086736129 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075279161 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077648466 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06930824 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081340412 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073082712 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075825315 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067759991 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076441751 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076911744 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069410449 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076713316 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072144954 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082591772 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082290232 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068237145 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075799767 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080114961 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089183905 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080251167 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077991469 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079705202 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089006849 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072050638 seconds)
  done (took 3.899993356 seconds)
done (took 38.184045428 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74691811 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.923292717 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.740536356 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110093776 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.946478439 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.862690688 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.822990596 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.736259525 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.029070768 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.78525829 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.008143476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.781216932 seconds)
done (took 65.172470758 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.76576746 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.884523479 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007741994 seconds)
  done (took 5.575138021 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.039931344 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.32618831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.976763393 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738608114 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.744540573 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.984125694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.553795398 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291616695 seconds)
  done (took 30.299196902 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.900823214 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.967937899 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.456482718 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.492468551 seconds)
  done (took 15.557996962 seconds)
done (took 63.009313047 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.745140155 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.790644957 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.749290056 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.724211224 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.798130441 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.759574238 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.081336988 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.798828602 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73878822 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.732858866 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.740922386 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.175171706 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750535015 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.164881825 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744720144 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.750970201 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.752660104 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.208140599 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.898894255 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.752009968 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.767411767 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.781310161 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.741904117 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.749995701 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.797597595 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.887344536 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188492423 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.748147836 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.363592882 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.749637536 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.770978742 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.281880935 seconds)
  done (took 203.371033343 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.741654562 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.844095021 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.920265937 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.772154463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.273867179 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927826887 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.85743358 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.316827285 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.748236232 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.763477407 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.036077872 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.743375439 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.069589237 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.731316635 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.771589691 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.744152162 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.920320109 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.056119503 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.776714691 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.907405943 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.76697985 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.952293477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.9259392 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.007323931 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.753401763 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.743645362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.749724699 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.759521032 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.936159894 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.889901008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.788269902 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.787024312 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952726784 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614843874 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.743835825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.749618882 seconds)
  done (took 169.73268463 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.905198856 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.74434996 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.743468251 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743714253 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743464474 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.74924549 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.744872798 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.86697246 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868163507 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.199336911 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.150134343 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.797724537 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744544916 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590444864 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.747155256 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811895477 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756673265 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.745398093 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.760315154 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.772208984 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745136169 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744347353 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86630765 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.758425058 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.77945198 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751408455 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.746248019 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750059745 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.114978975 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745236666 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750621675 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.988688958 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.745960021 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745030886 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.645130596 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.581753671 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.837520134 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748078797 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751227875 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.745731788 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.965094248 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745743506 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.745805819 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.748399269 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925379224 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.746649209 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.871250956 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746833974 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.244852707 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.746895666 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745871119 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.585617034 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754741871 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.437414472 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.749333969 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.745226947 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.749121739 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.746794609 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746140144 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.753303295 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.419258536 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.820728756 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.748778625 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.750554256 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752262275 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.747089967 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.750518525 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750521385 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.970936422 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.808163138 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.964271977 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.868904216 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.750502112 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81511734 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841297912 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.747552771 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.746699711 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.747078058 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.747542452 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.828813334 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.747485319 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.746792915 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.865917649 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755157032 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.748590922 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798514931 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.817046926 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.749123767 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650565669 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.750755999 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.748282939 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06219576 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815199566 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.748155731 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.748664303 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747783014 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.866583382 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871037978 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54074853 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.751427025 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.457136136 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.751787198 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.886290942 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749587932 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944755029 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.752528769 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83024279 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755224778 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.750858604 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.749055623 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.781103338 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.750236189 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.808268379 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.749724336 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.11899861 seconds)
  done (took 398.968322443 seconds)
done (took 775.720828007 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.433832616 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.393265157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.507130737 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413359253 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.387212321 seconds)
  done (took 13.828913481 seconds)
done (took 15.521468075 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.836669543 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.841348742 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774643848 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.839142648 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.770207108 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.839575083 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821124906 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.775235962 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805581356 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.775455718 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.808260119 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775275137 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76232216 seconds)
  done (took 25.119883332 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993705513 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170641781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825464246 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988782637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799942269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991709515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919221108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904446142 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905169917 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767557143 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765603525 seconds)
  done (took 22.729612415 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992613738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.994379545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830017495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993252413 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802261071 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.995432695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919908781 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90370685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905823258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767195588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763543728 seconds)
  done (took 22.564990953 seconds)
done (took 72.107580894 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.758410047 seconds)
  done (took 3.453547596 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782711346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.935516714 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.765069428 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761834941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.758895711 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.760423596 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762456757 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758460272 seconds)
  done (took 15.981634777 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.758558145 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.754928318 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.755844657 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.758052328 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.758537214 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.756243141 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.755455794 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758426289 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758945681 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.75662187 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.759514698 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.755580239 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.755892691 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.758149217 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.756357545 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.758545883 seconds)
  done (took 29.812505103 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.758150572 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.756495092 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.756069598 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756946208 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756708743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.757386906 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.756974894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.757536738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.75606836 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.757601166 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.758302686 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.756006892 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.75572742 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.755124647 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.754920608 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.756642292 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.756177514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.753930175 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757972659 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.753867954 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.754430519 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.754545624 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.754170722 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.748515193 seconds)
  done (took 43.841310426 seconds)
done (took 94.782281933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.689094849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.192201237 seconds)
  done (took 8.569251744 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.752023488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.7502512 seconds)
  done (took 5.232853272 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.7484927 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.748273112 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.747031093 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.748104339 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.748442785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750771234 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.746558199 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.746979807 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.746589239 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.746305257 seconds)
  done (took 19.165033209 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.749673569 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.746353943 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.743999941 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.746154321 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.745881017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.744082973 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.746796055 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.746131525 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.746007229 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.743802572 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.746789898 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.744374631 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.746840476 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.745087202 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746674377 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.743153693 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.7443999 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.744724487 seconds)
  done (took 33.104468467 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.746277106 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.747664858 seconds)
  done (took 5.177255458 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.744705926 seconds)
    (2/7) benchmarking "second"...
    done (took 1.744683727 seconds)
    (3/7) benchmarking "month"...
    done (took 1.74444577 seconds)
    (4/7) benchmarking "year"...
    done (took 1.744923527 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.744630217 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.744663128 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.745248489 seconds)
  done (took 13.89623035 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.748689751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902519415 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.971362049 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.393358313 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.750558368 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.75122456 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.67421381 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.751409854 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.754012526 seconds)
  done (took 19.381537393 seconds)
done (took 106.212645489 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.582537993 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.747437097 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.118162817 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.808252378 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.799110715 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.041815365 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.768877818 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.966720625 seconds)
done (took 42.51766538 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.744902324 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.32471164 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.363763017 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.167460227 seconds)
  done (took 12.542078461 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.728308709 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.27710796 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.786217214 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.347836817 seconds)
  done (took 19.847232818 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.110740842 seconds)
    (2/2) benchmarking "read"...
    done (took 2.112128853 seconds)
  done (took 5.912165379 seconds)
done (took 46.731291936 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748483885 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.749246066 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.74823077 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.745633554 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.746286226 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.748298299 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.746439521 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.746796836 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.749055642 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.748158928 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.749615139 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.748215431 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747189452 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745859286 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745161977 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74537518 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748446657 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.742335461 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742370224 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741631649 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745299703 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.74264649 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.739244798 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.741212926 seconds)
  done (took 43.587611305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.742593668 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.74011176 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.743420106 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.741679602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.738565749 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.741553942 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.742210739 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.73904777 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.742998154 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.741594613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738699814 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.739364365 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.741396373 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.739600121 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742176343 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.73886348 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.741376161 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740183859 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74262671 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.739152547 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.742804562 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740142816 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.739360744 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743175124 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.740077712 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741454117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.742709536 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740498574 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742515536 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740026387 seconds)
  done (took 53.909489605 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.747697 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.750652138 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742009388 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.742796058 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.742417614 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.741836088 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.743055664 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.742480739 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.742352914 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.742678443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.741927263 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.744175223 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.742575318 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.743299338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743705736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.743823953 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.745369184 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.743193116 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.742925399 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.743935153 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.742888709 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.742738656 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.743328819 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.743161997 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.744102809 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.743222031 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.743486577 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.743615257 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.743146932 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.745368414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.744469076 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.743112816 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.743848406 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.743800979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.744963391 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.742635883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.748523223 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.751062567 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.743433251 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.743817257 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.744690139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.74229571 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.742187206 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.743216058 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.742803885 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.74289541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.743969682 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.742163107 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.744069065 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.743459389 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.742502826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.742449985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.743436503 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.742552691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.742918874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.742966757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.743227757 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.744626051 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.742978392 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.742475275 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.742903121 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.741800907 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.742016626 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.74412288 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.742007991 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.742408903 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.741695948 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.742479112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.741709693 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.742886442 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.741361891 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.741966472 seconds)
  done (took 127.208055112 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.741667826 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.739781872 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.739802202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.738410527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737897496 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.741561513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.738200673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7433317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738002148 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.739947963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740944744 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.737125355 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738024341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741860741 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739727558 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736961623 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.739395075 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737143101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.74007877 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.740391357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739989137 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.737441505 seconds)
  done (took 39.946569192 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740596669 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739795892 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.738255408 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740457018 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737045254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.73989672 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.739730309 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.74070431 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739518094 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736436739 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737356716 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739490438 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737760484 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73801585 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737175466 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.737344795 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739410029 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737635106 seconds)
  done (took 32.972796467 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.73699161 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.737457634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.739484557 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.737163751 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736870852 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.740740744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738038544 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.739285016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.739778147 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.73685332 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.74147727 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741443412 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.740201136 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737425881 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739522985 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.73753412 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.740014367 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738692052 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739912085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737306673 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737011271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740892043 seconds)
  done (took 39.930891592 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740443262 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.739484549 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737874355 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.736978577 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.736814124 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.739746689 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.740403941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.73670492 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.740197947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.739416333 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737523354 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.73952239 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.737286315 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738105037 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.737047152 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737569735 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.74022353 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738965287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740383266 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737439285 seconds)
  done (took 36.448821255 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740355011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741307438 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741929271 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741242301 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740678884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740117229 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740806855 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.741414513 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741879887 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74114323 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741098878 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.742267671 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74113826 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.741527414 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.742645503 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741594277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740720741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740645547 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74101407 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742424392 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74140144 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740591684 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740900801 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.741827435 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740641709 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741800767 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741180115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740928211 seconds)
  done (took 50.432717491 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739962496 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739863705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.73784077 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.738508714 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.73694384 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.736745696 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.737612243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.737446461 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740251402 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73705109 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.739959782 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.740030576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741219708 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.741989758 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.739709019 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.739366184 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739730329 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.737551617 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737592072 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737749782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.740032641 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739779694 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.741095754 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737338008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739099566 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.74169296 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737624676 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738426638 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740337024 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738882931 seconds)
  done (took 53.848721538 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.760739818 seconds)
    (2/2) benchmarking "in"...
    done (took 1.759077133 seconds)
  done (took 5.196549246 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.73756023 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741602538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.740450103 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.738399482 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737155326 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.739798992 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740710939 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73783099 seconds)
  done (took 15.590549501 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.738599154 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.739730059 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.740218269 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.74082118 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.740607374 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.740603114 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745854842 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.740354204 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.741360615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.740374282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.746158019 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.748092414 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.742312427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.73966332 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.739725072 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.742012265 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.7409194 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.740928992 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.740846095 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.740522622 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741451246 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.741343119 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743541177 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.738757568 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.740946015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.749502374 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743224433 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.74007142 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741620212 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.743603228 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.739781692 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.737950853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.741560642 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.741252299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.74189825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.741002237 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749061691 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740341658 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.745717251 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741913481 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741375508 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.73795951 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.741369781 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.741254028 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741410789 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.742750381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.741226033 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.737479901 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.739672627 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.742876129 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.744732694 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741168887 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.737814705 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744211482 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.742661638 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747000505 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.741970422 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.744248914 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.747501138 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.749567269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.751873444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.745877206 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.743753047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.74125276 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748588342 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.76055095 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745720169 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.739050704 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.739050404 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.741318183 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.748327632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752389874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.748405162 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.742518164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742740665 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.740761347 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741706839 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.740218887 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746868626 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.745288234 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.742128436 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741552376 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74884029 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758657689 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.740485695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743321617 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.742215744 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.742428178 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.742093265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750916329 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.742758577 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.742346613 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.741508464 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.74247831 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.742736645 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.742813308 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.741728909 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744202656 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.740449148 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.743151958 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742257017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745122421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.753083823 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742917819 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.743244295 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.748235683 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.742769098 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741844897 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.749838911 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.742596053 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744970017 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.743538891 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.748514223 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.741539083 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745646725 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.750318912 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.744203288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.744773458 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.744006659 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.743355781 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752319732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.765452598 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.744056518 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7444605 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.747315988 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.754560465 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743983326 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.746411013 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.744369792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.741466404 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.741763793 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.747015534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.744825165 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.744528043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745044055 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745234447 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.741540484 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.744667895 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.745295082 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.745655081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.745965185 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.745406274 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.745561254 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.747195367 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.745441556 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.746254496 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.749238294 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.744508913 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.745788085 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.746182335 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.743011576 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745132016 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.745866948 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.746018048 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.74577111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746418785 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.745583299 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746204415 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74419569 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746576395 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746799424 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746277792 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.748418067 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.746319695 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.748964995 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74570184 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.742688747 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746048236 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.745984029 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.746361539 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.74674285 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.746461918 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747923492 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.752782627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.745264447 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746501139 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.748617563 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748182616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.74804873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747574396 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.748571873 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.752669084 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.747275616 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.753091867 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.747952491 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.74723631 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.746437598 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.747559491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.747731739 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747348773 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.749020552 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.752690504 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758893663 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754414348 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.748518433 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.750813861 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.747610187 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.751545977 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.75094409 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.748536857 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.748869058 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748066194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747116075 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748712493 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.749857362 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.749165825 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.747211201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.747660902 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.747862232 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.748624809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748427342 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.750216559 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.749775846 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.745721953 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748567266 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749433803 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.747777608 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.745866168 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.747667484 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.748623258 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.749080377 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.749929965 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.754654622 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.74752221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750047887 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750080349 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.749186112 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.749130939 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.750867535 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750920134 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.749019451 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754938633 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.748270225 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.748776694 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756572587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.748904796 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.747937406 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.75204683 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.748960116 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.746763884 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.753443111 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.756175468 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.750003028 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.751079457 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.750310468 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752657335 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751035435 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.75554862 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.747624336 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.749423038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.750072962 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.751192794 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.747249602 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.752964974 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.750604959 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.751087263 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752123343 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751623856 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.750930034 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75071299 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.750953183 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.751447905 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.751191592 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75357337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.757271892 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.754212301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.749811106 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.753276145 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.752930557 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.754088166 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.751007188 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.752137766 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.751476535 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763509112 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.759223515 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757252313 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.752835503 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.752033619 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755460995 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.752433635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.755928439 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752580604 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751653531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.751835875 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.751237558 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.750356973 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753017652 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.752231752 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.753167234 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.751855032 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.75518441 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.752873377 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.751813576 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.752887749 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.75289264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.753269269 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.75192686 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.753714169 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.754501232 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754764742 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.751383122 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.751793396 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757707886 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754224773 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.754029208 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.752424991 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.752337652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.752362256 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.755611815 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.753656553 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.754662806 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.759278954 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.754918452 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.760818377 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.755589625 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761431426 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.753815461 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.755952662 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.759842505 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.75085725 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.753854681 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.753102476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.753869692 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759697912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.754208033 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.755197702 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.758477499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754351773 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.754884813 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.754879154 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.754479072 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.754134227 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.754987571 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762402907 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.755924036 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.755808571 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756582316 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.752636314 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.755000083 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.754533191 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.754378825 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758726035 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.757805211 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.755235049 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.755090154 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.755314049 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.754751169 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.754962597 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.756181939 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.752218454 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.755318 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761095325 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.754437864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759366987 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.755226307 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.761887097 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756121521 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.761861778 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.755602602 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.756974967 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.756375883 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.75623519 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.757055553 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.755605516 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.756564699 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.756781765 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.756031682 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.758275421 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.756246274 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.757792065 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.756425928 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.757669742 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.756509976 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764400098 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775002033 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.757054434 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759611807 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.754695059 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.757953537 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.760878648 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.758854526 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.75526513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.759010264 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76450824 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763370445 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.758107145 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.757749706 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75835207 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759163315 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.756850238 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.757740552 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.757562714 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.758361488 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.757873727 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.758839543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761411996 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.758042763 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.758080833 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759210042 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.758526981 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.766133618 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.75850523 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.758460034 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.758646442 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.757086566 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.758760801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.75718387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.759160535 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.760213611 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758611442 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.759704761 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764187166 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.76255544 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.760748152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.757764153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.759640013 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.759690861 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.758426939 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.759641649 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.759372737 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759305804 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.759420317 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.759145245 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.75911284 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.758268384 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.758568072 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.760241124 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759222126 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.761267592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.764387239 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.758902942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.755782835 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.75905944 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760479318 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.757329761 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.759261871 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.765956162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761537892 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.767644185 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.767583102 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.763335833 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.761481133 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761690755 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.765484346 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.759893108 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.762107268 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.76088701 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.760608506 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.75965719 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.762806717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762600201 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.765224744 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.759558294 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.75972254 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76722436 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.761337598 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760915107 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.761691468 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.763526154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.759432835 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.758223599 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.760564009 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.76127837 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766409121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.762179209 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761466607 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762483816 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.760781937 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.761609537 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764217229 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761314968 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.761535956 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.758527516 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.761873398 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761787466 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762891327 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.758986924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.760304072 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.761998801 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.763535658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.766878133 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.759679499 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763546025 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.761681329 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.763152482 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761865189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762225959 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.758986261 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.759076183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.76209356 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.76344755 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.762740597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.765630216 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.761334577 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.763330541 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.762418583 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764775487 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764323118 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.770173248 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.768621048 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.760205878 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.764218632 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.762719102 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.766053018 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764132482 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.764822494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764218197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.765128626 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.764004984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764066825 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.762979941 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.765651897 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776939236 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.764138334 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762949428 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.764511323 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766309601 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.763480078 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.763429143 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.763749479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.766721577 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.765952982 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.769674141 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.76388774 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769512037 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764556379 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764568739 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.766824493 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.76608434 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.770294584 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.767251134 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765671353 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.764806342 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.768011651 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.776444161 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766647644 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772308048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788555385 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.765497206 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.764795191 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.765710244 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.76465308 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.765649387 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.76643576 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.767110821 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.765501771 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766072296 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.766920851 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.765041122 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.769367781 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.766145615 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.765196352 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.766599033 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.765299129 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.766383709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.762927413 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.765849528 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.765772426 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.767564496 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.766054423 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.767743511 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.766464692 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777659851 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.773984907 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.767849569 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.767267846 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.763389919 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.770282207 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.769045702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775022964 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.771934651 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.766925239 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.767134342 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.768111556 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766754242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.763955499 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.766450078 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.765804333 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766353725 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.76376554 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.778134609 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775521891 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.771066004 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.767736344 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768319902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.76713951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768971045 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767894663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767402889 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.769129982 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.768152754 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77100857 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.768607499 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.767802632 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.769431933 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.773269987 seconds)
  done (took 1047.326222555 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.765633109 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767351594 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764588193 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764767919 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764862354 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765325705 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767094924 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.765768382 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.764968925 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765424716 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.765634959 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765451837 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.766724384 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.766556101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766339516 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.76673129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765974202 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767120043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766877568 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764945949 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.765021706 seconds)
  done (took 38.787156506 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.768802383 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.766266488 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766534103 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768498909 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766267755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.768282676 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.766538557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769444324 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.769950681 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766697464 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768431011 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76963535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.767317896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.767576719 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765983905 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768913599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768831396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766403381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.770371824 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766532106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769701166 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766874567 seconds)
  done (took 40.598936129 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.770376634 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.771435593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.76983742 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.767567002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.770506008 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.767551609 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.769245785 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.771824138 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.771002655 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.770535443 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.76979076 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.770853269 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.776639746 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.773843093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.773302791 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.770251806 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.91504107 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.771700484 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.770907835 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.770975881 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.768051541 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.775580121 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.767884059 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.768714855 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.770256645 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.77204263 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.771418367 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.771440079 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.771988502 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.773686434 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.774884039 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.772533715 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.771232136 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.774330805 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.77067371 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.77304939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.774116126 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.773136724 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.769354803 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.772067857 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.782119744 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.787371451 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.77328592 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.778049875 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.770989337 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.773762295 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.775728716 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.779612995 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.770460124 seconds)
  done (took 88.698938925 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.771767137 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.772247652 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.770278497 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772761333 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.772794069 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.772988218 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.772847143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.774058807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.770242859 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.769644339 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.772977684 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.768137512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768470034 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.772257321 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.772015741 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.769401519 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.76789897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768379939 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.768379289 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769507271 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.768341967 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.772010524 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.771606766 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.769010194 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772235995 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768768195 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768120444 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.771263118 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.769636459 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.769416274 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.771440216 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.771219986 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.772972422 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.76950747 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769120338 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.770524973 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.77354749 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.770363812 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772191134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.769566029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.772237643 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.773157676 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.772991438 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.771790499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769284754 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.76961412 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.770295044 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.771568018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.76907166 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.772773157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.772501069 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.770498375 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.773170582 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.77156301 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.773033436 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.772590561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.769608178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.770409747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.773665794 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.770780568 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.771194427 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.773640122 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.770680408 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.773343908 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.774000594 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.771128728 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.771060514 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.774241448 seconds)
  done (took 122.149128205 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774274909 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.774015652 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774269603 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774342254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77378323 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.774093161 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774847396 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.774010278 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.774219191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77512413 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774198188 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.774639567 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.775333703 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.773921361 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774102543 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.775544188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.775680263 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776053773 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.77516031 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774291492 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.775472896 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.774709379 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.775391192 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.776424824 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776534764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.776565963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775885421 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.775387129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776384237 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.777323623 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776214509 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.775341568 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776677912 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.776202127 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.777830142 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.776087634 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77652596 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776786495 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.77592396 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.776995829 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.775861332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776851882 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776428274 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.776839258 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776923135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.777243067 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.776838353 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.776756391 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.776886054 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776679979 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.776854849 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7777874 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776794981 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776964523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.777466265 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.776113501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777071449 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777621367 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777635335 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.777864584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777618923 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.777404555 seconds)
  done (took 111.823331126 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776880237 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776179665 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.774209072 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.774601859 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.776409954 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775767352 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77686442 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.777182027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776917116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.776894985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77675565 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775245629 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775208944 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776911343 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775172662 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77600999 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775772068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774540245 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777631058 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775908664 seconds)
  done (took 37.234412808 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.776324816 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.778386892 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.775165517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776216724 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.778005175 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.776032836 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.778584188 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77777296 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775799599 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777839555 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779198718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.77970417 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776188035 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.775811178 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.778974524 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.775719917 seconds)
  done (took 30.149445396 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.775779921 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.778042308 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.780108987 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.778398476 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.776623327 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.776530757 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.779068134 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.776878045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.777227032 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.778715971 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.779162583 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.779651786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.780299949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.779740199 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.777366309 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.779095917 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.776155454 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.777468935 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.779621303 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.780260243 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.777170607 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.777461907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.780168762 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.780041523 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.777356332 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.777872286 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.7772204 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.777384695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.778026228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.78063258 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.778525842 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.778043008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.778836684 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.77808727 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.780387753 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.778493807 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.780227584 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.780058701 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.780092445 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.780821635 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.780670883 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.777476683 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.780400688 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.780313979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.778176224 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.779988215 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.777256265 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.778760057 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.778615538 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.777891647 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.781713895 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.78115918 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.781553749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.780932712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.781064338 seconds)
  done (took 99.555562097 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779734756 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780086332 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778501313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780378776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.780269053 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.778350606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.781293926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.778641312 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779144344 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781424598 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779463444 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780570847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777428997 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780789965 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779390441 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780704435 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778884296 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.77866366 seconds)
  done (took 33.75028315 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.779137514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779283636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781287095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.779203956 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.778546127 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.782414264 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779976983 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.78101869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781417656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.779830154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779946039 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.781728089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780905532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.782872071 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780955795 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780430431 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.781859382 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782372957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780592409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779960927 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782958749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782263658 seconds)
  done (took 40.896011423 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.782755399 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.781508328 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.796461002 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.79789317 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.802423755 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.80929595 seconds)
  done (took 12.489094863 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780508049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783443409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780869851 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784802378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783607619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78101924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780820684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780054853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783413962 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781350954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78152438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783529036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783037995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781369929 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783638347 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783098973 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781796114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780381213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782339111 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784715295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780784735 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783284851 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781992686 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781024886 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781732635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782199822 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785146451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782920332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781103805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78464764 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783819684 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781619029 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783907339 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782546407 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785905916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784440461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782123974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784821609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784500984 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782420941 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784897229 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784348895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785103241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782775624 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786064455 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782325313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783321385 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784287614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782717286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786267667 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785057993 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783699079 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786212652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784612275 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785691298 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786442436 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784086626 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783622051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78595554 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784199376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784863283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785306255 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783747787 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784607395 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786209452 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783570061 seconds)
  done (took 119.427888048 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783320496 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783730778 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783541826 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784667835 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783861651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784268796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783476324 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783865489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784363921 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784700913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786653641 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783880392 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784709056 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784219378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784135627 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784500318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784862971 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784932902 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784605428 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787805151 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784120902 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784610638 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784659688 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785145793 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784748218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786370627 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784955196 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785186555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785104599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785372579 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785514121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784949671 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785005184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.785298442 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786326184 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785339532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78629099 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78542372 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785173452 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788142673 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785813114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789188583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786668659 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786432786 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786084197 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786560332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786087476 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786307823 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786152982 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787560692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786966122 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785558671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787118588 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7860452 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78672966 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786811358 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785829732 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785673246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787159026 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789346061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787362128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787357685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789915859 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786442804 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787453411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787759919 seconds)
  done (took 119.582631478 seconds)
done (took 2443.225962852 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.784479748 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.803531101 seconds)
  done (took 15.312839785 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.950850562 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.902968554 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.786171308 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.834817339 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.786897027 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.804268137 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.805196436 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.786770793 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.787656915 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.786518401 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.788462001 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.973817379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.783148958 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.788482944 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.787927113 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.882696134 seconds)
  done (took 50.968096657 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.790812002 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.792236074 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.801408775 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.793260832 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.791037203 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.802082093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.823146463 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.794399096 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.824853512 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.804534049 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.86038923 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.800961621 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.790321166 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.83915724 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.805316975 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.809586236 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.879445683 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.862326985 seconds)
  done (took 34.39205238 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.866357593 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.791293396 seconds)
  done (took 10.387405091 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.819257555 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.810046802 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.784917306 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.815135241 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.793335831 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.800969743 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.80530798 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.796203194 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.820524639 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.794470505 seconds)
  done (took 69.769112025 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.797972461 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.793219466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.794788954 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.791013911 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.784537168 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.788587773 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.790767575 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.788535453 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.467346871 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.825149242 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.799962929 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.797482201 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.791954631 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.793686025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.791010623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.817023687 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.90707731 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.790191581 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.79011728 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.797390896 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.792662587 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.866970095 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.804317999 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.79211889 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.822450234 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.463712683 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.798652726 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.797823592 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.919319381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.790745813 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.792912275 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.793688623 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.794899389 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.167607672 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.097070591 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.791685909 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.801314941 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.800782866 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.791505297 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.905035694 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.79334718 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.798979696 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.765403875 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.077839509 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.897347482 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.834314132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.149056088 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.797520478 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.793975554 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.823312139 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.795903355 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.794625451 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.807030058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.303244796 seconds)
  done (took 128.446996255 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.7879999 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.095255494 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941998179 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789713445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06345696 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992721884 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.78955871 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836875743 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.791748363 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991546864 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.008373105 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.898648435 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.793168672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.788182655 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787344948 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.788565859 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.948277442 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.858573825 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794303616 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.788008177 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817583655 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99684605 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.919459466 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.794815841 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.811355189 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999677029 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.915807524 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.897937827 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.271410598 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.789531345 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854120725 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791698649 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.78864685 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.792413377 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.945993079 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.887111861 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882058453 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.792866818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788518771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.789879932 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.453317801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985025726 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.887769708 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.936334229 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.03727585 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.995430618 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.438377136 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.788840589 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435923436 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.955618353 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.002457286 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.995427156 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.913873026 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.792835533 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.031183269 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789096844 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.790195849 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026900444 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031610578 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.897114703 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79586782 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.797905918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792603353 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038572877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.80323939 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890339095 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798042731 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793123247 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.891803627 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90036849 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.022162666 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006137348 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.828915889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.106686447 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.27337278 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007008631 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.860532474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029647287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797562231 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.791521522 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878193869 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.553249147 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990023166 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037357788 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012450215 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82893192 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.389456796 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.791142335 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987092096 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.978204589 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.987265054 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032292439 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.945368809 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.108416707 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791810273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.793097013 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.034264086 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930787346 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.795246094 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.150207363 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02821484 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.355748189 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.825685233 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088068843 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928585828 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.105636986 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.419986721 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.795479192 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961755174 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.832862025 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.793970327 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792530737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.987284322 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.604348716 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.794281748 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.3137908 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.857872426 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.798214632 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99768908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.795495859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004180408 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798599093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030052436 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.059185343 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.827820259 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.965278997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.035110587 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.586847903 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042456456 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03725236 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.911144582 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017479629 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.291414289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.794526075 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070132309 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794268289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.792605092 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.964341663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79451547 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028892472 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.794709004 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020331891 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821199373 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948793637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795277594 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028509868 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.830632532 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844587019 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.796041624 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919002437 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794222243 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.68071086 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.94836423 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794552414 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.794818761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.246907344 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.792788574 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939585778 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.024605339 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81989617 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862693327 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322919629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794128732 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88279423 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822959838 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.540945459 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.795128123 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.009827086 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.763694199 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.218983671 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.793120639 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.033689674 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.97858625 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.797896925 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.793910773 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.534886448 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.49693353 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794241313 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.953980377 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.020780569 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.444010011 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997011411 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.796480683 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923145797 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.796652208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.883591987 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.145806365 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795199201 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.797000288 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.799212349 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.79649865 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795455039 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002572748 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.826890902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.310150251 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.932646287 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012770605 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.108916121 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.015188738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843714293 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798877752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042457202 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.800896038 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861603857 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.799115596 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821458531 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031726775 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800027591 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027394542 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05147286 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.870197136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848300549 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.800257308 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799378404 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.797904927 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949845521 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891408382 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800214457 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796578047 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.909894423 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925833001 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990608148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.389530017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.863003782 seconds)
  done (took 882.691640823 seconds)
done (took 1193.69199149 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.798281926 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.799045598 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.787906288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.80223293 seconds)
  done (took 28.927229808 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.808599285 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.806138054 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.807168114 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.804393158 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.807267254 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.805436128 seconds)
  done (took 12.578259193 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.867494618 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798565962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.802165181 seconds)
  done (took 21.209338552 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.872718091 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206541981 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.917253459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241748258 seconds)
  done (took 9.979393259 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.807661394 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.807365596 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.807765935 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.807036889 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.810682579 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.809402177 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.807483319 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.807530134 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.80904153 seconds)
  done (took 18.01628187 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.205189184 seconds)
done (took 96.653297342 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.97356163 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092745612 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.800795289 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.025223546 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.939272027 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.048689642 seconds)
    (7/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.070305427 seconds)
    (8/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.78595068 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.823278228 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.937197338 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.906471037 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.089605398 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.141594849 seconds)
    (14/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.913539825 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.842931743 seconds)
    (16/309) benchmarking ("sort", Float32, false)...
    done (took 5.553006549 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.887752703 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.827318631 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.88659793 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.817830286 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.000259642 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.902797439 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.960053491 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.902811745 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.005138292 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.787721624 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39367808 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.892501802 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.604007633 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.010776944 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.394778505 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.999321604 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.538982496 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.894689674 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830773971 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.802675773 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.07526644 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.178761146 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.895499105 seconds)
    (40/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.007239184 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.159183304 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126805414 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.909158391 seconds)
    (44/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.789955209 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.870705355 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.804521597 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.887574688 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.894173163 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.191807166 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.869730467 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.891847211 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.841036421 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.916502944 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.097042615 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.872652412 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.090649384 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.134296108 seconds)
    (58/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.324325269 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.717728262 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.293650294 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.921247009 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.30700231 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.097238212 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.163051911 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.182585759 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.134860105 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.810711837 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.951365718 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.868611069 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.807529165 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.057145827 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.600742904 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.009458925 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.81283073 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.717829244 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.262948973 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.961821636 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.846705195 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.209493949 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.00783683 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.912536864 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.893116818 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.096643597 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.996011915 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.811373921 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.518451093 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321835182 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.052178229 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.034642819 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.823282492 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 6.812774006 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.813097643 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.415594858 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.909518437 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.492195499 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.927490657 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.47393742 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.065305061 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.149785485 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.187549155 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.732235367 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.911780519 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.817948029 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.119193264 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.111522142 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.907934388 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.83017512 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.464479798 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.873968857 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.809608265 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.514037322 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.02615589 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.713090123 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.991630154 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.103606281 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.324893573 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.81135422 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.801317423 seconds)
    (119/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 4.086794816 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.848643127 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954594108 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.843593337 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.892510596 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.930043065 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.684461799 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.93192178 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.261375307 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.84005976 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.875237574 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.066930283 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.027564324 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.812292602 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.169968649 seconds)
    (134/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.820604416 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.105790939 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.640862512 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.720692187 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.917129231 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.951004809 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.815344633 seconds)
    (141/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.989343336 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.4093366 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.879341861 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.380433352 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.822723068 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.914728136 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04974915 seconds)
    (148/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.819689159 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892935737 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.041283421 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.815714561 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.663891587 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.96551579 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 5.627478414 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.184791956 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.209052187 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.84190122 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.896499886 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201936771 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.819504545 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.422804132 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.989976056 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.888582986 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.812478444 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.55833896 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.911194163 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.81420329 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.896292398 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.86529569 seconds)
    (170/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.89581575 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.996992787 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041095203 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.363208765 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.162273652 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.848038413 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.066429166 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.806192299 seconds)
    (178/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.031075706 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.054560636 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.477782244 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.800677371 seconds)
    (182/309) benchmarking ("sort", Int8, false)...
    done (took 6.335641906 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.008809432 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.84908726 seconds)
    (185/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.994998805 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.195364091 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.835357232 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.713506444 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.235601555 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.863802152 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.841172309 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.059943046 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.817802075 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166028403 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.871685371 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.945467322 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.311824234 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.967152398 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.837485581 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.106333566 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.86703407 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.103934727 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.985922724 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.799935919 seconds)
    (205/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.967369728 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.733706488 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.77988023 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.205669694 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145124274 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.474010456 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.812167252 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.054297093 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.018434061 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.235759933 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.804378307 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.955634336 seconds)
    (217/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.82639968 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.439301981 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.805867781 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.941050523 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.839237202 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.764597057 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.817691388 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.776871672 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.865817491 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.327632926 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.415057399 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.846354303 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.814216226 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.594666466 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.995529851 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.112758894 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.902711684 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.804058812 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.957204676 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.130252064 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.899307361 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.836004156 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.329276574 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958688168 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.303773358 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.225999411 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.923500435 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.840352787 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.74382904 seconds)
    (246/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.184805765 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.188404929 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.012619344 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.824894867 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.594826943 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.862583458 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.198569168 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.122910238 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.810156451 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.823527042 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.925854243 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.94379983 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918761507 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.825749747 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.212609258 seconds)
    (261/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.921831766 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.007948252 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.823018323 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.920940131 seconds)
    (265/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.211639684 seconds)
    (266/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.947801181 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.893890959 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.821215196 seconds)
    (269/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.567834616 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.856829191 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.308041374 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.950152746 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949476351 seconds)
    (274/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.936322881 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.104811248 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.928626994 seconds)
    (277/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.021859914 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.051004875 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.92003753 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.902095704 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.929989377 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.125812017 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.935209066 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.830853327 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.965257396 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.628759089 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.442396983 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.572322024 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.199169191 seconds)
    (290/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.95876322 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.872502003 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894436014 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.198782992 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.639123949 seconds)
    (295/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.856076441 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.851906531 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.852278589 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.976766074 seconds)
    (299/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.000126815 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.665934169 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.422720856 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.809244014 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.161850936 seconds)
    (304/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.167961408 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.814296348 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.878285069 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.282745043 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.226162027 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.793818736 seconds)
  done (took 1001.91373006 seconds)
done (took 1003.728667874 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.862157846 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849857844 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.832544993 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.853848112 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.945411334 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.866307135 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.843086439 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.83566619 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.880707025 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.882864887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.832170523 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.865287586 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.834649456 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.834135301 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.832567993 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847935168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.146556618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.865410141 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.850995627 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.84387145 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.85155346 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.832858533 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.882952175 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.866956666 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.837797814 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.83699115 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.838710537 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.854141214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.947838794 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.839229986 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.837643232 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.846791866 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.147624535 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.86361784 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.828980029 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.855031925 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.846526582 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.844630227 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.839857643 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.868207652 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.294390503 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.843824705 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.836748647 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.836998129 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.835932934 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.838842984 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.837055561 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.841542929 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849453591 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851162275 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.292602097 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.859047869 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.839714334 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.837321822 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.846054897 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.835883032 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.838684953 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851816608 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.855919478 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851900826 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.141492601 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.870170752 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.837957648 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.853883315 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.846075164 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.327236054 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.839129437 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.841489233 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.294650637 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.848554304 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33003082 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.85421592 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.838176387 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.85178033 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.870004702 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.149440103 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.862347879 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.837053277 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.844916893 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.838183977 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.847255216 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850616517 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842293709 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.838596956 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852078245 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.869800534 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.847978966 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.839957278 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.846919538 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.857370307 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.847112383 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.849626317 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.841451752 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.834012098 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.847383099 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.84156742 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.842157326 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.842423027 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.843767286 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.848889714 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.293286669 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86381153 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.836157442 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.835503079 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.839008106 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.853295086 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.29291851 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.847171647 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.860562447 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.88697341 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.840941758 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143051205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.873934507 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855371322 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.848043083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.841657268 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.834640017 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.144369889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.324754796 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.862813029 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.841269169 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.838609908 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856166018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.841753328 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.835867577 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153577979 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.869058004 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85441207 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.962281899 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.850929802 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.873524257 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.837860063 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.842505069 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.873778671 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855995429 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.871015943 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.84256227 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857088556 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.857553796 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.83766328 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.85255789 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.850436955 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.841390153 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.846903509 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.83529355 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.874335323 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855103671 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854409032 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.861624433 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.963729532 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.838854542 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.144832938 seconds)
done (took 289.284691404 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.910212875 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.831462394 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.936638496 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.837273919 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.924607949 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.924870312 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.834028529 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.834187305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.834238264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.21647517 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.834389793 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.836428463 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.835926029 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.835150654 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.921896387 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.837975963 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.835554564 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.179643883 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.839968067 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.908988539 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.83051754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.835992764 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.83847198 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.221471485 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829983335 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.836102497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.90983673 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.838827614 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185672576 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.838457372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.834501807 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.186991703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.929135173 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.857229825 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.848752031 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.845798556 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.925202448 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.844876947 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.921927385 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.922730583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.939747077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.880066846 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.83906538 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.837478817 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.842699046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.840959811 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.836430028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.866430471 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.831310169 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.837593302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.182142315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.849087464 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.847073062 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.83768059 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.837515729 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.862320355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.837500916 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.840760656 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.93027049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.843144896 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.90485962 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.222932314 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.217833213 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.83958067 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.83649171 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.837621343 seconds)
  done (took 182.281905221 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.906473087 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.915374097 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.90771856 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.848760225 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.889676287 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.913696321 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.847693044 seconds)
  done (took 15.004959376 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.847284673 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.842154614 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892403904 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.890490635 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.841503981 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.992249579 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.842140945 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.852450461 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.839615192 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.893868514 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.840936418 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841560412 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.848768709 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.843312052 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.890205994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.855109486 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.957368477 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.84253163 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.842302672 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.995713427 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840184016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.850633059 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.896927147 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.853908108 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.844193553 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.847624354 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.436938151 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.844608388 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83955432 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.841843437 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.839596121 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.88659538 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.84302849 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.838888981 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.841134966 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.959610924 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.843765619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84011215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.843748193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.842257668 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.843104209 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.843659303 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.845220947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84150018 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.842765894 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.867424471 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.843723837 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.84401799 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.843533843 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.842588162 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.89420519 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.843708886 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.841096668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.841696041 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.899550237 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850430794 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.844822001 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.843150316 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.844061861 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841057142 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.998626667 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.895816815 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.843794045 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892339209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843885059 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.844444454 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.843974657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.843302819 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.939588049 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.843979684 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894715239 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.842334178 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.002906541 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.868610539 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.845098172 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.846942648 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.848490786 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846136542 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.837339031 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.851050458 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.842268767 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.846684241 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.851000554 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.843623815 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8427183 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.957461308 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954009081 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.842188097 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.857793718 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.852100287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.843129087 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.899723483 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.846021463 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.843490648 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899750794 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.961893076 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.901287171 seconds)
  done (took 203.303166908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.85074398 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.853621484 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.846481597 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.861885393 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.845329817 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.845582063 seconds)
  done (took 12.881797044 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.848134489 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.846069554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.846021115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.846365018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.846778427 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.846907011 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.848061091 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.848438448 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.851228931 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.848165357 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.846638747 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.848030339 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.847690811 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.846846796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.849171828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.847959295 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.84866177 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.846371937 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.848043551 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847819476 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.990665062 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.847434995 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.847899845 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.848705551 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.850837026 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.847966885 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.854426564 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.846653832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.847180406 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.854861654 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.852852491 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.847960968 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.849102722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.852280628 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.852259652 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.848607646 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851884647 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.848755485 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843854633 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.848947546 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.84990314 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.849970612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.849253917 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.849536922 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.848970098 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.85250869 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.852800004 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.856063288 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.850472423 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.852726463 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.849103123 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.848637794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.850088988 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.849607438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.849467205 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854211595 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.854646787 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.850801229 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.849154654 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.849213438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.849866851 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.849248745 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.849808049 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.853782412 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.856932874 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.850610889 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.849362675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.854509399 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850573555 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.848902092 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.850881802 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.848178425 seconds)
  done (took 136.096301491 seconds)
done (took 551.354321315 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.092386967 seconds)
  done (took 8.873552107 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.991346203 seconds)
  done (took 8.859250426 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.563782523 seconds)
  done (took 10.345117739 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.875040413 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.873520847 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.853170896 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.848085794 seconds)
  done (took 29.242794817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.868144465 seconds)
  done (took 8.650846077 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.856531927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.845136277 seconds)
  done (took 15.515437892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.892867486 seconds)
  done (took 8.675826497 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.963492467 seconds)
  done (took 8.748706599 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.870261512 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.855040309 seconds)
  done (took 15.522033909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.829395535 seconds)
  done (took 8.611566533 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.558453026 seconds)
  done (took 11.352033973 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.85377167 seconds)
  done (took 8.651376586 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.902934226 seconds)
  done (took 8.685931218 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.099009335 seconds)
  done (took 9.882201285 seconds)
done (took 163.396452716 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.848078251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.846257476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.844872723 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.842271012 seconds)
  done (took 29.162616123 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.884962102 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.886049338 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.886650399 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.896914361 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.890274606 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.885381394 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.877594696 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.877819206 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.897191114 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.888947428 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.887598404 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.888488332 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.885132975 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.876702553 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.889806309 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.886321227 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.897785032 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.887428653 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.87919106 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.889402575 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.85447467 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.897257959 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.890545614 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.854383545 seconds)
  done (took 47.018864688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.049375551 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.924227849 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.006971649 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.906785977 seconds)
  done (took 9.671720516 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.904861924 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.906834745 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.920148379 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.957172869 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.981783965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.917343932 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.876729227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.875002126 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.861112781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.907730605 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.982804056 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.923301004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.013516289 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.852227206 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.040654669 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.852898276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.854355247 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.904797974 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.958640084 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.969981559 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.853788396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.904881256 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.90969584 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.924059708 seconds)
  done (took 47.838763915 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.853083304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.862180844 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.858322381 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.853418432 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.852138442 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.853195825 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.858804434 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.855065037 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.875271289 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.855779312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.853148237 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.854551835 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.853754469 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.853336179 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853920641 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.866071913 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.867420257 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.853263491 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.856475936 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.860298686 seconds)
  done (took 38.935677046 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.850320144 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.780202674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202226395 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.106495539 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.850836666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.852143547 seconds)
  done (took 32.428531195 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.869617845 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.864012498 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.855978842 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.912628955 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.993251122 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.86383644 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856917773 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.867564796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904391418 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921790138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.876774717 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.886820914 seconds)
  done (took 24.45993207 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.851560399 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.851420396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.851489527 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.867077793 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.865958647 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.866893732 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.862689434 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.847686164 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.870134846 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.878421589 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.86739515 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.868663576 seconds)
  done (took 44.140469872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942163204 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.895062554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.87839806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535966545 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233488346 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061510349 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362702272 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195991152 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.852114594 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122489348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853648129 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955526522 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106704083 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45860115 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889004962 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296621659 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133861022 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053057445 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872918134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481528082 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913327582 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144432558 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.628856367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9044064 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064979947 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.981276702 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.109024256 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.851052847 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976859993 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884033825 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856426794 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843448674 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11707675 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213764918 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948418389 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850231155 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45843729 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.558376651 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.827293055 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.626824503 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.53496274 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973298728 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862263998 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853578669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783194547 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.099919443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235557323 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.851569737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.558021931 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844505897 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853576852 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929581467 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.845819938 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.660442603 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758301931 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845802959 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.835899747 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846779571 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405616314 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942887304 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141692041 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832027861 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.942188218 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566892595 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254795813 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.002260173 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.856753875 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85713603 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78546272 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.598784138 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911199453 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182587021 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.872034819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501177444 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16362948 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.951056111 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794878782 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129169736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491587969 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.832747747 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078142209 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850150187 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78623685 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.884044799 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.784135889 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129063042 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886112173 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.611079537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895780874 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.186641271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858013203 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864359089 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87027687 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071245558 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.730603941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846941279 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.641576215 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99844003 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876355875 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190951989 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78828605 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.858189651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110775296 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.065246566 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031725097 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.357021574 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01155788 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535072197 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.914007711 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.097564241 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908797899 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.128161981 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911218314 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958398316 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912269375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856364051 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195793858 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.556649446 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.998838423 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.904468543 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983031722 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19226495 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884938069 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92199992 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859180001 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85607045 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646210463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408027489 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.856935685 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.858515078 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036416172 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910084472 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.857732348 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802870932 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.479251168 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906912402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.871110181 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081306984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.543290542 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174734246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792055799 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187271781 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949658132 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.080002589 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499855676 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.938242592 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119393903 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035930332 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072877958 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910258637 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877204097 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956606908 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879861333 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.102238517 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156039183 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.862323465 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.862113757 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659490157 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895246703 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865631467 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.862979592 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.607817033 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138754627 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.887444696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865931008 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.748079997 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.872309363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924585862 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863783463 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869526473 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39325916 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574786088 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.869233397 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.441439755 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086382505 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86812486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.568312541 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975609042 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941264644 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132110495 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918960969 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.794146755 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.571381664 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.553033602 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85897588 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795249288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860386342 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869112229 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870377535 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.057365566 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146285287 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908218754 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.553538769 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901721185 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870804333 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.86449097 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861583985 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.3735713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993279919 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.151566955 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910563208 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005305512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.875031845 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795465077 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866771491 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866506374 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861020653 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.861005493 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893961915 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.553080505 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238955242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121810095 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.471770598 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875711671 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.628790385 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.919419101 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.91960985 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555617561 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260375722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.924586454 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875301587 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.872753979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.633098402 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.561314332 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430580852 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18417863 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174151363 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30357956 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.187876601 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892823371 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197772322 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799375507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418002845 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919524485 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207508444 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802925039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946863116 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.503300836 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209589968 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876004345 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085415094 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249266107 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.638407559 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006169063 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074671053 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897588877 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.125875784 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8332286 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.150518362 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005032354 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572214137 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067539836 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202383486 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544150371 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.988491847 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.862080111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.556612512 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951859116 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.573956331 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.035886008 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.162295947 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863353208 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338853989 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871795662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090668937 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219337549 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.130022244 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.994495149 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801099678 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876317424 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87634348 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.866233985 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.867386311 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.730668421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.121590704 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876633579 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799373757 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.07184556 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175934643 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.768673568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.871344321 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865381402 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189096952 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.517466244 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043102984 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.069171944 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393088691 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876843001 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800337739 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799993329 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.557819993 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873199306 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.843158742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080907034 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.972719059 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78270925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059123994 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95451173 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122501554 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.879934536 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142520032 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142485223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.544672301 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895486909 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.966737143 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565032323 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.976564337 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868392781 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102979498 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62222238 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093161539 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.905404105 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.830475914 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.865866658 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082831001 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868448371 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.81529209 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100702008 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.590265126 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.929162236 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191479759 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944044008 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.797534115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91370179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.959960427 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877481517 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94813622 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87832765 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.87897586 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877952189 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913361918 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.800493532 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.992258943 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.881930374 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959266725 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.008864127 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391616535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.877587389 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144999406 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231043266 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204245122 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927011133 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868996226 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868585389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803500211 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018507681 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09488696 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143149049 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998007137 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.986008911 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897887709 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559783317 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18280302 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119554162 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144356625 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.764722887 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4932069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.917228147 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.870186368 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88112831 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.081076539 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089584618 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194946038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008032065 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.052905309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245481997 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143814146 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.870269829 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870315855 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458972836 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.95469604 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.568371881 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.920102232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829781838 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147854722 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880134146 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257788086 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895920566 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.031396634 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.388412068 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610137201 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16489385 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859405166 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938372653 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150123768 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267109058 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184998648 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938939932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881693486 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.987468013 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018794734 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.776896929 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872013541 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872169721 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920638213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.582514891 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.881093426 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152762774 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182103615 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.869958067 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.771167213 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895355276 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.881872644 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094781288 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141485421 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12549751 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881455776 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878955512 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688347786 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148122098 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928668223 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807034779 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.876627502 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968960038 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119114842 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895173588 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.325199573 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.583300173 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150574763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.87272411 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894139173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139636384 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250267252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195024484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405024174 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086480485 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458306911 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563279968 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181470395 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.878399647 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140727707 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183366952 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.876465598 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.057494749 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919796734 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.14112363 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184909033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.898838415 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549026801 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.842334166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215303103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43049265 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813932503 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884888531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.935230326 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874662826 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002553997 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884819537 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.763920974 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141289687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.664505561 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148494386 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.880556466 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.867135707 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.571977128 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.276461995 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916717171 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017898855 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884705703 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.591527086 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.238123242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132296167 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.063120966 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.888834288 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.879440321 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875013633 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863119708 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071585911 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.073018908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155193453 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.09321775 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.920039995 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879552183 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.09153575 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087999046 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.743804501 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010108204 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068582803 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925871431 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.788123885 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384549482 seconds)
  done (took 1675.064661571 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.874784314 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.880892421 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.883876234 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.870300283 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.886824474 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93049792 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.909059777 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877419377 seconds)
  done (took 56.929069703 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.865508914 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.059662938 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.87489118 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.864332276 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.872236459 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.863573473 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.038133637 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.874556878 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.868897158 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.870062763 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.861068432 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.87120426 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.172990627 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.883724224 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.856335834 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.843408474 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.864655836 seconds)
  done (took 74.21218579 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.854142992 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.954318788 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.878761911 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.868382979 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.806536573 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.863951544 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.699788104 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.882132424 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.846655453 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.082376459 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.480018955 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.869644149 seconds)
  done (took 89.879602498 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.850529631 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.846109613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.847577107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.847245236 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.845891307 seconds)
  done (took 11.017713676 seconds)
done (took 2182.56510574 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.084318191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061936884 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080512262 seconds)
  done (took 5.919738624 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.986214722 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.033958562 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.154082887 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.174710371 seconds)
  done (took 10.127002107 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.123871197 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.221472408 seconds)
  done (took 6.118620453 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.23410411 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.850556831 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.223102474 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.832359987 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.832780454 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.83187136 seconds)
  done (took 22.27459226 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.832723707 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.83846199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.835431731 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.837720587 seconds)
  done (took 9.10897327 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.815284797 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.515362419 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.817981046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.830242548 seconds)
  done (took 20.747856501 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.584413134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.59382893 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.579655762 seconds)
  done (took 9.526952644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.377790991 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.789039513 seconds)
  done (took 8.936178765 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135960846 seconds)
  done (took 3.946466264 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.009797254 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.183497104 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.397252938 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.409388771 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.512528135 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.615551019 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.203045969 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.128801035 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.281424281 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.329747642 seconds)
  done (took 24.879503678 seconds)
done (took 136.752881215 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.248591526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.115288002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.07095646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.197264445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.088051039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.117524731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.07485671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.180325383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.70758652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.703123196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.193803574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.086767621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.026444713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.096615945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.022534735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.099205417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.077636062 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.238454371 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.885664011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.085317641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.073659508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.830206467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.032488844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.838900744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.075634005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006974239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.419942098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.093817103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.03468235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.428177631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.009515567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.235933701 seconds)
  done (took 172.201536116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.615523319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.851318079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8560987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.851940846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.205518055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.862966875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.852717541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853108353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.343915498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.333525851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875727971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.272163144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884291941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.855785021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.8627823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857104154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.421657446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.71161862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.876880377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885288372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.881513201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.144024589 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.883162588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.177558004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.430683602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880789646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.857208557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88022205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.866293678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.865692627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.868603335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855312689 seconds)
  done (took 208.514205608 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859183685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.852814478 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854468505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855334111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.860905879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.861914739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857795208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857262111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.546072451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.534076203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863527546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.860641432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864175562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.858655648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.866919888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856473548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.861139476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.860331738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.859608911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.861548043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.862929542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.669167704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.866739413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668032812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.862084632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865073456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.855000215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.861976452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.862994102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.86653038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.865835019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.857132686 seconds)
  done (took 220.326045152 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.059888223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.86772535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.864699908 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.818162239 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.861810274 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.864836915 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.853633429 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.054261253 seconds)
  done (took 19.048378854 seconds)
done (took 621.908749843 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.329672102 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.168992735 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.039346809 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.883135529 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.12477224 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.918606483 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.880839287 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.945788269 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.612495759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.949812285 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.531215068 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.902035397 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.618974061 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.906814557 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.011203877 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.942159188 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.464717279 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.568147647 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.065516727 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.958744606 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.052754339 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.815636123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.954764901 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.641764049 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637718194 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.861151769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.063342236 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.480934912 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.889723751 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.054906634 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.626901981 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271691241 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.887003883 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.871897914 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.926152145 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.904801188 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.225057906 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.884685614 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.998718942 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.610381739 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941767281 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.491134308 seconds)
  done (took 102.704316006 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.846641704 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.845647518 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.842495424 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.845000019 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.84733206 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.844363518 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.842609267 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.841438326 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.845464866 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.842822046 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.843610338 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.845466142 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.849128751 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.850610086 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.848783302 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.85118776 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.851507806 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.849543646 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.849295871 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.850470707 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.852212379 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.853468947 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.864400711 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.852052236 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.848233223 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.851606548 seconds)
  done (took 49.851504049 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.871219416 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.010151135 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.091130719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.886720001 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.863203874 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.867085328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.878728019 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.866282212 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.864074962 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.867214947 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.955113126 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.87384046 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.885683922 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.093316923 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.879601902 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.864950125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.864862886 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.864084778 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.013412704 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881429261 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.882045534 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.869620113 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.885626324 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.880165468 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.867314047 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.866320539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.869395491 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.337107718 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.866564637 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.956322412 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.902944025 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.883814591 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.306793181 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.095166188 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913323787 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.866563371 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.859346313 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95700236 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.865881553 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.857539272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.87474524 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.861400509 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.082531526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.36084459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.871613267 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.856458447 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.337663874 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96256268 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.898821582 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871285255 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085062568 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.874861176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.859620111 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.857587325 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.893070088 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.869472575 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.857453232 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.222449068 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.869742342 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.876021628 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.862368096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.859139854 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014322396 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.867090213 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.00298462 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.867133609 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.865334106 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.858612757 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.084316394 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.875821484 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.362788559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.872803706 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.859261211 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.951548081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.007424408 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.367782818 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.872009781 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018710531 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.3159944 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.883973612 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.866479103 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.317223757 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.88870745 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.866826658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.860449443 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.862102553 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.860233203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.90417844 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.875687045 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.304385097 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.367699421 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23832721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.886370057 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.874702981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.860619153 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.225450211 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.868701677 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.860788897 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.079753841 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.374947081 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.8744003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.868264243 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.350593163 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.875487295 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.879746627 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.868397103 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.089899845 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.880230337 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.906056268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.861494161 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.867031137 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.862600115 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.879998011 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.869965455 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.861862118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.340230221 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.972895698 seconds)
  done (took 231.092636534 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.854786413 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.855777277 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.854949569 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.85455104 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.853942351 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.859972578 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.854679743 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.854343856 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.860058646 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.853826067 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.855828772 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.855714793 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.85630143 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.86246257 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.888032579 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.861751691 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.469680124 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.858532936 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.854388079 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.855886433 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.506043276 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.863192216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.854598202 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.86052539 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.856473491 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.855165153 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.865326161 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.878256742 seconds)
  done (took 167.110314079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.862435594 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.979783452 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.880183657 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.891561847 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.87093436 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.861901014 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.887050084 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.881304311 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.867493673 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.860368292 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.859992788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.923672459 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.87666418 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963044539 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.894313571 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.894560776 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.967385491 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.869822711 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.861505894 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.861467816 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.89063072 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.857963598 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.923556674 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.994046411 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.879378982 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.981944512 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.86652659 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.864546339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.862394753 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980660309 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.876255435 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.924026156 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.893833073 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.881860183 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982526028 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.978816376 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.968749632 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.892989026 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.868040065 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.863234164 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.861937544 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.852144877 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.982908891 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.880807092 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.864524669 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971708038 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.879388991 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.86467016 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.872093533 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.862336089 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.877673869 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.882365804 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.930998828 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996925843 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.895333545 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.889883058 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.888498102 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.144429366 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.871557005 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.964522525 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.857731812 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.983151298 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.882870452 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.852963951 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.865280611 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.869014576 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.893502001 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.896134515 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.971284743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.871869619 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.965548712 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.899115733 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.871952994 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.864042283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.866263905 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.981525626 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.980775199 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.899633231 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.902938714 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.89612551 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.861150455 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.865876619 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.85447748 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.883541643 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.870263364 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.985043934 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982164452 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.873279051 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.867352197 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.867634811 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.869004684 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.891582904 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.989395665 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.89874123 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.964700991 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.933312606 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.941042582 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.880278243 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.878802394 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.870245851 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.930407652 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.879109409 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.878163883 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.178234673 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.93609515 seconds)
  done (took 201.981129724 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.323768017 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.922276185 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.922175645 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.137722539 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.30027487 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.75498751 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.910096727 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.916761478 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.940898701 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.08662255 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.972145189 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.928174297 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.906160954 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.888687277 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.917596583 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.935826321 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.918599434 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.205258546 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.046124071 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.020060632 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.895842742 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.187494837 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.233695947 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.310937621 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.950383129 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.232945938 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.599356087 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.165908288 seconds)
  done (took 61.33533699 seconds)
done (took 815.861235532 seconds)
SAVING RESULT...
DONE!
