cset: moving following pidspec: 8333
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348247388 seconds)
loading group "string"... done (took 0.547726035 seconds)
loading group "linalg"... done (took 7.029454448 seconds)
loading group "parallel"... done (took 0.161866141 seconds)
loading group "find"... done (took 1.078631351 seconds)
loading group "tuple"... done (took 1.810116205 seconds)
loading group "dates"... done (took 1.190369313 seconds)
loading group "micro"... done (took 0.229773149 seconds)
loading group "io"... done (took 0.908563984 seconds)
loading group "scalar"... done (took 36.305579502 seconds)
loading group "sparse"... done (took 11.143271835 seconds)
loading group "broadcast"... done (took 0.902224023 seconds)
loading group "union"... done (took 11.804112257 seconds)
loading group "simd"... done (took 4.10220913 seconds)
loading group "random"... done (took 8.466612324 seconds)
loading group "problem"... done (took 1.854792734 seconds)
loading group "array"... done (took 19.73077282 seconds)
loading group "misc"... done (took 1.622659564 seconds)
loading group "sort"... done (took 3.061158222 seconds)
loading group "collection"... done (took 16.352426234 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.492034665 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123977877 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114764735 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118260297 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145886811 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114748332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122797851 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083632853 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.771599267 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147283524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118653563 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415328732 seconds)
done (took 5.071963741 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176222932 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084776215 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081304173 seconds)
  done (took 1.301421347 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065600107 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123512949 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066182053 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06665159 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06692673 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065825884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066047317 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066090332 seconds)
  done (took 1.658529544 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076095224 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068794105 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068549245 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068206598 seconds)
  done (took 1.417702952 seconds)
done (took 5.767225918 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766789122 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201019156 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182795676 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398414837 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128869428 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15414939 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643169266 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322500173 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183750808 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081461149 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104710758 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317845302 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107506767 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.624487411 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076376864 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090705287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13668434 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441070262 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067309005 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081704297 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088691089 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128382701 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08548924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074825185 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141878084 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067364774 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137776957 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079858278 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067855462 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208604401 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17253576 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652410346 seconds)
  done (took 10.192358784 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099023398 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09850006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068516874 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136512715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09692889 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069555992 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0706462 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067184304 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087138031 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128219747 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089177511 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10152416 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065174119 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068928591 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084565005 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204656837 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083420013 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082653809 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070215464 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074646085 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118810934 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07804873 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078644048 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077535109 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12801916 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179157151 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0959061 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096812998 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067221892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080873078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114861883 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12557073 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065594358 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066400917 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124688049 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094093253 seconds)
  done (took 4.614496306 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.30549562 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140149805 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091044257 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133559803 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064909189 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10726502 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065247269 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080869519 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200578474 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.371835526 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572439699 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111051547 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105081256 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06778094 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068386261 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066809921 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.35807026 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109635989 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105235896 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08130635 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070431183 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069755251 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341609396 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067865605 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064218064 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068038462 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058215983 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1246245 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068457147 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927698784 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125052642 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066505913 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1009134 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161510562 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088611527 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272581186 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068495899 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064930667 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150713941 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071156964 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066430807 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083323096 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103298899 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113078352 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065346337 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066971411 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16223173 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064843493 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079234667 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.022017525 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085091341 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151534928 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078331557 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06398915 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246073542 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085725352 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069110475 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090903696 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065117607 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189697423 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136341747 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067383742 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066885915 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068149323 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069361722 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350819438 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066111744 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.995501199 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067427471 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077132545 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068919398 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06953701 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073244151 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074758436 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085064094 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066407665 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075708493 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065996107 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065939235 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066736281 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084887456 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.352819763 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066314584 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068125389 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064896956 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063483755 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085941618 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097238593 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066555823 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065543389 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10069475 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.169646677 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066435788 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106459987 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066758542 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06414077 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085317637 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069416253 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114095596 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067404918 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092401814 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07182069 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09700919 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070299864 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098868413 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08172811 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067930577 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396125541 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065682691 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065381195 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068767943 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065158536 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067937627 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066618853 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079718902 seconds)
  done (took 21.262302505 seconds)
done (took 38.510121166 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234518708 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075408638 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076341993 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076270511 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075877013 seconds)
  done (took 1.765987337 seconds)
done (took 2.972957363 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120089651 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098829519 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06486096 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095767585 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063989718 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100207572 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098667218 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08107213 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099249079 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06439234 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095935927 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063901628 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064064528 seconds)
  done (took 2.339296114 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084807161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082987431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07078594 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082357169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063581271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082104969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080002894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088125487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080718137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072210579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063421367 seconds)
  done (took 2.051946701 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084072882 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084136214 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069369208 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081288898 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066379221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081213821 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081031478 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085284727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080561369 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073091912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063555471 seconds)
  done (took 2.047303194 seconds)
done (took 7.633219168 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079739333 seconds)
  done (took 1.268138054 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593152079 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.104030061 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082150511 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112962431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184161888 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120411135 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283916754 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087025687 seconds)
  done (took 8.937917604 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088032854 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082487964 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0715819 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068979234 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069109762 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069623322 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070949517 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070996151 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071511496 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068581307 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071842189 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069853268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068708583 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069373236 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072130191 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071772905 seconds)
  done (took 2.417646291 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092836442 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090729477 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073488932 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074719158 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072310887 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072305154 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07494997 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07363895 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070707772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071930599 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074940079 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073764439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07231741 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065069304 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073858086 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07552064 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07103182 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074244907 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075382932 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075163714 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0748018 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064529459 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071603083 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074194247 seconds)
  done (took 3.081193573 seconds)
done (took 16.901347146 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118190777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07219568 seconds)
  done (took 1.382568527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084987085 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08541658 seconds)
  done (took 1.371517324 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087518643 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067002139 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093291812 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080083822 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066503269 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066376284 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090731788 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066394198 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066393961 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066111624 seconds)
  done (took 1.954582118 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071986583 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080956108 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071280619 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081825928 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074513853 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065089996 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073500931 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068164405 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078899016 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063003958 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072156721 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083397237 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07191268 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085114538 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072857148 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069339591 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071850997 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068388615 seconds)
  done (took 2.528736454 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069768183 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068674247 seconds)
  done (took 1.349324605 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070218362 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06610449 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067726292 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068339933 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063867937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062516127 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0639642 seconds)
  done (took 1.669577784 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389064575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109608516 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298072681 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070487347 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081517618 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250056448 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065345872 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070437828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070629279 seconds)
  done (took 2.65488059 seconds)
done (took 14.120299259 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081969046 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086378121 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094795259 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363394763 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091458258 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065693308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113905899 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192524058 seconds)
done (took 2.312376083 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216521755 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621006681 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.388024529 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196658814 seconds)
  done (took 2.417518701 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331506529 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086487091 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059179729 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066983274 seconds)
  done (took 1.766308012 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067968208 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069445209 seconds)
  done (took 1.355254015 seconds)
done (took 6.973470322 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082961125 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066279426 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066215595 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06348826 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065937756 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063197753 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064511118 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066100977 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06599748 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065886435 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068144925 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065923771 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065877694 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065644498 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06345755 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06376353 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065642684 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063537487 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063549532 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063619866 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063321757 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065806971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063370632 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063666815 seconds)
  done (took 2.828783004 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08688773 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067357604 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072439402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072195081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070769793 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073559091 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071535036 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066526271 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071433615 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068036128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070140418 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070072706 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067897322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070785793 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068398913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070043362 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071270707 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06648523 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068203238 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07035755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071416279 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066791122 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070412315 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071379494 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069711768 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071285219 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06803727 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066392357 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07119479 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070066957 seconds)
  done (took 3.337407865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072009662 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064101907 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06467083 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070599505 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063968646 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064899923 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063450021 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064067251 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064500797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064011406 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065065689 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06304694 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06351019 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064359186 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064261542 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067012641 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079087848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063844799 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063725024 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064563334 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067034372 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063390902 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06342492 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063654897 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063221719 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0631121 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06395642 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063703386 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064341164 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.171568409 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067284499 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067308308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06308018 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070227631 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069032388 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063113076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067440975 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063425761 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063954557 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062892686 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063029115 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063109311 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063427362 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069960776 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063642494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064783534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063035694 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064344831 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063576235 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065716075 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063166464 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063070553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065479544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06452087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066986575 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062657405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063890363 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062815435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064136583 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063126837 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062810887 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062857206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065394888 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063825751 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077218918 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069808926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062893908 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065237965 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064227639 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065879119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065152245 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076324032 seconds)
  done (took 6.035020866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094800359 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090167938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065532563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065115163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06211266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064106356 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067842564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064258837 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065319299 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069937727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064128987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065399259 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065386046 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07683964 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064511303 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065542564 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070216218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062322425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064132569 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067443116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06425688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067711255 seconds)
  done (took 2.746625362 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159749172 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070519649 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106216291 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07353676 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068187626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073133176 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0701497 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070070238 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06976633 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068344516 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068607339 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070260263 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067584277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068086122 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06810007 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068658476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070334842 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068246907 seconds)
  done (took 2.613109818 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08028749 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067346608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086317857 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066341108 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066589055 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068220389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071218692 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074527681 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068619359 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065915268 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074688756 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06850924 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068337111 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067990502 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068286875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066212272 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068302334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065985052 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074782753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07127014 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070620875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074385566 seconds)
  done (took 2.788694453 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08253925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06959851 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08242616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068808762 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062441314 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064537814 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070505921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066119109 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070215924 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067688997 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066328647 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063961213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069354234 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066283813 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069322595 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066074589 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067532618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065572699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067782034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061793229 seconds)
  done (took 2.605165783 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08953022 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068641077 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067846153 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076485086 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067817862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067571113 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075818707 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067765159 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067357059 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087511224 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067279815 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06737342 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075617307 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072044424 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067108721 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075661664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075252421 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074999351 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067595402 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06756212 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087609941 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067599955 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075902425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067428553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067747895 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067194269 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067162821 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072336052 seconds)
  done (took 3.257678221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069324139 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066259844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063495065 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063755361 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064086537 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063455306 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063148352 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063558035 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065633613 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063146927 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065922349 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065783808 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065650184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065561873 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065667051 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066384082 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065774655 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063479795 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063815224 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063597375 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065891493 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065562606 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065786632 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063147291 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06314768 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06544936 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063159544 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063722703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065565342 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063171437 seconds)
  done (took 3.183575235 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077846243 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072701674 seconds)
  done (took 1.393762183 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065240838 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081082773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063500813 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0697795 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070536043 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066177426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07383513 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06979135 seconds)
  done (took 1.797880014 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083616985 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077371878 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067626069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081281634 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076392853 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082905647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132223106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067452887 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072750267 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064063397 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079669956 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065591635 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072603212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066621944 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071807283 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072387708 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064096558 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072633438 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068640436 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06468622 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067587507 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075251008 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068578182 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061857805 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067212487 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087672789 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076964313 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065853205 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069099925 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073339136 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071651952 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060131713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066187014 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066884193 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064115465 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075930531 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08139598 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069207959 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074710828 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067614803 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077414048 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061873332 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071180186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072767841 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076229121 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066604677 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067191079 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061599132 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064619409 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068982339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062179923 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067106192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061864723 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075406691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069986857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077000694 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065207678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06785905 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069587682 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069767777 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073638435 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068551666 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068825783 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066135233 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075878938 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071107165 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075303727 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061728556 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060679559 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064593852 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076030329 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088555202 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072811597 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067045522 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067877573 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064572344 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069543687 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06798272 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072314796 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072670473 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06681102 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072598204 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073843956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067862819 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068883149 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075445581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064977774 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07005288 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064526513 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083218304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065587562 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064447475 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064272662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077044296 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069899188 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066658457 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064349279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073572528 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060552582 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066417419 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066623339 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06611811 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075562852 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069876675 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071110701 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074137626 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073440957 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066516549 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068172747 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06215047 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066211322 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064518387 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072376696 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059606163 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067982725 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067184659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066011572 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199181978 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065595849 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068457326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075364145 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072961966 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066591981 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06389664 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069720475 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067543169 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070160816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074827927 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066103798 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062405467 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062839396 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071100444 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066807975 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070316539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071569094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070404657 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061603668 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065034244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072902343 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076069432 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067285583 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067877498 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072783013 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069157748 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066074235 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073276084 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069736921 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066250291 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072882281 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068250195 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062604928 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070818317 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069801135 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066203354 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070733622 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070843919 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069202926 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06740019 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065478104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075131259 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068659968 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066308197 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067228571 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066085917 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077557957 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069068965 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061924254 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064444636 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07684894 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064945355 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066317618 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066348209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069341147 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068775666 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065450464 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066965901 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068815083 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077805972 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07091909 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068499243 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072755715 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077632913 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066389051 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069119282 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067004013 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068289424 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067556657 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075100468 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071833878 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071443728 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069369727 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063543204 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071958855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074067881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06574591 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064453694 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065545273 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071121038 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071900681 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070910925 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067349169 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065282021 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067076285 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069831283 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06926137 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066179856 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065825928 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073680979 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06484913 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074050629 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067725016 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076474066 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07001587 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061690084 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070252106 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064850173 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072555351 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061946175 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064475322 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065961447 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067211404 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064827838 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068054116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059897812 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072211265 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072683063 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066478399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065135285 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065662673 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071753336 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06675634 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069053422 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068639964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071786047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075584982 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064910764 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068605642 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.20391423 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068262716 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061920751 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073069694 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066204416 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067023771 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06657785 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065181454 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069927161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076186798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074027007 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061349905 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070098408 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065889848 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066620771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062832333 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071981438 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070940502 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067954753 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073797428 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068706856 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068012504 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071370176 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066437284 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068030563 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069125989 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070283892 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068224656 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069690055 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066872599 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070515062 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066368079 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06505613 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069371264 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067516279 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068241178 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072616743 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067218731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067496246 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070361282 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068435232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067988481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067321707 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06709709 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070057311 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06858199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067776948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069633682 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062945633 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074377881 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06722527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074475823 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06746323 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064251105 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075205284 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069490335 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073231533 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067693311 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068237255 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06811128 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066162315 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069780886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074083284 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065536933 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077698349 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074518041 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067871004 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069442874 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067634817 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068923957 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066015063 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067490527 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067489244 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067011586 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067189136 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070732231 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069077532 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06700762 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068298036 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067126277 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066506574 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067252435 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060922005 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065436246 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065788306 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066231308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075921955 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066684031 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066421381 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065249215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067522029 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06523578 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063282835 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075410603 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07607932 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067121366 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073383685 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065887554 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068072632 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076873453 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060862475 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064843788 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064254579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064160705 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073242398 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067108673 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07533157 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065719849 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065191986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063229074 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066392174 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064016372 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060132779 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063006923 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068399935 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064341059 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064200377 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065366611 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067680369 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066227482 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074334557 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064268852 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066159694 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065566774 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193580836 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066538712 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066123339 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070096407 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068202228 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06487357 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064580983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066481219 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068047749 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068652645 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067978589 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069040341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076891723 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06699112 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070116627 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070269907 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062164198 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069537683 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066731257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067265876 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066531598 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071064598 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070645975 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069153426 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07607451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067236473 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068447064 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067128598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064967759 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067721545 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06729539 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067566347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066692405 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068340313 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075078004 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065167276 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070430225 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067511261 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067970549 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073899976 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067879791 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069678756 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074407596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06776703 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068624081 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074879106 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071445627 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069928804 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068261876 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068693643 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07251585 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066271819 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074205532 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067545554 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067952267 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068809254 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064814273 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066900697 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067237297 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06644384 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072876001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067717171 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065967632 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066473563 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06464259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067849922 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070798369 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074086797 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069095602 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070376446 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061504506 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064071282 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068419483 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064546665 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068697555 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068778839 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071999599 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068664529 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066855111 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065217083 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074773255 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071901944 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069674306 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064394611 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069916055 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067265332 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068889792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067414167 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066572715 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06818198 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069837231 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067961491 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066280756 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073172762 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069984814 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067342622 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067766478 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066972363 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066452465 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061815585 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067273132 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068284753 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071641277 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068859215 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067178656 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076603154 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064073411 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066110814 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069199321 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065053084 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070585131 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061139717 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067348545 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066275841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066108756 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060600857 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064662599 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063347291 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067200658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064387168 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060962506 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075403102 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074211874 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068388557 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.194330425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066130577 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062425346 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062190119 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066335623 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068511577 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069457484 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077072961 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06640944 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065691232 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062277783 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067645757 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069712836 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070175449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064430553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063477731 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065869108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070384146 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072985591 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066357819 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066134166 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070155122 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069731462 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065217136 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070345313 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063665785 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070748971 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079422768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068192364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068485356 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073426483 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074559223 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067622589 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061754885 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068048027 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069853674 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067384325 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067791399 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06803196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081309758 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069318287 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066266343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06540742 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070047358 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066624043 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074728889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067642841 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067628132 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071158254 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069128256 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077259899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069262819 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074112396 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070099614 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069948669 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066196823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068284391 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065217632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065827409 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068067 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06835204 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072752835 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075974844 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06628092 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077240418 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07583027 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06879986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064123518 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065958984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065881708 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062454818 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067452267 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06462598 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064749916 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064389471 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065212568 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06753866 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07177356 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067240382 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067036631 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065988564 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060593977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068594372 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068655022 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06754678 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063293486 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066471305 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067050276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070458289 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069653038 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064340596 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068080385 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068370593 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067216803 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062118701 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073283516 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065629329 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068325101 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065939841 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066645873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06778635 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069691323 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071368417 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067645362 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068579462 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070397955 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068990543 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063800563 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063898972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071526087 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064535169 seconds)
  done (took 42.744553783 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104378374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063732195 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062058243 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062443301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075042347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063325117 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061881682 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062897861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063277491 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065760238 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062121106 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061911417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071684283 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078461239 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074409338 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066983195 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061951949 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063263407 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062525476 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063332584 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071419136 seconds)
  done (took 2.762714847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076124422 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071343927 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072825438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076643815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068281112 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07135664 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073486019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071455235 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076980912 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067505213 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076646072 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071198268 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067652063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067449815 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067533045 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071008237 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07641557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067611402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070717121 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073193852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071234479 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073297322 seconds)
  done (took 2.894923428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070144135 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06609558 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068496583 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061904346 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066051508 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06992594 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069612438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064167471 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069867986 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065059765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065125434 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065063996 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067760521 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061233129 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065573668 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064208736 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108775842 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069764257 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066237188 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067139779 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061548675 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067486154 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061708 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062123492 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064985655 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070056824 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066769323 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064684499 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065702638 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065214237 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065825805 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06364457 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067427053 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066879138 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064763882 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065276713 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066171385 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065772223 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061407808 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06410497 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066526785 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061790449 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066298592 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067205939 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064359058 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063691267 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067257204 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065599214 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061082481 seconds)
  done (took 4.572974382 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08282221 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107759928 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068022896 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088469427 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080818269 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07559481 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069512127 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089279982 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063627743 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06446793 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082060619 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080345233 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066044858 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07080203 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072849049 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065639237 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067446348 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065005826 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069820382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065526236 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070168292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072418 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080682408 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07953938 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069990701 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064875423 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065354958 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070227547 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078910522 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070860665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071112255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071399901 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080824433 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071226541 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064990436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068132413 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082522835 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069732683 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068619046 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063795602 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068477398 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070322925 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072761574 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08246864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066276675 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071142212 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06551086 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062739396 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078543123 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068013976 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073590992 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080396562 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069366174 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065868177 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07065243 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080753116 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065820528 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064144869 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068732848 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07838146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063221816 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069386618 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079990237 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068014955 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072919904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080052325 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071006404 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069397017 seconds)
  done (took 6.383060999 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077983216 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072737528 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082436259 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080741653 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07273914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072837684 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072795066 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072795797 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07231547 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077624532 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072858131 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093869032 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067612304 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075420139 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072704926 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073021121 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07276645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073051185 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072908599 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073042339 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072723702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080733426 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072981462 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08096221 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098143922 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067791216 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072315951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072778316 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080972021 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072640538 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07980789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072749123 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073103831 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081017449 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080066739 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072555298 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065471478 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072421473 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072967474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072399739 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067790925 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081023738 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0724758 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0677025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072812694 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072110298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080881145 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07928114 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075744641 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077597554 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072373914 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08062266 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07253473 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072901571 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081271148 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10545327 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080525135 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080879425 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072340916 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080672246 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080488544 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086556169 seconds)
  done (took 6.070050792 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086819032 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075908702 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076473866 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061674146 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06417723 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072246155 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064146585 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064048457 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074960497 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075189581 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077588311 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070125588 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073138166 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076918623 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070149622 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073233129 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070082167 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070152062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074773913 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069957675 seconds)
  done (took 2.781056623 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07675326 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083794499 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067126553 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072430534 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069122787 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072885714 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068573691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068863786 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067077678 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069294883 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076685771 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076066251 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067618453 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07200908 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076212119 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071811672 seconds)
  done (took 2.486803671 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07809128 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073274249 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080194035 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066329466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064160628 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063129524 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065973995 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061721785 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062536924 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077974135 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065991318 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068567799 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065873567 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06467726 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062894806 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069074825 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062620004 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063535219 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065680409 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078109003 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077079937 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065046278 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066902706 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065746925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066487407 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071256563 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065710366 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063740335 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063843089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066433009 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067052402 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069891963 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063204433 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064129098 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064556884 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063855933 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065672314 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066352359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06863639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066140694 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063977433 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065627311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065652405 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066712615 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062246616 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066141825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062350925 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067692655 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063865641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066325274 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065483412 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068309375 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066374574 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072485366 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068791252 seconds)
  done (took 5.015904039 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081809869 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071361646 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061862792 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063782258 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068816757 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067671049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069253392 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067544539 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068109813 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064247656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067852716 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068710935 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067904931 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069436064 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06796434 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069761358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062168643 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0674029 seconds)
  done (took 2.571591636 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073369272 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067435962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072767664 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066615495 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065995059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067982191 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062501407 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064438832 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0647347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066033677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066390073 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068006968 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064404837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068044603 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065831484 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066045217 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068177414 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064664735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065954079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062428763 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068457667 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064424072 seconds)
  done (took 2.79520686 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095666915 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082753708 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138310384 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079554581 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082825896 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07180959 seconds)
  done (took 1.883067353 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09307837 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080407851 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066638719 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087802762 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073937107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067797226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067779443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068123905 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076835748 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076441804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067542972 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076585652 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076970519 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076196999 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074094989 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074054414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068198599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068001842 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066791163 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085064119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06811133 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076722222 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068099704 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067421008 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067775317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075900564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076361368 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076657155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067697679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076425001 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073180691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067424644 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076764446 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076458914 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069218489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076287954 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067595124 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084835347 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074221545 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075799744 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068749974 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07398978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076492299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072765659 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076719653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068281466 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072513713 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067634076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0677866 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086622333 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073527412 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075568727 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07381905 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077028498 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077037239 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087115169 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076793065 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076008317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07425673 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078634737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075989448 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073333052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075813664 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076474405 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073788089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076357918 seconds)
  done (took 6.244501421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085801633 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086642396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068436425 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076901048 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076356565 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067964182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067803073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068373729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06799705 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067232118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108480681 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068384336 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07610335 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076231559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068147055 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067790377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068079425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076135545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067642403 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086760492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068143618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076101909 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076246548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076070521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076642017 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073907679 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068071674 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068302152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06828945 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067940392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073270577 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068019314 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076208247 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068011587 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076339583 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068184626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067760139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07292751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068127496 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073517762 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076291751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084368662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067802894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068174326 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076756632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067857567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068028357 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067391153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06801077 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067633869 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076171495 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076376496 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076549827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076007784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068214566 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068449152 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068155617 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068242696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06830998 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074131649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076394769 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068088046 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086946183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068107841 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067942086 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07628041 seconds)
  done (took 6.157101852 seconds)
done (took 129.166289199 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185517598 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164373869 seconds)
  done (took 1.677268532 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07181404 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099750138 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076685152 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128399114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067223589 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100166731 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099727692 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077973653 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066338766 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066267883 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066131033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06962506 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131428526 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066423504 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066055719 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068839276 seconds)
  done (took 2.664166369 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100147664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158303789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099716518 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064940722 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097746095 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073126807 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064862318 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075281111 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071404756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065332352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073657511 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07081952 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065414734 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070793097 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071271196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073037591 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065180386 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07315496 seconds)
  done (took 2.777954044 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103626789 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091890425 seconds)
  done (took 1.541846136 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158974629 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105059483 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150983112 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348593988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.170388007 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228864988 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127407817 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127695709 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117826314 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123688762 seconds)
  done (took 3.001350297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101104931 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152864655 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25560754 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115549556 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072924751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096275892 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11654909 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077868727 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081533972 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081396833 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080841876 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07641899 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098967896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073874938 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073597469 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076389357 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103616019 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072586539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074639228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077055453 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099227502 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065681392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073499688 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072179946 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077758636 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077985218 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065566025 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065067201 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077072143 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074451008 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077057597 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094595194 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077850288 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108047955 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070352516 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10897076 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07701685 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074153316 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074336621 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073980985 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079316836 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0793652 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072003325 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076382152 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065288922 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077098713 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065721548 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065562974 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078641148 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067476476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078356152 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077730278 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108212509 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066993615 seconds)
  done (took 5.976757855 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104597508 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104301175 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072544946 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111524188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100029198 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072276329 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101717349 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094239246 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103047434 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070360171 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06858002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070459367 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082896949 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083417842 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112735387 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105664649 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074102447 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07156725 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104587283 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103435378 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069211645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095128696 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089822855 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101902052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067636268 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070753634 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068320716 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070349179 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0774614 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078990607 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070350396 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081290464 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085686833 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078950793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067587459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0681391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068475017 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080221084 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079843621 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079658586 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078500335 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067834868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069779961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069549012 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070098582 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06808182 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080040097 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080988661 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079775441 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069857227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070643067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068289304 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069396686 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081068569 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07834964 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082016636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080692897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068827819 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068621442 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072605425 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08103748 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080142227 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080157949 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06994146 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079871913 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068553808 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080825227 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08456194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068603378 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070490386 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068536683 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069865268 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07026569 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078671613 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079217314 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069954973 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070192872 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068959042 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080961731 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079125874 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068729464 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077650192 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067554927 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068599247 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070224644 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06983826 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078489163 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081058268 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07015972 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06865763 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069839269 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068227923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06660106 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076947476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079845227 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078391372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078252523 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069264459 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078556886 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078491663 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069150529 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079037287 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068265612 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197780068 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070655363 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08038144 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078595534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082155849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070347812 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069304339 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079290693 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081287799 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068958918 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079943546 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082482993 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080511499 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068511671 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081904012 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069409721 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080560314 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0713372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081022662 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069145755 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080525609 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069287859 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069407433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06965981 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080644287 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071449913 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068899378 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07064173 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069967619 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079800406 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084805345 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071450145 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081945522 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080283396 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071050157 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079704913 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069851905 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079572783 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07015923 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071034031 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067680535 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083388947 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069001736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070435219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070003446 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081315115 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068996305 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080764139 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078925091 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069225555 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08214039 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081160421 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078215763 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08127687 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070680883 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069160318 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068443529 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070366175 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078981953 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081132604 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070851297 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069638622 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079431766 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080757507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068155543 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079445082 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079206597 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079216196 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068497259 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069674317 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081165435 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081837165 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07917967 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079224685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079310224 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069141387 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078870818 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079248882 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068426305 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085090447 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068391371 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083407972 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079724282 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077544074 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079606884 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080958695 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081175796 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080806622 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084122665 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068373119 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068240503 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080691308 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068662374 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069484398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078168433 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069077659 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068856242 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083144341 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067948267 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079233169 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067160254 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078663607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066566027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069180879 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082532275 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198135697 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070639103 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081764414 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071089598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07860826 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081820491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079653305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068844919 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070645499 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081490632 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08020962 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069320087 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069096501 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070662806 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079771841 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078405379 seconds)
  done (took 18.769038372 seconds)
done (took 37.760470709 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213611436 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151527865 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200254126 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119117806 seconds)
  done (took 2.136265751 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.127467169 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10135982 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095323991 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064888975 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102767612 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065176234 seconds)
  done (took 1.946837897 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320853189 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2133456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183952985 seconds)
  done (took 2.099970638 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202367789 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188847105 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392265751 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255150984 seconds)
  done (took 2.534135175 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153920111 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089831765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067227033 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.0836455 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136598586 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163153963 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102500281 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127215138 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07850241 seconds)
  done (took 2.444569164 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148717685 seconds)
done (took 12.696153133 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.255473952 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228992671 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099048552 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.201413163 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105763922 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141634841 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 0.144759888 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123298467 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081375365 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091898069 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077769189 seconds)
    (12/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.205531092 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073997789 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094736463 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192293943 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097067327 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073487884 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09239662 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.110736 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122201832 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090503649 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207669543 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190827299 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089023963 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.196255498 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074182513 seconds)
    (27/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148771694 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07141557 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192993938 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.205982433 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079173724 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071953237 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073746643 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071510942 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110983446 seconds)
    (36/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147804259 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065614933 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149101952 seconds)
    (39/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061889863 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064536022 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071473959 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197458127 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08986233 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07262201 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089314918 seconds)
    (46/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108105107 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072078683 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07214551 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068750004 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.165581088 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108160639 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066845935 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064778535 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069349769 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.158786531 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149121905 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189875824 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06295269 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.156493317 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064918099 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052773288 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179361571 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089231142 seconds)
    (64/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08624411 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149910959 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068663721 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065083195 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065181054 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076647686 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.066005563 seconds)
    (71/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17223273 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07498348 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076091311 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109973872 seconds)
    (75/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067110081 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089152189 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051257551 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131158389 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072106235 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147422838 seconds)
    (81/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063814811 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050892478 seconds)
    (83/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107319929 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073346961 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.250939133 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145640698 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061530482 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079316454 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096101348 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092482861 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128803523 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072554739 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.376029082 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073482 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092083391 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185766586 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071900832 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053248519 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095532355 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074580602 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088398915 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174195691 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086319382 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072781445 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078542444 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053036262 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153165393 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051599994 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16932579 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127904495 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202699542 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137026055 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061579572 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07255265 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052911037 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074067991 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.174922668 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053477522 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051680523 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.133664018 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 0.141178941 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074397879 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088361737 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071989311 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071124277 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074313845 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071458294 seconds)
    (128/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15042359 seconds)
    (129/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067906807 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071760798 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179277308 seconds)
    (132/309) benchmarking ("sort", Float32, false)...
    done (took 0.126989272 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064778278 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07054694 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075947584 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071952628 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070701177 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075384838 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0682708 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068687361 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065150505 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149452487 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072164957 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071313598 seconds)
    (145/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112120272 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.138157379 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051437659 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173514962 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091853191 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073867131 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051838716 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052883705 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070799483 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.1576224 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105302853 seconds)
    (156/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097173978 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089510201 seconds)
    (158/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086485101 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05117367 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061688157 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092493415 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07441928 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.156857037 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065175377 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101193573 seconds)
    (166/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060440552 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050832661 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052196366 seconds)
    (169/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116939158 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051349789 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080587996 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067172368 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052106861 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06740963 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071343939 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135002636 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065550261 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051615033 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086720113 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072173049 seconds)
    (181/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108193032 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066647389 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075111203 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073829305 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054028508 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066111335 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051262676 seconds)
    (188/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060277005 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078464763 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065398628 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149012489 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071561995 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063506914 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051295585 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.219532065 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066570069 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185724115 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092647169 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06819926 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07680588 seconds)
    (201/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052346055 seconds)
    (202/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075051597 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137751876 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051777019 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05131872 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060703248 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072399492 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075242557 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088995946 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088245469 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067864696 seconds)
    (212/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075621533 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071731871 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064526683 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136628986 seconds)
    (216/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065091681 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077645299 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081173644 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080670487 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052304875 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07377301 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051928555 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113438245 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05274071 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187194416 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06553567 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13280561 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165087521 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152217142 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095003074 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064648711 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065565156 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075061921 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053597949 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052947206 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076312643 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07365116 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067096158 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066291093 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09029169 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086215183 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066268324 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071383284 seconds)
    (244/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052198218 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073691913 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138509833 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066111186 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052797509 seconds)
    (249/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07353426 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090050511 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051009845 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094402792 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065437194 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071912429 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130132956 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050822687 seconds)
    (257/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066267314 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052775672 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068873209 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089760941 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051532239 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185870158 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072210467 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072996793 seconds)
    (265/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087346497 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051325932 seconds)
    (267/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080964713 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066370036 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052150334 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.157641863 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05222568 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064888437 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051175073 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065133003 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06721296 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066114669 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064861154 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062035942 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051679936 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05238256 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104208761 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051651702 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066917202 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065492729 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073186852 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064359679 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086566344 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064388447 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051424086 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052804921 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065440506 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07264429 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137171417 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086826956 seconds)
    (295/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053349451 seconds)
    (296/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098851909 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089369374 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070673049 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051129655 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066308008 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051592657 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06278855 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133520864 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053225703 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051382122 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066425871 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070717287 seconds)
    (308/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062017668 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0535272 seconds)
  done (took 30.417938032 seconds)
done (took 31.814738456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08854397 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093692086 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075889435 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093866805 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081834188 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077451308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073489852 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079207328 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080416867 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082619245 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079144541 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05501171 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074478567 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074489655 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075326013 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09226959 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078531273 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073066047 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073824222 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066111425 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073307461 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065986971 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067746054 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055089596 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078028064 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072336956 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072819811 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074738148 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066420343 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066059236 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069447534 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073756134 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065893778 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078445143 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072989603 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073312888 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076288763 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076907849 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068228975 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066717597 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075033482 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066696728 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073181438 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074445484 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07307024 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071652937 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07404313 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078958399 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092338256 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068573124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074886834 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076221982 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076927631 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072947051 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069879426 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073492826 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071021816 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091791874 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073883043 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068510042 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074187118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074224856 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071606419 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073755442 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073853191 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075499013 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075336691 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072111312 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075073204 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07167652 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066410596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073798017 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069378125 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065951069 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075911051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076906697 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065333224 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071365713 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073075758 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071771263 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065744599 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068329283 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067502004 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072241136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067847739 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054771033 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06976389 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072214716 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065052478 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073285816 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072122269 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07253124 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067548359 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07602049 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065514936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07121037 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066032974 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065712408 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067537793 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069563058 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065549496 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06844068 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075387974 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067249757 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071717636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07945591 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06574299 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071753083 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065301787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064736192 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081245164 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074268731 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065446659 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068156317 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065013302 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073279576 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065013386 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065467889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065417735 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065198688 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070469431 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065156417 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066681214 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071677671 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076747542 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064530926 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067887301 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066867463 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064259051 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070208663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064716104 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198840566 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068140051 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06231616 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068650665 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067451184 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073587153 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068401056 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074238061 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067863475 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075063286 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070406253 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072328942 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071622441 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064931319 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05950037 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069221338 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069264637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06815226 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067130567 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0674937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066667866 seconds)
done (took 12.531326646 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070101742 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144501162 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101210034 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09627927 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086704772 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067349853 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077103146 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10332299 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068293726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103393849 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088589286 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086129976 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113285934 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065182366 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066563968 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070367263 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068191434 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082248205 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101651604 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087801364 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116939758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066102176 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095133375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091098164 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088132271 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093695179 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067455453 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070209346 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07019862 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101645171 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086891738 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070468275 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067519889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101224141 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093314079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084172306 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067354734 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083587547 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066990669 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066727669 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06794946 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099065445 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080826141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081349499 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070770157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069824464 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06779033 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084319159 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092748547 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079232596 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087268046 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104262312 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069320588 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066513132 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06522989 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086101153 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065668602 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068875171 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066434397 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068993543 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066741798 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069281004 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081487752 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082590511 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070067449 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080750221 seconds)
  done (took 6.846464383 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085782713 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089759305 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083426946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084221979 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066286141 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066689781 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067328508 seconds)
  done (took 2.031723902 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069531366 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088432181 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089511413 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08962575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084957571 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088601518 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076135412 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067364766 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08093628 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067937961 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0881535 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103171162 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067351699 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073216712 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091444378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067314757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09114532 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066986224 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069869055 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090528224 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069467922 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082806087 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070216938 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067509253 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081576247 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067093658 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11426555 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071201755 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068673622 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069981163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064962997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107722428 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080730568 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076442195 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067014132 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081361497 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08121013 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065138097 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083028269 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071206155 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080257389 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067138711 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067319326 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064584079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071078854 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077304634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068006672 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067775469 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069400942 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086747885 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067623682 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080601877 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069648308 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069414997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068332638 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07077524 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076476657 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067588797 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086051328 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068340396 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082958541 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083088551 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080428703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082625458 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069097175 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080459271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082408129 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070631938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06857695 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070265514 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082994452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064996305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068002498 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07724433 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068571843 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089553335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089479095 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067996691 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075962199 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067618205 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067088554 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067089652 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089807134 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069460721 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067156778 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070963787 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070007911 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065660859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066538193 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070032023 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06463471 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068327371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069264336 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0696248 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069433329 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082924268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068877949 seconds)
  done (took 8.797252808 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071622971 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068452502 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069939765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068884481 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068472603 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068809038 seconds)
  done (took 1.928641312 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097396902 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06950458 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081097429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073736147 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105407558 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087309795 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087584119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079369315 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084433971 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079495585 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088441943 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089148494 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093277662 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073390304 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087564579 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07344213 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087793021 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076839076 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078914273 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074069497 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087274436 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072779674 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073265319 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082266725 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076404567 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072663048 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067689398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079175105 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07895078 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07965029 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072686988 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076415199 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071085 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079321121 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087657907 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071126298 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072122283 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078002718 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072867585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075909084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088528942 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073293255 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074925601 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077664793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079656964 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070890805 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077513603 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076474221 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087599974 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077486333 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077552365 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071878576 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075681076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077598331 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071241758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080033464 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07719502 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086716158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072597252 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070892436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069564805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076034372 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078689056 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0767126 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079378322 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077283103 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070510918 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072898063 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073190957 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072119439 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077437014 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0690304 seconds)
  done (took 7.124512613 seconds)
done (took 28.207195458 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.5474396 seconds)
  done (took 2.023433362 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607981074 seconds)
  done (took 2.109891931 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.545476095 seconds)
  done (took 8.045361096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398708442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482618017 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697614991 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13343492 seconds)
  done (took 3.259551264 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.687917931 seconds)
  done (took 2.195977961 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212969212 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197819062 seconds)
  done (took 1.929305776 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379185614 seconds)
  done (took 1.879992401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109710809 seconds)
  done (took 2.609162702 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268385 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163849975 seconds)
  done (took 1.933081426 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463303837 seconds)
  done (took 1.964503187 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.827207077 seconds)
  done (took 6.323994267 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211036894 seconds)
  done (took 1.754472732 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242755167 seconds)
  done (took 1.742902002 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.695159801 seconds)
  done (took 3.196051721 seconds)
done (took 42.47540052 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083621475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08265314 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082037532 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078257227 seconds)
  done (took 1.81446902 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080023026 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073526332 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07740453 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072926036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077112444 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073239575 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074776995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077452162 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073110577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073255962 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072888614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07276558 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07564314 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074481082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071374723 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075152217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076535567 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073114421 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075848578 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075864052 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071265846 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075499549 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075846582 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072588036 seconds)
  done (took 3.295535572 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081658156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07377767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075228572 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072864214 seconds)
  done (took 1.8142688 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08041899 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093667174 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090629235 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078458176 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093307417 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086779902 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069225448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069445999 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073491993 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077184241 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068144217 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096763726 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088460701 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077179598 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079348165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066431099 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068990369 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087539357 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077452313 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077767261 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070521372 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077281149 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068746368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088559079 seconds)
  done (took 3.410926957 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080620865 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104599692 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078814301 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088500065 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090336019 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065769054 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075159429 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089675228 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123798583 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065602273 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070607863 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065984074 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072972505 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065506297 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077014452 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105234235 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109081623 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069068411 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097050875 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0660529 seconds)
  done (took 3.177688716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07598379 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07035268 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066512033 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069180025 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078104383 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073571539 seconds)
  done (took 1.952223705 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070378142 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068115443 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068207102 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067477618 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071819554 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068025999 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066443888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068081547 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067699736 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067419783 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06668019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065944776 seconds)
  done (took 2.324726399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.175004829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069074932 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070366061 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066390963 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071126132 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06651408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081360216 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068274108 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091092765 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066756284 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067007758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069046654 seconds)
  done (took 2.473413489 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211221166 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076773641 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240632977 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138128155 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112772453 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117252964 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104673661 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115255009 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146017439 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103002992 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170220283 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168161183 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108500019 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13869778 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089781028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098771785 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158083813 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16502258 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105614149 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167448411 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146282716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128364166 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14863843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10252702 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106995023 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123748672 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071579756 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081018056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17387471 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134211541 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149156271 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112934447 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094775356 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179769316 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174652554 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14445682 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135982385 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084393269 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104116307 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134736583 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201917397 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089145081 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165774472 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246678139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081988615 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135840253 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122540535 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122275815 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108171308 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090893116 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149293195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187771567 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141281542 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08821875 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114540448 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116865272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118017408 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104104121 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18542106 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163681922 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129189444 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071855523 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100367115 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156423215 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133896494 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110652741 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12986889 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094627844 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136070026 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156577869 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11997799 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145522581 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131148765 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089718709 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120655843 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141772373 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130680878 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172985249 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127075393 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074095153 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127605379 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105309114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082686797 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142069992 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075897788 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177280903 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0994691 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107364638 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114522595 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109911304 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110914486 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163851134 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285352281 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106063636 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066620626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105917031 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122327521 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149843306 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088817427 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110439683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12010227 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079800147 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141629999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076269967 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125464602 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076413161 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127492159 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134682688 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07629615 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123429705 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101975069 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101000677 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136439362 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163335522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09068001 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083722059 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170459093 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123783028 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106134941 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146504688 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158770974 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10029154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104919081 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152713025 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183227662 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090843684 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16537614 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109195352 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084681084 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088284677 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125671927 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11391956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12417079 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083238369 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1204973 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171115786 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075967567 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096663105 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135269752 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079809143 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081502577 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104801973 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101484393 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095970984 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101636048 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10578163 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138802287 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124543994 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247695499 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129765866 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100129901 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17378761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090670561 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102023349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105181703 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070288149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138817448 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159651341 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080254267 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168006724 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126806259 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106625245 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120896499 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084064062 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142185985 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080024441 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070998276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146871031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111773875 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111516572 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15251621 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106869589 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129470901 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120504895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13768785 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135107297 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13065873 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106722878 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089485863 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112983574 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127732571 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073936955 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092732673 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081012386 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105386473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096827746 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085430949 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144518063 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127187721 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101441786 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113143573 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098302456 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14921153 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077613748 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131137785 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120304171 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09497611 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153596403 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15371769 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13259723 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099837114 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146477507 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07043445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215602604 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093117821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127701465 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085632697 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085193975 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119088983 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149085266 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130746996 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140674001 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112864696 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122946972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157334947 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070528737 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116541664 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151749528 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123183389 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10612178 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090784755 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099878002 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144572405 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10968634 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186086811 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115578827 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12680251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15512362 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100603821 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080596596 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104429772 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138382249 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106224048 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147122838 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100500931 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089002286 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111331827 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.0749107 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101574892 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130202605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121876594 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140672318 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116100057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13553381 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077616008 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118972514 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122038178 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123825946 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064339975 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121075088 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164098162 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094448127 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119881708 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154422707 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079682079 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125262138 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32323219 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148693049 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085657597 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111764589 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119965353 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131162307 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121668507 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142449933 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110761681 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137822507 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111288534 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08621004 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088970147 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10046574 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106503322 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096784486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109984103 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116314618 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095923578 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135269288 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104856005 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111212701 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119214354 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097625595 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090614603 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098012494 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17627778 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121056795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174671658 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099515537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146806276 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167547537 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075329338 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079828872 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078849164 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14150656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084552521 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132949413 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098802002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107009108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125695917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144372875 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096266936 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069177189 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11001999 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136550254 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113087853 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098811533 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105177789 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16474555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100647607 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079911155 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114158068 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105432608 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102427794 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319094027 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062533009 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100371849 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077642845 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081988742 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129228418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15636738 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08281274 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103184636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121281405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113370852 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129705516 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103266134 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101166286 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115504987 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152024682 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131714666 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090381758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113668276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131971101 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160080806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106889622 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096405125 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17406384 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156993903 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163221953 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089768155 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116603504 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115944307 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109570527 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141007248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083738003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166429371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082852904 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138542191 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10579222 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091597725 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132233877 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11535127 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089587637 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15055482 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118822523 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083470606 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078717765 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121940288 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121231351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107481047 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075801349 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140487459 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073105956 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133550206 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170229691 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224740205 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107114359 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09863494 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08135587 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109989646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104863555 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089777619 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098979322 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175120796 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089014928 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152776615 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143683469 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115524922 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139400041 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100934297 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638168028 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079058808 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154391895 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118752284 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175553001 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098392913 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119551484 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11123309 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126006671 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146998189 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106736455 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177395574 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13482922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117706435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080654971 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104005688 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103987836 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090149824 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106290756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11490438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11786446 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09522677 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117451297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12531133 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082799084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096369788 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158307687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11896989 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146862746 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142166781 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085280115 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119203037 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140223432 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080489324 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123512511 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153629562 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105977857 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242475756 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082389368 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103209127 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172460302 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074473493 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165237644 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121151628 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111482088 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114421916 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116292151 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133360219 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109402543 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124131709 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095142713 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112859214 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114623385 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083682128 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078004621 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105607966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115294136 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098508748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099662291 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100154168 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152769777 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07165095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09678712 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104815483 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148715706 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176680076 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088884063 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083905684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121317724 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11471373 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114605065 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122109369 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080520195 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083693978 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082745621 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077567976 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109327926 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113713716 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105483239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112898401 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167394164 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083656166 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223083806 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096095518 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105710688 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069942642 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07953075 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096852896 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098482731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108180691 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100271564 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170424539 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094862756 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090297786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092349576 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.216605129 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084267921 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131341136 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113482845 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121003391 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098891907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063212357 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111195141 seconds)
  done (took 59.643822583 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123143903 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082783346 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097508652 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150620366 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124061257 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213103657 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158302321 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200514457 seconds)
  done (took 2.765849204 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072131412 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094968801 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10019701 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083268911 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067214697 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06871954 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227920557 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080567877 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067052009 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088752856 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079433704 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069023507 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422348742 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066564639 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067582881 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062097567 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067673192 seconds)
  done (took 3.394717073 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373789003 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598346407 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37570955 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073790067 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.860350508 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093534837 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.031516926 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131220877 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074585378 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538030591 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703239207 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125353081 seconds)
  done (took 18.594672703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080313203 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070653032 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084941681 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084791192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073277237 seconds)
  done (took 2.005171834 seconds)
done (took 108.228035143 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084065685 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401320598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053878098 seconds)
  done (took 2.097258334 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087106054 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085603573 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084983215 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082879211 seconds)
  done (took 1.963559222 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078499694 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076229492 seconds)
  done (took 1.768580993 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226773088 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157902056 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087512988 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085643566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078806207 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079041528 seconds)
  done (took 1.857785031 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076198547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075905313 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073070451 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076861375 seconds)
  done (took 1.91242252 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079475672 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053688652 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055952981 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05644103 seconds)
  done (took 1.857158517 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089537173 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079921435 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07851438 seconds)
  done (took 1.859868376 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105167178 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085499833 seconds)
  done (took 1.802914315 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084844608 seconds)
  done (took 1.699532491 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103330761 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114566742 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132284089 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110830838 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139375374 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10966416 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086329623 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087836742 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077430819 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08837525 seconds)
  done (took 2.660812721 seconds)
done (took 21.646662182 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082132367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363580497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361160089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08968492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669862768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357066232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968097845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092951242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114402105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067851389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084370368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6492523 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989738587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.314587823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979721614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318447595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648746328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068407244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067713954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068156305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952694593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067930616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068394272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068759877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648010635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371939568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068611129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318510694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067966233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070300119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354957267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068369645 seconds)
  done (took 16.079664713 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074797581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118526315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074357191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084338933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071645313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069434275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071857502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069343159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120077149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068134165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08480572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0678106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072444443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068822922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087199568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068390596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069257321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068631291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068794574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068830201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086467482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067935853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068446177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068432837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06818444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080226664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068500978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068646506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06896861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070502991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071164883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069164294 seconds)
  done (took 4.030913305 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118578102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125897967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074347639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10331174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112220707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070437331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143782254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092759359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128076434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068223415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084877341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068861878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100986201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069411587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08840867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068973817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069641974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0690905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068758065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069020759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087420333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068121515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068699472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069517358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069041693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081981274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069107631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06896224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068904192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070976995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072056591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069670834 seconds)
  done (took 4.287941697 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075693257 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075488826 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083522706 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084496232 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069496501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072252455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072882809 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070951137 seconds)
  done (took 2.234757943 seconds)
done (took 28.251322517 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082228625 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068918174 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073591585 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08170137 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073425848 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078969732 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067468917 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074986502 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072638536 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073136234 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075184578 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06779612 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072004152 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067319376 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073706336 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068251493 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079690089 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072142449 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079638841 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079858662 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070462557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073180961 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074209545 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079522076 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079709928 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079549457 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077796476 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073424271 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069618349 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070957714 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076852029 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084084656 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069141045 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079597475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068734608 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068286879 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071763218 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067939797 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079592735 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07718199 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070020769 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076496881 seconds)
  done (took 4.725193652 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09138752 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091375598 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085294117 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061359085 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067142898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065351102 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088804373 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059651292 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059501493 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087461154 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056077567 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059157253 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062891424 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054511468 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059200332 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057014403 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061438764 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056210399 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059463985 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060026518 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089054534 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054531113 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07784468 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062928882 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058591217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061905421 seconds)
  done (took 3.388256946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078248867 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085668977 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08877003 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126890647 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104509218 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076941975 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07981694 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092645011 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085130953 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06799315 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071776338 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093371381 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088310469 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073813642 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068047038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084972283 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082299761 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06936067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074104946 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092670048 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085587125 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084730115 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092733946 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080768948 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066971837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069990527 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071513877 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081067191 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072069719 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076428448 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071982494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071116731 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06976816 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078952958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071745979 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069219735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091120089 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077848761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078043139 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068368266 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071592741 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068694372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.103015998 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126510723 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067504843 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074700392 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075319312 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076953404 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067726859 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086104967 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07875742 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067584852 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07117846 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067290202 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067882906 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081329241 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070220824 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070124883 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077200601 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070618533 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089584902 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071584027 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082913373 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067677707 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075473948 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066984122 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068544317 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06661624 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093024119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069597466 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108935906 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069054729 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069003273 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076770884 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075401202 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073964719 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068397093 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082928416 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077970193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071143214 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076332572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070955193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070842649 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087800918 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070255488 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069590305 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068761681 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075364384 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070622448 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069281882 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081177397 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067896468 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070631574 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08463614 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06781842 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069238303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074253629 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072815788 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06710298 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078926999 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072617754 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068582032 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077200929 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067883679 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070467201 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079732952 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074089994 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067615056 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072212729 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073827271 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068566224 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069450132 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070524305 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069144884 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076301416 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074079397 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072379066 seconds)
  done (took 10.611122735 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163997589 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155136965 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071670801 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145661222 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07692044 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079576093 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14834555 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094677978 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068233525 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068941985 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069466357 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110889967 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106165946 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115990623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078884287 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068185126 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084022484 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114968426 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152475679 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143487857 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083847257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077012958 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070394289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069203923 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071337259 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078865845 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086032653 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077094798 seconds)
  done (took 4.40342195 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084457032 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097740987 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074805483 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090017795 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091762407 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068493998 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070432243 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069898062 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080969111 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079988476 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067874633 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073775681 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074994736 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07185484 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069033935 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074746705 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075139194 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070206923 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071542091 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072957135 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077604773 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08087978 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071941677 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068089452 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072799246 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067386367 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065074699 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085429479 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068649067 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090491755 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066154148 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075584988 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081917605 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068598425 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067818079 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068027418 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067921197 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067808958 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069765933 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066424577 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066703946 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057805481 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067125258 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080089077 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074186473 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056692483 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073257541 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073013009 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072831071 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065553146 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071009217 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070842924 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070917799 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074985032 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07261155 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073190325 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069305278 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074134046 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075909342 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06804221 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064691093 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066653329 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072336063 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066631758 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075632443 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072239911 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066247037 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067662375 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069479396 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073292206 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06771838 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070643167 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065289321 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069362959 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072267668 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069412629 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068787011 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066386555 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067452877 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067950583 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055688387 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067899362 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05377365 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070470266 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065803058 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066366806 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067493894 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072624839 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080644536 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069147611 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073602641 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068789225 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066907604 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07124366 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060505139 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070201149 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082518992 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083412047 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067888873 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065839219 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08195595 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072479394 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066791712 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056574097 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075181082 seconds)
  done (took 9.162174681 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092457594 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070125931 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08352102 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091118177 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087100137 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075588678 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077105474 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069619349 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082826667 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074266623 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076422274 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068201019 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077220064 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077683987 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07025081 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077128015 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072173277 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083276554 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082235545 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068507305 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076361337 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080098987 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089558691 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080451887 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078667206 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080332293 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089462154 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07245162 seconds)
  done (took 3.875872677 seconds)
done (took 37.7886739 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.706791619 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.882780894 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.704209675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.052740349 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.793473054 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.718229732 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.880648039 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.700412339 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.870610655 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.744814403 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.99134658 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.760969617 seconds)
done (took 64.453383495 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.729804261 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844174203 seconds)
    (2/2) benchmarking "String"...
    done (took 1.971199031 seconds)
  done (took 5.456662464 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.012492288 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.281586735 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.933383791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.699049553 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.702700301 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.932238466 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.508988794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238032817 seconds)
  done (took 29.936098408 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.810293782 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.93465547 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.35637068 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.390419748 seconds)
  done (took 15.184464012 seconds)
done (took 62.048691553 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.71799061 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.728898728 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.722041956 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.682959326 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.754441238 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.709181019 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.874746854 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.757006449 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.696602658 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.691244786 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.698403169 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.118945431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.70574313 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.258757434 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.702765836 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.706157156 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.735100518 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.320996048 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.853415344 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.715349338 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.70955577 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.748384136 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.700141032 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.706498139 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.722201152 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.701258965 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.125469133 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.704058303 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.315177822 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.699502039 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.728502134 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.747256626 seconds)
  done (took 201.39941922 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.699668547 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.722292529 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.765292217 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.708819193 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.103172259 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.87968978 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.812451976 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.152831155 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.701903549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.727994238 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.92648497 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.697243175 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.947175634 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.649178601 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.730097038 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.806494085 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.88649645 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.934896979 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.731552906 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.8643189 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.707448758 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.739460998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.684092343 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.901759999 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705211994 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.703005879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.870082837 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.706624978 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.89694025 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.871506638 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.71472017 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.720838835 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.924793662 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.577105053 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.717919698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.718691335 seconds)
  done (took 167.249133686 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.869963025 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.704485325 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.702767459 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.703106849 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.715411753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.707852876 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826485363 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82547487 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.166280333 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.147778883 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754760699 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543471261 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.701677744 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772316818 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.715024578 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.706110345 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720251992 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.732293141 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704061704 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70561147 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831529425 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.718742522 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.733268767 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709485087 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.705690821 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.710062083 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.075956939 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.701928625 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.710084614 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.965770525 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.702280414 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704217558 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6028039 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.405633706 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797725346 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.703697865 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.713840385 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.705821047 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.926994638 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.704579662 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.706000688 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.708842412 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888317742 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.705543965 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830673178 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.703428138 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.211727889 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.703418994 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.705754568 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.506376292 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.705804978 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.379001184 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.706106784 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.704868747 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.70864758 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.706029768 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706168356 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.706331462 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.71191139 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.429075619 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.77873217 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.706403004 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.712497914 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711687962 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.707686127 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.802169953 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705426153 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.764000095 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.760786121 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.926456144 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825630409 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.707468854 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.7743002 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798825691 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.704308441 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.707159514 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707492809 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.707108487 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.789694108 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.704221771 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.833006096 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714165524 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.707906243 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759250854 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.779492491 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.705023471 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.707844239 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597228713 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.708210037 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.706731222 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.036016934 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774758239 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.705272134 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.705769347 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707629761 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.708843121 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.840199022 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826402969 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485121105 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.708673778 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.416538755 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.708575764 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.85556442 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.707293444 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895615578 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.708871542 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791336763 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711877668 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.709526625 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707734103 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740255379 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709679269 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.770086325 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.706912055 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.080182065 seconds)
  done (took 394.118173016 seconds)
done (took 766.336815405 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.382803391 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.339152627 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.450000734 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.360601868 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.3304032 seconds)
  done (took 13.511487066 seconds)
done (took 15.160357033 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.796157529 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.799547026 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.733012825 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.799958739 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.729680428 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.799819153 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.777674785 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.735529739 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.76699804 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.73681743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.768038302 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736008398 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.721368319 seconds)
  done (took 24.548170902 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.950480803 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.947964156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.784745124 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940085337 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.763720499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.950154326 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.876878685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869308247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866164451 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.729632495 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726653225 seconds)
  done (took 22.056680976 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952980923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.948594237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791871398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948109137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765059634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.952264085 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879718017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.867135068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871045733 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730059325 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727130776 seconds)
  done (took 22.083103919 seconds)
done (took 70.338982135 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.721051767 seconds)
  done (took 3.370477472 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.742215325 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.884097124 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.727903013 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.722602254 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.720549653 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.719990702 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.723125728 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.723860882 seconds)
  done (took 15.617151363 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.717935857 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.721068373 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.720244553 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.719875714 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.720916136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.71916881 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.722418535 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.721656591 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.722479094 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.719682286 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.724023238 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.719724492 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.718484521 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.718567408 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.722629532 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.721797444 seconds)
  done (took 29.180435709 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.72100209 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.720232271 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.719443518 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.720141374 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.720774096 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.723258844 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.721468536 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.720580913 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.718889173 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.72062239 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.721109132 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.722005234 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.71961497 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.720272042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.721208337 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.720135394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.720446426 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.721343582 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.724787942 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.72073914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.721499951 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.721517182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.726127488 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.724078562 seconds)
  done (took 42.971214991 seconds)
done (took 92.790508296 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.61583915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.123776699 seconds)
  done (took 8.391292542 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.725769691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.722211339 seconds)
  done (took 5.14037539 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.726928045 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.721908779 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.724093975 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.72434246 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.723431425 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.724024144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.726822049 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.724738347 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.724587795 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.723215074 seconds)
  done (took 18.896543045 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.723180626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.72504413 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.72073024 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.723682151 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.723480563 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.722297923 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.726966324 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.724741564 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.724788873 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.721510812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.724939959 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.722572262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.725573354 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.723054479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.724232439 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.723040442 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.722561163 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.722892972 seconds)
  done (took 32.679066662 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.725196702 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.725790553 seconds)
  done (took 5.106931983 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.721282069 seconds)
    (2/7) benchmarking "second"...
    done (took 1.721520027 seconds)
    (3/7) benchmarking "month"...
    done (took 1.723389322 seconds)
    (4/7) benchmarking "year"...
    done (took 1.722641885 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.721557495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.722610141 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.722673136 seconds)
  done (took 13.710241483 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.726705598 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.885656759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.958268891 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.355769685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.72527284 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.731153849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.700177165 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.727709543 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.729694237 seconds)
  done (took 19.195190591 seconds)
done (took 104.772538791 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.532223655 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.718278626 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.062985008 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.783278295 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.739205347 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.060439616 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.758635391 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.930497377 seconds)
done (took 42.241720226 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.804096549 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.276836312 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.30815845 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.455712312 seconds)
  done (took 12.696491077 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.708526374 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.263274425 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.764912806 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.396782183 seconds)
  done (took 20.029208293 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.092104772 seconds)
    (2/2) benchmarking "read"...
    done (took 2.101589706 seconds)
  done (took 5.857294829 seconds)
done (took 47.056732006 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.728533926 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730374498 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.729416467 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.728892018 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.730162998 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.727593122 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.728551047 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.730414507 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.729111913 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.730319374 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.730092147 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.730095749 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.729598075 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729707359 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727956507 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728652169 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729532324 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.727958878 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726408946 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.727460738 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728904432 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729342274 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.726493002 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.729070831 seconds)
  done (took 43.153504482 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.730836574 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.728803468 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.729896354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.731905922 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.732080445 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.730899791 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.731803831 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.727772225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.730581314 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.733339979 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729314535 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.728819571 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.730142055 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.729668964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732175074 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.731268973 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.732388831 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729123631 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731578724 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.728964568 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.73084794 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730426016 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.729904403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733075318 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.730538971 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730201117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.732543687 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.732131933 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733794414 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.729315891 seconds)
  done (took 53.584641472 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.73578046 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.740493982 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.732982016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.732268634 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.732618436 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.731674467 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.732351755 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.732560814 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.731946397 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.73376307 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.732729254 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.732762581 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.733920044 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.734252011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.733181087 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.73381335 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.732953232 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.732777796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.733877965 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.733621758 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.733838604 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.73501624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.732783207 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.732886982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.73334726 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.734332138 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.73305148 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.733081664 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.733528365 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.731821514 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.735821669 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735186617 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.733636223 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.733749173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.734888196 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.733821532 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.740708089 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.742703828 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.733823296 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.733240585 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.733904185 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.733230105 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.73723941 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.734430396 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.733267865 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.734088684 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.734094523 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.73420022 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.736024767 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.734062263 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.733211109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735474583 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.735361112 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.736984041 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.735940676 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.735858504 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.734443641 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.733920717 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.734927489 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.736626019 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.735268962 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.735657024 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.735402954 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.736033749 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.735552789 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.736184692 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.734090183 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.73581503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.733849651 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.734718118 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.735319928 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.737131791 seconds)
  done (took 126.549692321 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.736292554 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734435271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.732694474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734000269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734218807 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736867706 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.733270668 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734788645 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73393918 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.73796078 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738877241 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732645333 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733939447 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.738063134 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737684797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.735409392 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.737765733 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733191083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.737735869 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.737526017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73625752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.735881106 seconds)
  done (took 39.848014682 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737827086 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738930968 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.734108217 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736818724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.734578116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737501956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.738090642 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737837374 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738467576 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73718773 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734070462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737532207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.735395185 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735257843 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734664927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738001651 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738356483 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735645188 seconds)
  done (took 32.928193864 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.735863143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.735397568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.739808313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735578252 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.735795506 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.738250108 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736661381 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.739761893 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.739221915 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.736279011 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.739369212 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738698652 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.738288434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739202854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738019518 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736843009 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.740792039 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736378789 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738069134 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738704365 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.736933521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738578306 seconds)
  done (took 39.900294534 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739756531 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.739307057 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.738846135 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.735583132 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737572192 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.738421534 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.740317771 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.736763632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.740487789 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.739235521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736168693 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.740734223 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.73905426 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.73913951 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.738447555 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736282371 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.739409397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.73899002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740300284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.739569744 seconds)
  done (took 36.442582728 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740946342 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739070047 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.739387881 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740487423 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739323923 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740024896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739048806 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740868027 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738960415 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.740439303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740910949 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741270547 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74090506 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739077808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739835991 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739871104 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740693308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739508099 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739897411 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741312682 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741435995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741630418 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742173856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740383336 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740092874 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741142143 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740986536 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.741022803 seconds)
  done (took 50.400777056 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742288424 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742051113 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.738596554 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74028168 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.740947046 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.738188377 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.740358906 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.738660391 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.743040783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739368228 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.742156194 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.743772863 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742912038 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.741758024 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742435659 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.741928969 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742531187 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.741302831 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739931684 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739115169 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.744013617 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744625132 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.743433872 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740770252 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741094537 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.742035252 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740650663 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741107211 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743303825 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740743925 seconds)
  done (took 53.91488852 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761774638 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761865843 seconds)
  done (took 5.194688313 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.741526998 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74387912 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.74409839 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741690881 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74038179 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744244317 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.745009661 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74150368 seconds)
  done (took 15.615233131 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.74123547 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744854029 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.744183658 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.74431196 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.742466954 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.743726441 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747308626 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.744620929 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.744076702 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.743006445 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.749367406 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.750570172 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.743801508 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743417389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.742328244 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74481535 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.744490628 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.743697087 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.743108862 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744720833 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742753985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744621315 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744806966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.742055031 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.744707263 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.753585192 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.746698038 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.744047911 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742716235 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.746490734 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.742808628 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.743457964 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.744119724 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.74411268 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.745444015 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.744255042 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75274899 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744683315 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.749325078 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743735721 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747458894 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.743124028 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.745638397 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.746126205 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745561197 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.744943633 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746163796 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.74469597 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744472014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.749103592 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.75255473 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744598458 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.743547312 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749634153 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.746019541 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752149102 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.744984744 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.748098813 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.754030833 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.754896786 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.75672166 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.753019399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745363375 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.746420296 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754845566 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.769775051 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750480267 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.743552279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.744320337 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.746904461 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.750210279 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759030008 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.755768733 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.747171351 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74601442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746870982 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74613208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747443995 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751492129 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.748089469 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.746615945 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748157907 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756259561 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769902748 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.744800822 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.747471062 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747497558 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.749431034 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.748352886 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7568809 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.748339813 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.74744853 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.745786659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.746741755 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.747275159 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.747571458 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.747636614 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748182148 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.747374651 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.749074138 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748885097 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750735344 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.756500283 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747652943 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748875057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.75401553 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.748698461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747336269 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.753481277 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749130929 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747466586 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.749003326 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.753853838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747240888 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750610387 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.756998469 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.747023182 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749561026 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.749127799 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.748541209 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757936664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.776963197 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.750339009 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.751369452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.753699703 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.761699856 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748198496 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.750512519 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751288099 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.747616488 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.747627073 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.749141307 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.750983074 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.750616616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748831361 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748357927 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.747942801 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.750020341 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.749595427 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.750443618 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.750503163 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.749900925 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.750945849 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.750221325 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.75156973 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.751036157 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.754659423 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.748428116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.75066444 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.75057725 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.749536058 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751353639 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.751849595 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.751884888 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749357451 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751450835 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749754 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.751907134 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751843324 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.752761542 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752815374 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.751813384 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75464869 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.750714279 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.753564556 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.75071256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.749101549 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.75347505 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.753781573 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.749488009 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.753514168 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.750447067 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754691581 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.762630732 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753172297 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.751498252 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.753706396 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751790158 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751538754 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750892259 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.75409304 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.759222565 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.752164684 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.756532491 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.752322335 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752169696 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.752994475 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.751563179 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.751600861 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752107601 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.753641748 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.761613611 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76497125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761570465 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.752029746 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.757300996 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.752238116 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.755510695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.754705058 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.753197343 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755167859 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755065294 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752850641 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.753505909 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.753502375 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.752726051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.751924967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.756292597 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.754325921 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.754218145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755047099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.752757926 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754525299 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.753840225 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754375128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754608807 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.753478837 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.75225504 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753540942 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.753587493 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.755193583 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.754309251 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.759029614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.751967884 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754124036 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753981677 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.754161231 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.751620513 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.754806434 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755390764 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753834112 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758772258 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.753905646 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.753649485 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758905604 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.753575352 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.754330868 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.757037592 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.756280839 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.754137294 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.75853578 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7666185 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.75585041 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.755569925 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754261289 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754981229 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.756857064 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.762121183 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.753747243 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.752995161 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.756722726 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.755307595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.754182503 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.755386886 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.756296173 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.754767266 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755871608 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757650117 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.757377717 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756723239 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.757682639 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.756134612 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.75535979 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758369077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.765451562 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.758753181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.755786249 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.757427822 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.756774162 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.762849632 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.756777839 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.756551596 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.756511331 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76839253 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.765541055 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761530005 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.758343406 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.75748951 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76036251 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.757411552 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.76089235 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756376195 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757243395 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.75748462 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.75628149 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.75606932 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757912235 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.758832204 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757129585 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.759363804 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.761059946 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.759457006 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.757398547 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.756721835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.757768866 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.759327738 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.756252649 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.759278093 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.759099315 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758132178 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.756395752 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.756363174 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762700256 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758928525 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.759685503 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.758502704 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.758320355 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.75759567 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.759182752 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.759269274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.760985464 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.766290126 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.760421066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.76925979 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.759980968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768682242 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757974999 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.760216198 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.767655819 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.757253917 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.75947389 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.759193543 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.758801063 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763804571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.759663562 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.761955332 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.764241394 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759260362 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.760921061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.760664635 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.760138772 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761708371 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.760041634 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766753341 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.760218469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.764049083 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760821389 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.760132432 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.761398736 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.761721417 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.759205095 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763861191 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.760335014 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.761707212 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.758988635 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.760615936 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.762008464 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.760090677 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.761297751 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.759991193 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.761951553 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766754351 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.760847848 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76574828 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.761793961 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.76869824 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760551505 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766193257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.760761987 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.761578235 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.761597466 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.762701698 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.761407965 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.761628807 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.763312675 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.761861965 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.762808279 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.766486706 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.76205761 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.763365151 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.763071409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.76335712 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.76317269 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769949197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788711258 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.761738856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767840293 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.760460978 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.761957146 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.766445907 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.762381661 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.761897318 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.764058488 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773883615 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772143953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762072478 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.762901787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763258297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762430801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.765872594 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.763823589 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.763110326 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.764519842 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.763357657 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.76344503 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765099286 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.764325058 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.762132678 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763540982 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.762924276 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.773790033 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.763694914 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.763267829 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763398598 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.766176692 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.763057372 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.764547366 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.763640367 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762825596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764686615 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.764846755 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770463967 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.769822656 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.766544885 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.762239069 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.764229291 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.764975538 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.764806403 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76480172 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.763517785 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76523148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.762592815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.76434154 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.764884485 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.763075984 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.765297327 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.764641457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765280203 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767035877 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.771346343 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765074009 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.763202796 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.767128316 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765756178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.763334394 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.764717967 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.772857061 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767727911 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.77626602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.774632949 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.770702169 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.764299118 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768262952 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.774662579 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.763899676 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.76537875 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.766630187 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.766575055 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.767331706 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.769972437 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766775157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.773139644 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.765312567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.764442572 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773412584 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.767350569 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767735828 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.769077961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.770385025 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.766375738 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.764262632 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.767935145 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.764792961 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771785913 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767149841 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76682964 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768084746 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.764783617 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.767447369 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770559803 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768514036 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.768471677 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765484226 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.767716645 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767710459 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768196339 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.765299245 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.765394394 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.765526186 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.770694368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.775344358 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.7663259 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769121664 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.767534339 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.767746918 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769092331 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76998594 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.76645011 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.766362592 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.767103988 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767585633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.768597109 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.770205908 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.767809037 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.767466086 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.771384295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770735131 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769752767 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.778668719 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.77832674 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.765103821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.767926476 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.77012221 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.771397013 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770377599 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.769915071 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769630508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771778379 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.77031094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771474278 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.771165818 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.770742592 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784025964 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.768923707 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768158871 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.768692332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772592003 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.769976567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.767066548 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.770702903 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.771137899 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.771584609 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.778593278 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.769588604 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775106656 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769749891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.770145583 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.775350816 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.772306718 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.777535659 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.77241428 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768957079 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.770565106 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.774741077 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.786603669 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77032472 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779745941 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798024957 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.77069156 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771144783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.770432902 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768870759 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.770703614 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.772089609 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.771203423 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.772201327 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.773258783 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770059544 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.771760703 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77615657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.771447729 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.77113248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.769527866 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.770183365 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.772979562 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.769808657 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.770516165 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.770928827 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.77241497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.771636839 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.770699153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.770370501 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783054427 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.78015323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.772012896 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.772381925 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.768765753 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.773177998 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.774940009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782419092 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.783014937 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.772527412 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.772901163 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.773036683 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772987683 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.77188863 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.772368453 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.772057531 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771613266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.770528508 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.783508135 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781621831 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.775152295 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.771581715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775051031 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.774792173 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772558216 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773835363 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773986086 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.773920397 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.77317887 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777350096 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.77400947 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.774820345 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.7764009 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.784339977 seconds)
  done (took 1050.555509541 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773033342 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773194491 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772863235 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773149751 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772793106 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773140038 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773231364 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772940913 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.772634412 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773639663 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.773160441 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772278165 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773984815 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.77349178 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773843613 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773453378 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774700619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.774243626 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.774972222 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77290324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773952037 seconds)
  done (took 38.944970633 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.778532538 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.773375311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774231805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775821326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772833198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.77694619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773602176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777374975 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77595191 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77353763 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776843388 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775447124 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.773622073 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.773953174 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773720327 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776575824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776936763 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773011326 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.777326492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774456105 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775958504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773209892 seconds)
  done (took 40.758457838 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.776107588 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.776209259 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.774375281 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.774697971 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.777146224 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.774832399 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.777613504 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.776943356 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.778774985 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777193604 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.77561302 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.778681106 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.784049109 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.784237403 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.777778555 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.777145592 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.922970175 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.777005938 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.77724621 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.777748198 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.776262261 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.781459521 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.776794372 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.776126546 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.775923649 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.780364336 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.779654235 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.779612434 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.778071279 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.77848131 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.783090464 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.779808826 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776813304 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.778539062 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776706693 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.779680893 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.782316503 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.778666426 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.777135847 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.778428775 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.787238432 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.800236073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.779146486 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.782340841 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.779630403 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.780079765 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.782062822 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.787015767 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.777764105 seconds)
  done (took 89.031692691 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.780081045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779020867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.777290222 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779148786 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.779156404 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.779195951 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.779214342 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780533421 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.777226646 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.776524271 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.778900308 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.777782979 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.778628505 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.781148508 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.778900836 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.777978135 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778183199 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.775991155 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.777104835 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778448684 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.77824715 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.780890288 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.780019607 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.77732874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781498971 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.776619778 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777865874 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.779807918 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.777133166 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.777675288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.780988487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.780448597 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.780820595 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.777336764 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.777559081 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.781782818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.779511843 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.777964099 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.781583252 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.778677113 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.781415925 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.781325829 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.782021633 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.782476948 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779491455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.778617634 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.778192749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.780496909 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.779124281 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.782059379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.781154275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.779014735 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.781190328 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.778321381 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.783227917 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.781393221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.780966675 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.778838648 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.78354085 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.781456212 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.778975987 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.782375487 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.781108797 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.783018494 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.782317758 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.780703264 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.780405648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.782621933 seconds)
  done (took 122.728493517 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783087376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.781551773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782802709 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782510346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781154897 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.783158806 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781787299 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.781957328 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.780827431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78312659 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783083446 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.78440347 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.783426538 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.784452494 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782351699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782252882 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.783735164 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783403269 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782742023 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78287623 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.783115991 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.782002834 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.783057912 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.7827782 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.785076358 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.784047121 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78317749 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.783757129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78478207 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.783886006 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784271808 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.783035806 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782809423 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.784531405 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.784643824 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.783911645 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784458972 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782557005 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.783083686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.78308906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.784346943 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785223654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784890353 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.782825685 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786241511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.785172854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.784633073 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.784089073 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785559506 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78380821 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.784551664 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784103777 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783922217 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786593113 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.785997913 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.787258445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784610281 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786218415 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786019203 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.785205961 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785086629 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.787897527 seconds)
  done (took 112.312722128 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786557124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.785647771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.784524192 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.783479511 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78682726 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784249774 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786569361 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.784765317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784795023 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.787208123 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787239081 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785298638 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785277473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787337373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783087515 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784102791 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784744027 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785079001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786628034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784037899 seconds)
  done (took 37.421738452 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.786028276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788297446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.784254182 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784666725 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.787653228 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785252843 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.787179283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78747805 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786298509 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786294656 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787871817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78827202 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785194951 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785129633 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.789091859 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.783932739 seconds)
  done (took 30.296778318 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.786089895 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78964402 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.787142664 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.787007687 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.78623618 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.785263084 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.789261995 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.78566838 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.785921036 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.789167474 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.789330959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.789258716 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.790260535 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.787769619 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.786441963 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.78836157 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.786591274 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.785623065 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.788890471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.787940012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.789042927 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.786409614 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.789029437 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.7885069 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.787175129 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.78820379 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.785927875 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.787316756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.786176601 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.789274905 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.787978506 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.787492136 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.787197627 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.788921953 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.790264185 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.788421958 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.79073137 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.789436536 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.790485241 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.791760625 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790024397 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.788453029 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.790663379 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.790343378 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.789040894 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.790190246 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.788329467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.78828308 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.788255771 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.787436202 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.789603942 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79077065 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.789796023 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.791839906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.790163936 seconds)
  done (took 100.083393943 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790387215 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790378754 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787648292 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791464772 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.791048905 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.789541987 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791421175 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.789022985 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789236885 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.790575923 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788983511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790733276 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788272303 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792605209 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.790801906 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791402771 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790294609 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.789163602 seconds)
  done (took 33.941978115 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.791190218 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789514529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.792626365 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790697843 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.790254359 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792313603 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789101577 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.791424525 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792380514 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789792713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789477997 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.792889299 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792822426 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.793861729 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790665875 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789785659 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.793380955 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792806163 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.790304617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790233376 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793438517 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793305484 seconds)
  done (took 41.13137233 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.789709679 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789562452 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.807069961 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.81301269 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.814220341 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.82647109 seconds)
  done (took 12.560073351 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793171191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793788653 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791268622 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793124361 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792912434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78997451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790630208 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790691434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794069554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792149133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790282925 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793559213 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792631017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791098685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793178085 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794704183 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791086588 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790866578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792891886 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792404226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790965729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795092478 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789898879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791088484 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791490189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792360284 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794459783 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791447543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792058106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794846837 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795182745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79216614 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795554799 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791842206 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796904246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795071905 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792495852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795562961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795054335 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793129431 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794721178 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793876135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794811775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791901515 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795057436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792914552 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793876312 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792525374 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791946039 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796370156 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79535137 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794834027 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795042585 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795503511 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795390247 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795420728 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793372769 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793364686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79676394 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794214091 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793157241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796075824 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793828698 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793495962 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795703698 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794325502 seconds)
  done (took 120.086434184 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794344671 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793276815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795364512 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794242705 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794091983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794200371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79487949 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794252022 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793901984 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795102676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796489667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792974393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794936628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797103574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795041295 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794024355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793994653 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79466024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794750007 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796273169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794979731 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793634434 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795294875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794805154 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796562805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798301187 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794938553 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795731169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796246817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796149141 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796311787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79662961 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794538443 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.795600731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795208132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796323647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795359476 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795955469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79668693 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797589576 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797287251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797131035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796048316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795568944 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796660181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796534897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79559642 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795451604 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797795811 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797064527 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796083929 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797137775 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796718783 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796299702 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797495855 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795403317 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796472644 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797108073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796774308 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799626675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796147296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795654323 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800194096 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799011869 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797131617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796625689 seconds)
  done (took 120.255311363 seconds)
done (took 2449.30021273 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.802701318 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.892266404 seconds)
  done (took 15.421607388 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.959079611 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.912780992 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.796285277 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.801502809 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.794404395 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.815277483 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.793820506 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.794916265 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.796161009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796692093 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.796453417 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.984887893 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.802635411 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.794396673 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.795518196 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889122908 seconds)
  done (took 51.054454445 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.799200493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.800528766 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.811432692 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.80013892 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.801113122 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.814282418 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.833950333 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.804167971 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.835578296 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.810449838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.877080975 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.808366578 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.799374512 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.849100261 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.808699486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.814965285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890239827 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.87532572 seconds)
  done (took 34.562608665 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.879164411 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.803380035 seconds)
  done (took 10.418305046 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.830661428 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790805396 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.808774686 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.795820887 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814377868 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.80031512 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.824421275 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.807350593 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.818263317 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.810778398 seconds)
  done (took 69.832033636 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.806482007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.803180483 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.803239474 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.800267787 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.794501091 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.796599264 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.8016015 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.797745269 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.484789281 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.834079349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.809643055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.808245104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.801164641 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.80484882 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.803453709 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.826129053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.963103848 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.80147301 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.803742225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.807946364 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.803894984 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.856196546 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.815310998 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.805980261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.833718533 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.48821341 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.808750919 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.809031781 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.911451997 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.801254513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.802654629 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.803998562 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.805357067 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191580543 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.132952028 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.80175482 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.808886996 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.810471769 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.802949546 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.9243263 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.802896118 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.809362025 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.794499969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.110285917 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.89049046 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.848266937 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.167537023 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.80480079 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.80355817 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83465913 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.807580826 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.803553665 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.816020018 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32675109 seconds)
  done (took 129.124958985 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.800672401 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.09826256 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952680902 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.800459286 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071601349 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004212224 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.797776092 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84894577 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.79959044 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005506098 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965585169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912069949 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.798503002 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.797551215 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.795677191 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796180938 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961499993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.869319123 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.796644774 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.796654282 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828723443 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010824379 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.930151772 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.800852828 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.820124705 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013285819 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.920325133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.912973952 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.08925756 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.798473832 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867360911 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.798831052 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.801562053 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797228345 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.957657476 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.898673953 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88927819 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.79943631 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79870834 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79901183 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.465661233 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000194252 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898295054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.944573541 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054682371 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006345937 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.447496066 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.799917714 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.436942306 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96378979 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017062404 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0124946 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923903079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.803540812 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.162486307 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.800664117 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.800458441 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03746095 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044246988 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.906062061 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.799782866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802182812 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796840401 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046858025 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801221095 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896411511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800284208 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.798771179 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901558415 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903970056 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.049817559 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017036614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.833632218 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.100960409 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.273306668 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019392093 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870280935 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034260359 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802242443 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799538418 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888433297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.554729334 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.965188373 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053102889 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.02297375 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83596331 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.441044492 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.802148298 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997007759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987720606 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996610208 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045878673 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95657848 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.001843898 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.802653693 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.801598363 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.007682951 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939744438 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.804124023 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.160713495 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036585084 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.365680686 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.834267976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100237149 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9367237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.170628508 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.430446119 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802252731 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972955134 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.844656385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.803904101 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803226374 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.994182375 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.613596594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800588615 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.327461486 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.86760001 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.803576619 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006201241 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805156284 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014785557 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803061223 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041405257 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.85485201 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837411242 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.047571062 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.048112869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.597422368 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.053500035 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.047474488 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.922236129 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0265726 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.398482913 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805391914 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080793391 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.803765392 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.804345314 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.973483755 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.80556139 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041618596 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807540094 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036634543 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829454275 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963281547 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806819568 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.045241311 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840154487 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859292007 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805677515 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937443424 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807484129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.690751969 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.9599787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807573012 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803254405 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.490363248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.804478849 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952583872 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.037829537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83082534 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87645401 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.332326567 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804856794 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90063591 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831800751 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.555951295 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.806886709 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965418813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.747861516 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.243119539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.807564837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.047377071 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.990043113 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.810448316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.805651336 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.551716375 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.500085029 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806311445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.966244019 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.542991571 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.4631505 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012254089 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807123928 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934793389 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.806043294 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.884486369 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162961864 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804939475 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.805835434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.80664253 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.805689428 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.807125166 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08974776 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.83628111 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.331933171 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.944850574 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025874183 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.115294174 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.030547504 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854391762 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811031364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053437217 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807998385 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.872008845 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.807663919 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834477024 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040833763 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80868119 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021885048 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061851612 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.758524438 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859469142 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.809130161 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808045157 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.804058519 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962125779 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896339395 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.806001734 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.807013446 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.914114394 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931364159 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993039822 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.396191956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.990901051 seconds)
  done (took 884.41276885 seconds)
done (took 1196.552772269 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.799034425 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.793006136 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.785115593 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793476242 seconds)
  done (took 28.902426851 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.801049829 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.797278581 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.799310971 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.795266009 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.799165238 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.795756988 seconds)
  done (took 12.515150237 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.852890486 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.786612588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.790534693 seconds)
  done (took 21.155574117 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.865581864 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.197791598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903616836 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.234742401 seconds)
  done (took 9.923853979 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.798270284 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.793328422 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.792969652 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.794682294 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.795536022 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.796599493 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.79498717 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.7939906 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.795578054 seconds)
  done (took 17.877857076 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.162273312 seconds)
done (took 96.27113299 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.654772572 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.871425503 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.480418373 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.443612939 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.190744818 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.882132721 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 5.604476078 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.363336944 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.04213804 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.325654203 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.857812568 seconds)
    (12/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.276922586 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.844129445 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.615881008 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.869592358 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.806068186 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.838589784 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.857922436 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.451383327 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.798571186 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235293159 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.11795962 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.992706319 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.053807651 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.795296723 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.901445647 seconds)
    (27/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.017703106 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.895643898 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.808198477 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.112905442 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.48612522 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.222689561 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.91488192 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.940725557 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.880624776 seconds)
    (36/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.35179231 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.104721114 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.960039478 seconds)
    (39/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.18386415 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.792411593 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.053253117 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.377696475 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.112651408 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.928015658 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.967914462 seconds)
    (46/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.944865097 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.089688711 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076792536 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.876318777 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.713457739 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.316905462 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.86834873 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.149032502 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.938932274 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.310650286 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.907374898 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 6.810182549 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189294904 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.941455599 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.050625153 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.899972626 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.988091476 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.689503935 seconds)
    (64/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.913433277 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.04041661 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.877846248 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17966244 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.133093615 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.815190286 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.500346518 seconds)
    (71/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.803927018 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.750475324 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.974925526 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.873403582 seconds)
    (75/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.904861102 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.767144742 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.105384058 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.828288579 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.82437865 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.988237247 seconds)
    (81/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.890764039 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.163741549 seconds)
    (83/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.875898659 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.119662436 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.146373009 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.148108501 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.301298946 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.809573656 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.875003056 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.522420018 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.903535598 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.059489568 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.80953937 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.345121813 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.696207676 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.15485551 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.907191794 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.268391181 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.940528804 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.102442231 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.813939423 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.79806825 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.012806683 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.878211279 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.880534015 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.30537065 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.900031532 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.989034087 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.793267361 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.915182789 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.089506429 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.795011602 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.862191318 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.822787199 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.773953233 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.900770244 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.982979963 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.771522539 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.595466176 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.236043285 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 4.781528815 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.813151342 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.760088851 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.066255568 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.002101901 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.814698044 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.003529798 seconds)
    (128/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.040485121 seconds)
    (129/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.851830743 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.070692283 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.985424199 seconds)
    (132/309) benchmarking ("sort", Float32, false)...
    done (took 5.543168332 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.890216252 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.803679469 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.109199618 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915929062 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.92610209 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.878180726 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.501686526 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.022776628 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.03559608 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.797806214 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.476558512 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.832479686 seconds)
    (145/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.981159237 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.078241227 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.129011759 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.811570004 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.863536195 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.829214635 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.970121724 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.395783291 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830222818 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.004091448 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.977714924 seconds)
    (156/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.966785484 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.081703148 seconds)
    (158/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.821191357 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.24866634 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.13606061 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.799523829 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.119812196 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.300362834 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.083443516 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.942280745 seconds)
    (166/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.97138893 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.908279087 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.287705868 seconds)
    (169/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.805083719 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.164215197 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.706632999 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.852355698 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.146163418 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.394100564 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.823557627 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796675865 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.196397977 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.179119943 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.703794137 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.834028307 seconds)
    (181/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.081715299 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.794348139 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.580986271 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.839646915 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.782857149 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.038656484 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.770155517 seconds)
    (188/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.967844547 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.950097586 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.406915415 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.001878271 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.829883272 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.859850594 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.942356484 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.154648706 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.469295875 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.785145044 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.48722576 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.933910905 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.887055604 seconds)
    (201/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.879286911 seconds)
    (202/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.429422159 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.934027586 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.933298354 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.98910659 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.00139166 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.010789165 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.597890957 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.829483874 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.054267351 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.803259054 seconds)
    (212/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.087420429 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.871003071 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.926522504 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.80384023 seconds)
    (216/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.844405694 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.827553102 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.310681569 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.378715204 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.117135501 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.816561217 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.112023367 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.901408352 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.133985653 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.513640554 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800970259 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.833978146 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.875974192 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.017007551 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.774818559 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.732667128 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.099364367 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.911374753 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.750659455 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.256961883 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.80417251 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.856220155 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.946135667 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.865199245 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.294948368 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.708909068 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.808438332 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.980706038 seconds)
    (244/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.937519111 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.834918977 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.802483769 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.904677302 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.450797529 seconds)
    (249/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.814502281 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.492156803 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004382299 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.846345831 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.970881506 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834849997 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.904551635 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.399684825 seconds)
    (257/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.803679894 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.244692042 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.830180379 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.604873925 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.095371622 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.792217267 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.837991621 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.196783042 seconds)
    (265/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.805090928 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.959500209 seconds)
    (267/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.62491444 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.809885835 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.241252245 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.409837598 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215287149 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.100708367 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.905117655 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.144516568 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.916828493 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.892942791 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.023954824 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136924001 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.786224827 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.031563336 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.785862969 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.827871635 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.906180871 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.185013107 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.902764735 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.886267708 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.720787036 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.950751118 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.105709229 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.420763809 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.12651626 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.585837379 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.797677284 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.010694782 seconds)
    (295/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.877146777 seconds)
    (296/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.632688899 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.432895864 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.84204614 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.075619119 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.787837148 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.002165463 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.772181031 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.82037426 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.774324885 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.493566698 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.870982162 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.902407897 seconds)
    (308/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.074297696 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.769156812 seconds)
  done (took 997.254696754 seconds)
done (took 999.072720902 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.812768403 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809190181 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.79112105 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.813082657 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.903871417 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.826499805 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.802775543 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.794527855 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.840153908 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.840611365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.791859532 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.826969528 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.794182095 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793060159 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.790841319 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.803070131 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.107483332 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.811912567 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.80296267 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.793223082 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.801683564 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.784130821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.834726855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.816812776 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.787302065 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.786945635 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.788322523 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.807757148 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.892330266 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.785341158 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.784749083 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.792005645 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.088860506 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.809535202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.775639765 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.800140114 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.792791814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.790851423 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.787318954 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.811022522 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.22588168 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.782508856 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.779832042 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.779125469 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.781496691 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.78001964 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.774941367 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.783302954 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787498987 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.789431902 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.2180656 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.793523529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.776270722 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.774287126 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.783355499 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.776100479 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.778300996 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790271761 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.794112365 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790373542 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.073149961 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.803944322 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.775856681 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.791520937 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.781923856 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.254597251 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.774001693 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.778507075 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.221263149 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.783456166 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.257046476 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.78863176 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.775592901 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.78856758 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.80677208 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.083901206 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.794665263 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.773615462 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.783992181 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.775336424 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.785080883 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787943716 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.780012604 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.776541477 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788446308 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.80958718 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.78690565 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.777885807 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.785843145 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.794989098 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.784710687 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.786682431 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.780085217 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.772672622 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.78514541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.778894378 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.780204992 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.778169119 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.78105092 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.785402914 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.221578428 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.797346574 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.774729967 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.772933028 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.776181139 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.79190256 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.221396056 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.781790137 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.798417402 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.824288507 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.779350736 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.073524161 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.804871024 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791303676 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.785450763 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.780237573 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.773586582 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.075965121 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.246841357 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.796730479 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.780466901 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.777921132 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792813823 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.779993758 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.773621564 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.084110312 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.804945047 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791392092 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.896870423 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.787026457 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.809476036 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.777307572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.781183131 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.811579219 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795549962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.811577057 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.782324465 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796218197 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.798289737 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.775391132 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.791433602 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.786752432 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.780634831 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.786312733 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.773414082 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.812702507 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792626484 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791633858 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.800846217 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.900990582 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.77784523 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.076550248 seconds)
done (took 280.236179132 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.844578447 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.767709321 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.873099119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.777628984 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.859966917 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.859248209 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.775122925 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.775078436 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.776039687 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.151291621 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.774436861 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.775697441 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.768085882 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.776307337 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.859820124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.775910724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.775415367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.113034329 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.776844553 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.847662946 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.769377678 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.776369316 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.778217617 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.157706113 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.768306569 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774845397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.847785045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.779223949 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.122632943 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.776491801 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.774173462 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.123594289 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.867971097 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.797644447 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.788775033 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.784093989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.862152572 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.78101518 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.859299687 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.857329619 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.873683681 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.817333332 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.771205223 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.769951589 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.784416304 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.775331016 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.776352623 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.806201211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.774795603 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.777298378 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.11541058 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.788350666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.787335341 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.774861377 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.778773093 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.801480191 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.777919814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.779104705 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.869702475 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.779626588 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.838961581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.15799453 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.153434376 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.780754397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.771291583 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.77540822 seconds)
  done (took 178.110712018 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.845996705 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.860723814 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.846956776 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.780026624 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.82782994 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.849324621 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.77895746 seconds)
  done (took 14.49461923 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.784955147 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.780971355 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.828819259 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.828969126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.778865499 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.931368224 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.223098866 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.79069089 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.77888706 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.831908978 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.779891681 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.781419519 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.788655497 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.773768691 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.828884149 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.792959804 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894946694 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.780221706 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.779371713 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.933770156 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.77921716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.789160052 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.832294448 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.791730572 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780444653 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.784359333 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.378219988 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.78088436 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778454245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.781767752 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778059562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823450246 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.780239364 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.776617048 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.779124791 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.893832083 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.780665809 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776959608 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.78255776 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.77159094 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.782708305 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.781839125 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.783277958 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.778960768 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.782840117 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.803094834 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.78157953 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.783150385 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.778915324 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.782247379 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.833918113 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.776093219 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.774580346 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.773661446 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.830608363 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.790929353 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.775705904 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.770901263 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.775674368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773686507 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.928005822 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823627245 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.770932952 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818643801 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.771847651 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.774862803 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.777295327 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.771134432 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866077712 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.773420165 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.818526097 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.770378423 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.932025117 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.793348592 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77191548 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.77258797 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.770622217 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769080129 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.765095379 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.774431884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.767262774 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.770202075 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.776046793 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.76772367 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768628351 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881169202 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875934271 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.768583078 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.783274173 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.775719625 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.767148198 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.823995887 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.766205268 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.764378544 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819764424 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.88281257 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.823384996 seconds)
  done (took 197.131733668 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.770890023 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.773010567 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.767828641 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.779484773 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.766867409 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.768081843 seconds)
  done (took 12.322269778 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.767633702 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.769174064 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.766043588 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.765203472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761965808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.762320458 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.76453236 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.767926259 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.769396045 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.765632826 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.767950348 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.767234995 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.768994904 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.764132854 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.766463589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.766485881 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.766417933 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.763553648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.764768799 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768728918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.91761186 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.764236731 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.769254387 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.767407474 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.771982555 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.767274803 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.775341235 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.769419556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.76570479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.772423908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.771420333 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.76847117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.767905939 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.771161349 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.772185092 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.763114265 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774385479 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.76860936 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.765942773 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.770247705 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.76805915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.766510797 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.768548516 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.765160194 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.765866618 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.774142392 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.773291079 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.774265418 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.769525071 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.77024552 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.769011562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.770431753 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.767080818 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.770394941 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.769089117 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774418929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.77558843 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.767863866 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.767782297 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.77065931 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.771606631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.770639786 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768540223 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.772213687 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.767354951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.770023612 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.76879734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.772764919 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768167726 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.772523969 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.770334751 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.770134629 seconds)
  done (took 130.193968872 seconds)
done (took 533.970994335 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.050706053 seconds)
  done (took 8.744120821 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.826598842 seconds)
  done (took 8.624742515 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.330256932 seconds)
  done (took 10.025922621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.779070856 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.771086784 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771815031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.758340946 seconds)
  done (took 28.787105569 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.871654731 seconds)
  done (took 8.567233961 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.778137505 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.760132544 seconds)
  done (took 15.270754196 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.786255925 seconds)
  done (took 8.479975423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.175359317 seconds)
  done (took 8.868254535 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.772071258 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.759478969 seconds)
  done (took 15.235964437 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.732809849 seconds)
  done (took 8.417941168 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.418412532 seconds)
  done (took 11.114728059 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.756254043 seconds)
  done (took 8.457180751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.77360723 seconds)
  done (took 8.458974826 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.947356967 seconds)
  done (took 9.632892379 seconds)
done (took 160.378945014 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.74971448 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.747422681 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.747490237 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.747226413 seconds)
  done (took 28.677135029 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.788971692 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.788977463 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.790186851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.799687378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.791291516 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.789507607 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.781606555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.781351736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.800371023 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.792858736 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.792466096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.792192207 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.790028865 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.781211326 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.791165231 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.791180083 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.801254032 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.791571965 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.781891326 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.792712842 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.756462157 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.801172749 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.792851594 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.757228829 seconds)
  done (took 44.604507569 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.953150474 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.826389255 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.908410036 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.806235857 seconds)
  done (took 9.180592167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.809051694 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.810582521 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.822722354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.86146635 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.889404686 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.821158407 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.785230577 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.779556662 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.766660232 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.811709555 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.885861913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.827448299 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.906275802 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.757840937 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.944824381 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.758237382 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.757622259 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.810506419 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.86179179 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.875999087 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.759042507 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.809564339 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.814428319 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.827191562 seconds)
  done (took 45.441278694 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.757121711 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.765618968 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.763201714 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.757717228 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.757291701 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.759000766 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.764625606 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.758997164 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.778950322 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.758764104 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.757163262 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.758579467 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.756313709 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.75857541 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.75809786 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.770935272 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.772486593 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.758634622 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.76221974 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.763661095 seconds)
  done (took 36.92588868 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.749261908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605388687 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.102306427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.006939249 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.750033147 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.753356626 seconds)
  done (took 30.656565688 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.770552611 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.762676612 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.756410239 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.81353793 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.896826501 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.764963408 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.757735312 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.767510994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.803148128 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.824696831 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.776716136 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.786014285 seconds)
  done (took 23.17008077 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.752798662 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.753860397 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.753216967 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.770087315 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.768430161 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.765970356 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.764473079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.751108875 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.772174845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.776798462 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.766145603 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.770833879 seconds)
  done (took 42.860148121 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846750409 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.798380529 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.784594575 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441168751 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136181526 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967302131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285366961 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091542409 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.761060442 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028226592 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849637255 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863777602 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.012907815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251608309 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.791994142 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.228207634 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060866846 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976031704 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788397207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507471031 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832569471 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.955714686 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.588960159 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.827412428 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976776013 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.894622046 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.025691005 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.765621141 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904487639 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806661138 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775882144 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765594063 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040070535 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147892133 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873059508 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775841626 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38106428 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.481425249 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.751551989 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.56599872 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.589360097 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906173237 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779462204 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76939852 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703107373 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927020748 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144491165 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.775795146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.478946467 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.769554663 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77940337 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857663492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.772571719 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.584987781 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684193686 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.772821104 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.7661869 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772495607 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338102591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961612049 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.969066076 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.746456718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.860398619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526350818 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170004756 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.923672854 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.775379927 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775895884 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706127181 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.524889747 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829929039 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101578519 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.793190663 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423145605 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075162279 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.918466036 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716163167 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052476181 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.313270479 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.748798029 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000380225 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772522803 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708010233 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.809774218 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706595936 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055006115 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813579919 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.534966832 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817182636 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105552496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.785938085 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793824 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797382165 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997390312 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.655143958 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774501874 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.662194584 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91747488 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795644712 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107580304 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7106923 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.778774557 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028619205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.985686084 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.851033837 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.287414035 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936986368 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345320371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.830196665 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.929615558 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.826084435 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.05010037 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837750928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.959995077 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835109412 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.778843042 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106699 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373036731 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.920366804 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.89120316 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908690685 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.107754672 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81139938 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844223259 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781959025 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780040448 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608222877 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335403893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.781630478 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.781655776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.861320316 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831119171 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.780749515 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731279307 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.402688333 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.902176893 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.796194329 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004914578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363552556 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095974422 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715397883 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.109495357 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836633182 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.002525243 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.433342061 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.866604875 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042329491 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859326052 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.898174684 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831227593 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801615256 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879829607 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804641006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.934706146 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078501674 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.786148754 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.786449974 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625878996 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.823624166 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791520833 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.789931038 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.534396176 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068536539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812775082 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.793485958 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.674745202 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.800147317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850932413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790553099 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796278133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.325581191 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511846986 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.794194485 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.37297804 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010191554 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796322247 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.541399772 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90400452 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871076952 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067966766 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851309948 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.723331608 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.500070735 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.482083661 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789487142 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725316071 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.78902391 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79860441 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800570317 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.983165371 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071402918 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834433846 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.541824008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.835430316 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801897494 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.796228802 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790912904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.301547981 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979201647 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992967602 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840914219 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936081312 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.805747144 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725546667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.795801556 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797356954 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.792244864 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.791695535 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825057473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.550436427 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171477484 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056604424 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.400034761 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808942142 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.572418884 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.854456843 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.852595612 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691851391 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970960001 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.942693953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825646467 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.824866488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.571700923 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524575165 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380656953 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13134006 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128981853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265287571 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.046058357 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.845616494 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149704655 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750862233 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37154259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874841737 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159670075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761710222 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900784216 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.469714492 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169598739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830350318 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044832296 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211928135 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.619779004 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998424418 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027220141 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851045952 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.980046564 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781328225 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.337206033 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956619029 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.601526232 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033317209 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147259888 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.5640733 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.954108746 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.813788782 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.516987921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905130656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.531394037 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.93354435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.997830357 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.821257191 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301264652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.827008253 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041527707 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180807558 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.980800144 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.943265362 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756168532 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.826997712 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828356899 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.816117303 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.814809038 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.702635137 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.070539553 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828799248 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751695281 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.930224684 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119693744 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.739689123 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.825110367 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818502938 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144960362 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367860246 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99488856 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.925051257 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.340973146 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826682123 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.752524434 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753320503 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.510633949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825457038 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792956327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036483851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.925055003 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730749486 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899242461 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903507429 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075047291 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.8326565 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096706668 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099694023 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.534060817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846123967 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.919246257 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559184492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.939207395 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.820624335 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055549163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570170747 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047742545 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.859038338 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.7756743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.818191656 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035457517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820831441 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.792499987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067208221 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.543824285 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.82368595 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279852569 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910895804 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.801243554 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894214857 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.92433926 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842595956 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914674579 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84584824 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.84607199 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.846320636 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881327828 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793184506 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.972862764 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.848303127 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925931124 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.033129665 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.360164982 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.841168139 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11553107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195235837 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.176048666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898363913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837266751 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835904407 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770355509 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984506274 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061791486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10999288 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965476656 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.950990314 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861889662 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.597096724 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.062410399 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080705255 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111622949 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.731667405 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338052489 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.879542167 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.836632507 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847747958 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.048635445 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058876635 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151189194 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986931779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921199013 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.204084111 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11379778 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.838148198 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837579465 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429780126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.847639568 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65891925 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.890567721 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859992389 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133048953 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855050466 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236630439 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867927948 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.004814843 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.361048048 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640792679 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136684235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.838695913 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912279729 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126098203 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249428352 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16090532 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913102565 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856854924 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.944337931 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99308769 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.72822905 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84734178 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846295628 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894743194 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.556033949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856204449 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133575428 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161000901 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.843623037 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.729505785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869640132 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.856599901 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069632523 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130308597 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105450657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856251523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853700299 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.663029026 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130725594 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908712515 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781821923 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.850348758 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947345873 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099105831 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869845823 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.29986869 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.557823774 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133927264 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.849819845 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869112997 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.012585236 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229403452 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185207562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.386404281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066833124 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437883023 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42903561 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152774701 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.854309312 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.0022047 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154905981 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.852315926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.930640067 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890293421 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124825357 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165578966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.851191001 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748416605 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838223258 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.20660878 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426979464 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806294038 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875915888 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.924571295 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869039088 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995179898 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878365074 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.744249639 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023810678 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.656571826 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148595966 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.872289088 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.85729675 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.649513734 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.166860433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902863591 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009509107 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878469325 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.583751267 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.227458869 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124049951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940461574 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.875313917 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.871242387 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867752246 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854552021 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.063811817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.062208789 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150504229 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.982112184 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90795602 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871524846 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.08379317 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079320109 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.831354831 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020815435 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.949025518 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914610538 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.778514968 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.3768014 seconds)
  done (took 1648.768802557 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885884732 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.868675445 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.870861562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.871146457 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867957073 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912027051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.929762892 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957665953 seconds)
  done (took 56.966131743 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.866549583 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.061611035 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.875718419 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.866943061 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875542304 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.866283925 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.036881412 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.877950082 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.877645536 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.878320684 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.868418105 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.866789862 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.176563068 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.892381745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.867781986 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.856826525 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.876929833 seconds)
  done (took 74.294679816 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.869997167 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.959633077 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.900658436 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.891540939 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.831097958 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.874443905 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.641903483 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891479219 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.869870374 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.10129397 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.503157843 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.889391795 seconds)
  done (took 90.029293748 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.878023311 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.874833601 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.87404806 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.874699154 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.874325383 seconds)
  done (took 11.184229142 seconds)
done (took 2144.474079193 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.288229095 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.097904014 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.112469552 seconds)
  done (took 6.014004515 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.018565315 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.064960798 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.182874019 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.204432807 seconds)
  done (took 10.277680303 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.15626848 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.251185817 seconds)
  done (took 6.210416996 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.261701641 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.878483825 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.256632948 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.869514235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.870319227 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.871421662 seconds)
  done (took 22.421114881 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.874917107 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.877976797 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.875235001 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.877287379 seconds)
  done (took 9.309152155 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.854056476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.569689584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.854438812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.870045934 seconds)
  done (took 20.952583432 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.621063684 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.632906428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.619217334 seconds)
  done (took 9.678474899 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.505101459 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.779019251 seconds)
  done (took 9.08859609 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.134478227 seconds)
  done (took 3.939422548 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006872552 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.183348667 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.394063101 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.422798488 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.519895837 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.616379698 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.195912575 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.120016842 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287703873 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.324988343 seconds)
  done (took 24.877092252 seconds)
done (took 138.258069951 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.246141655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.108197598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071890637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.204819203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.095325041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.072482426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.079853946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.189301029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.714316126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.711689587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.204786288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.096101905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.241132621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.107324386 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.241846023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.107246479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09096705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.252975465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.900871955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.137023418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.084222801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.84302551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.047751894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.852679441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.094160611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.129616519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.418498867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.110522734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.052532239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.427407751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026125239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.289502056 seconds)
  done (took 173.057225571 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.636956075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871569098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.872648732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872132559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.176011086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873706303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.871699102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.872882984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.028397221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.050602562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.873483304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.164313062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87373264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872665311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.875154753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872373544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.179777161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.700148913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.887199477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.89235886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898424684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.115992181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902069637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.188421908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.256858886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.904471528 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.873912972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905106316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.87962506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883407077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888257261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873302165 seconds)
  done (took 207.69720456 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.873070307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.874332853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.874091534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873550728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.873592472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881353987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.874150206 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.873952325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.555190308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.556222242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.890872721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.880470581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.88381878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874119242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.881794585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87442556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.879453874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882852375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.883200141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.886344265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.891802087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.633449284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891691624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.632794284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.882979379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.883853557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874528053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.882982815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.883742568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.885106158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.883380752 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.876328088 seconds)
  done (took 220.860245545 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.080870018 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.885582685 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.886301562 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.843346529 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.886262232 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.88487007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.881135094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.075420147 seconds)
  done (took 19.719360702 seconds)
done (took 623.151059284 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.418652407 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.190314423 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.077454974 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.911101681 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.131639195 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.956703689 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.905216685 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.972130102 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.654210699 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.980287366 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.567246651 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.928015666 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.647653442 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.933389908 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.03506633 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.962602345 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.436597117 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.530274636 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.088727377 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.960069199 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.096920127 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.890439279 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.988471596 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.6556852 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.663704616 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.891366186 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.085608741 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.452182667 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.920017744 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.07700636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.646588102 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298612114 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.918533409 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.901730572 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95951808 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.939718114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257770595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.917751527 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.032066028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.646302058 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.94597543 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.526101872 seconds)
  done (took 103.814306202 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.875886889 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.873090079 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.872760854 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.87441369 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.876136798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.873732873 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.873942192 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.873731626 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.875270901 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.873473432 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.873002297 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.875157106 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.874981387 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.875241522 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.873528353 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.87392881 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.874994984 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.875369205 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.873915098 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.873167416 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.874290956 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.873342443 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.887984113 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.873477663 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.875338822 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.874917091 seconds)
  done (took 50.572193131 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.889229012 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.039374094 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.111043602 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.906543192 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.886479391 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.890448782 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.906355529 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.894942299 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.889535206 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.889864221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.984019637 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.897060537 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907539071 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117321791 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.903080429 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.889958799 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.8899455 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.88765054 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.045520909 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904304724 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.908811854 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.895820781 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.907436165 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.903098764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.89164539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.888948328 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.892066251 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.331777735 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.897847326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.984319008 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.983910954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.911243725 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.283610575 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.119490084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.957596924 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.898838728 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.890907716 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.987354791 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.89509178 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.889675193 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.908077006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.895498926 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.119483521 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.373941864 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.903462594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.891899794 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.344065192 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.997770902 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.930758209 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903544625 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.112819639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.907145247 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.893680746 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.890996419 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.926347574 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.900894746 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.888835288 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.200703748 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.90126993 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.90842988 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.898563151 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.890741762 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048119909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.898833599 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035200966 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.899148764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.896739331 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.890423973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.112628333 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90670152 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382589371 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90446596 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.89278685 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.985531741 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.042527812 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.363806453 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.903972136 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.048319938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.306601591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.915340055 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.898100787 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.318087326 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.919598895 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.89892575 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.895121874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.896099923 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.894517572 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.937694701 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.90895194 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318159923 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.387732901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.215885004 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.918588883 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.907505658 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.892167875 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.204081407 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.904141219 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.89511638 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.106345316 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.394039389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.906102408 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.899932221 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.365689467 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.907885391 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.911512347 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.899582768 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.115241054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.908088577 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.938566528 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.895519796 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.898129894 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.896215195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.911952636 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.900430621 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895088476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.367248087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.006485354 seconds)
  done (took 234.227489589 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.889373077 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.886917826 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.887710386 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.888279287 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.887121943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893248318 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.885913101 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.886271771 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.892950736 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.88709302 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.887572879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.889528024 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.889909103 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.886021401 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.931703324 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.895381038 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.498832309 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.889337638 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.886624882 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888836882 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.538669239 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.894309095 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.887452842 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.895261243 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.888579857 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.887012602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.892891334 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.923572128 seconds)
  done (took 168.061348418 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.896912897 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011831637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.914814918 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.922266487 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.905590642 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.895692258 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.918688031 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.911105515 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.899490738 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.895509528 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.895486485 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.956160163 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.908043776 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.000088584 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.927661027 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.928888915 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.00101886 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.907930329 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.895233423 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.895733281 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.924145491 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.892896822 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.956728988 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024519678 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.914921966 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.01351084 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.904437413 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898343909 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.89580429 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.015680619 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.91250067 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.959854332 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.924897284 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.91570037 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.017140751 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.015023566 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.006675243 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.930180847 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.901480996 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.89761074 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.896292651 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.884794628 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012170003 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.915857879 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.897783736 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.004649353 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.917467571 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.898987856 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.907306276 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.897281917 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.910050929 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.914373964 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.964561315 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028636375 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.932586654 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.923640565 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.922394094 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.167422292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.90762774 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998148298 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891930044 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018575898 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.919142316 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.88597339 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.901021212 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.904247442 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927809269 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.930897254 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005085633 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907524203 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997783082 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.935264105 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.906513421 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.897956846 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902081301 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016997041 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.016558296 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.937347372 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.935641485 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.92940322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.893515014 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.898691794 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.8876296 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.916669632 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.904719059 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.019601648 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.018507361 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910517357 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.901740707 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.902052107 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.901900464 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.924374409 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026016732 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.933906453 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997123643 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.969441366 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.972650762 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.914976272 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913626815 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.903734782 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.962939111 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.91557998 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.91263476 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.212972181 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970209028 seconds)
  done (took 205.594024332 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.37944558 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.956840993 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.95462874 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182927677 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317074416 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.759971849 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946040266 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950686181 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.97289765 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.109313597 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.009246605 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.96331744 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.934699337 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.921960903 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.949018016 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.968039188 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.954231007 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.250222765 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.06719928 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.108864028 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.929701187 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251365037 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.266980067 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.320214821 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.983784006 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.288685085 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632155039 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.195810152 seconds)
  done (took 62.361299399 seconds)
done (took 826.443225096 seconds)
SAVING RESULT...
DONE!
