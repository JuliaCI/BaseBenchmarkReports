cset: moving following pidspec: 15098
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.375159991 seconds)
loading group "string"... done (took 0.560884286 seconds)
loading group "linalg"... done (took 7.143947533 seconds)
loading group "parallel"... done (took 0.158982628 seconds)
loading group "find"... done (took 1.133179022 seconds)
loading group "tuple"... done (took 1.791951288 seconds)
loading group "dates"... done (took 1.274794515 seconds)
loading group "micro"... done (took 0.223497644 seconds)
loading group "io"... done (took 0.929081151 seconds)
loading group "scalar"... done (took 37.714290112 seconds)
loading group "sparse"... done (took 11.458174896 seconds)
loading group "broadcast"... done (took 0.906762613 seconds)
loading group "union"... done (took 11.95360712 seconds)
loading group "simd"... done (took 4.124273204 seconds)
loading group "random"... done (took 8.504323888 seconds)
loading group "problem"... done (took 1.858149077 seconds)
loading group "array"... done (took 19.903930687 seconds)
loading group "misc"... done (took 1.662781851 seconds)
loading group "sort"... done (took 3.133934783 seconds)
loading group "collection"... done (took 16.544919337 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486983855 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122854214 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114343288 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117979284 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144362152 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11428379 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122495304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08317517 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.805747591 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144703024 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118603251 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415148706 seconds)
done (took 5.123247477 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17397951 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086464282 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081692975 seconds)
  done (took 1.323033013 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065694585 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123986924 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066251408 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066928831 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066642355 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066297311 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065633186 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066336052 seconds)
  done (took 1.677161348 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074502946 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068459448 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068559623 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068171356 seconds)
  done (took 1.432304737 seconds)
done (took 5.837681735 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76369023 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200980193 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183087823 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399040979 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129640211 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154405717 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643496018 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314317016 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183883899 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081540734 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104306021 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.322914065 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106968625 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.627662089 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074378219 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09047421 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13730976 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426430327 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067722815 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082133146 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089290557 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128794934 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084998824 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074818673 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142995779 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067732578 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130494501 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080543097 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066340991 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208158037 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173017337 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668506524 seconds)
  done (took 10.200956943 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097685878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097463949 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068614912 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13630847 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095798475 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069486236 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070437893 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067040401 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086400284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127622014 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088251905 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100882618 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064743938 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068415164 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084275084 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203644615 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07960656 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081331927 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069962511 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075333996 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115922091 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077761201 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077775241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077454526 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12851367 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179264499 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09569739 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096522146 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06664674 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080180939 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114799902 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125256085 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065134041 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0661276 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123880191 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094028439 seconds)
  done (took 4.606912879 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.283316912 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1403972 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089689701 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131338771 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064930076 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107449953 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06559256 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08070478 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202912775 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.355888549 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579816174 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11126773 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10324909 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067439414 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068318329 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066873012 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345119572 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107013556 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103861999 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081142965 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069489515 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108329586 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067900017 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067701864 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063529648 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067416822 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100741547 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.326128755 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123218326 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067406863 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.921460721 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125435074 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06729322 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10083051 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169206583 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087279546 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272466317 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068267134 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064666166 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15020404 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070517688 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064306115 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069085276 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083900918 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103211336 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112507173 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06612449 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066275027 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161610611 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064901663 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079516918 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.985500759 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155044998 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065947208 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07566821 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064315172 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245378752 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086366123 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069522809 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063802832 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064536397 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185740553 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134860908 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067155215 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066255972 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067715045 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068625045 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352555524 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065683759 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.706794546 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069567103 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0769005 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069072968 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069350403 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072543418 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072241583 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084711693 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066038278 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075402604 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065748071 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065368097 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06648219 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083834609 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35812612 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066152363 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06844871 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064340637 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085843477 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096435929 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066318586 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064827247 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099655592 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.174706992 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066978311 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106202994 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066837948 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084162995 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069682889 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116255997 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067222772 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094476392 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065577427 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097415722 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069319008 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099244039 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080644167 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068294534 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399225179 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.0654799 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064766132 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069019843 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065750153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067100919 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066209896 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079409781 seconds)
  done (took 20.938233885 seconds)
done (took 38.178022326 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270763005 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075186004 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075046103 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075174148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075413672 seconds)
  done (took 1.813721107 seconds)
done (took 3.036749947 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120320469 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09869616 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064542399 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094967165 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064460355 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100190406 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098915334 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080404355 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099671073 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063843425 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096029714 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064252072 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063778341 seconds)
  done (took 2.35302721 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083541529 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083780344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069557962 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08282826 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063812214 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08179043 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08097516 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087761658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080219304 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071627806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063747388 seconds)
  done (took 2.066651294 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083863963 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08380111 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068911074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081490862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063504135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082410907 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080877283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084916249 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081210127 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072969594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06345217 seconds)
  done (took 2.059478063 seconds)
done (took 7.68921585 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079105423 seconds)
  done (took 1.281291143 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587937448 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.073495833 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081549678 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11174105 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183097408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118943409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277752511 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086731577 seconds)
  done (took 8.907544281 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088599847 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082652517 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070098042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070016081 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068690714 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06898561 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070482086 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071499493 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072037135 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070818121 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070424405 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068119176 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071440665 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068374123 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070687289 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067740054 seconds)
  done (took 2.431821859 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093374947 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089898199 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073763862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074148698 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071854174 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071931409 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073907823 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073189643 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070427446 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071682535 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074147177 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073144862 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07127005 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064617543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073772242 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075049495 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070920454 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074448922 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074778937 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074945031 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074699707 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064453007 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071443935 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073706288 seconds)
  done (took 3.092137767 seconds)
done (took 16.924514896 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11655142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071922716 seconds)
  done (took 1.400669205 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082697852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083874438 seconds)
  done (took 1.386926481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084430802 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065868224 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09062719 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077622765 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066102132 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065766616 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087014282 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066163919 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065670108 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065906184 seconds)
  done (took 1.95706201 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07110434 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07811956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070698368 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080403974 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073318629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06383704 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072217848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067607344 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077327108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062369435 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070687968 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081712687 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070940885 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083420899 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071991037 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067811959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070079338 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066854731 seconds)
  done (took 2.523092019 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067912361 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066509819 seconds)
  done (took 1.36053578 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068417218 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063843272 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066443234 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066872278 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063313715 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062367468 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062954294 seconds)
  done (took 1.67499411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38952846 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11033828 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292223188 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070275691 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081174336 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249647297 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06479565 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070034852 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069848557 seconds)
  done (took 2.662034438 seconds)
done (took 14.192023791 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081042719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085936573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094132816 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363887927 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091741679 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065829378 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113944228 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187902779 seconds)
done (took 2.323153605 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212548769 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621514478 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383974061 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196405921 seconds)
  done (took 2.430209837 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330075038 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08640189 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059028604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066677254 seconds)
  done (took 1.782268493 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068295941 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068930704 seconds)
  done (took 1.373839639 seconds)
done (took 7.039739027 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068155417 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066467417 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063580953 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065876124 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06367933 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063387247 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082324615 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063167899 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065634711 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066269619 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068514179 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065892195 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065894113 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065995956 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063396833 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063486321 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068681873 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065467586 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063403963 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063247565 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063096063 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065301928 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063220866 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063573558 seconds)
  done (took 2.844006886 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086147854 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066129389 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072168436 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071711817 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069796083 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070691365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071014705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066155987 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070737673 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068079592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069524927 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069790444 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067881444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069789647 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067838067 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070335098 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070896352 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066410244 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067824603 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069602052 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070567321 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066261672 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069636848 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070480235 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069027359 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06937022 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069790404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066351445 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070735873 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069219355 seconds)
  done (took 3.339864441 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072446022 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063599524 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064858686 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071311137 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064159438 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064890161 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063219453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063723199 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06448687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062946403 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064959119 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063093339 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063083747 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064747357 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064161184 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066832516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078539915 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063592473 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062882855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06397353 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066959732 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063120987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063258807 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062774139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062984133 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063020556 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063771564 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063055956 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.175979123 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063386247 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066496061 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066611332 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063166034 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07059834 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06673476 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062923865 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067306994 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063158032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064276083 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063282012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063000249 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06321537 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063137309 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070104681 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063315888 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064787141 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063394477 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064201597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064118555 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066224781 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062652445 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063337603 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065083797 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064579966 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067086057 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062762786 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063937218 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062799081 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06415117 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063319303 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063338244 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062765819 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065689038 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064335752 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077812532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069951981 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06317342 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064508738 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064120672 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065733454 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064433193 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076110878 seconds)
  done (took 6.048490355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092162983 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087954399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065892391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065273413 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062262374 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063950918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067137439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063819859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064950977 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069778233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064169443 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064901538 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065276586 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076441639 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064387426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065206592 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069748657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061604088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06425783 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067251057 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064155852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066998432 seconds)
  done (took 2.755281975 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15684418 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070598982 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10580644 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07272881 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067343713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072985879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069606566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069832812 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070020767 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068083765 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067845557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069972464 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067494555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067914425 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068333978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0677719 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069824406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068155656 seconds)
  done (took 2.623044355 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079509425 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066259436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087180957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066085348 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065911817 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068013606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070529732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074074114 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067852165 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065929604 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073966814 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068362725 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067897772 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065658233 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068087838 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065475511 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068168002 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066173814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074271066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070705757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070511533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074133883 seconds)
  done (took 2.799066643 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081461619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067979384 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082601687 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068769088 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062044487 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064234695 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069945274 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066053051 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069639512 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067147495 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065821373 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064758934 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069434458 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065573271 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068956568 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065833944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06754401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065314811 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067083973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061309705 seconds)
  done (took 2.617569791 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088286567 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067424825 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067515308 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076063151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067199531 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067150436 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07521587 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067022397 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0671111 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086770101 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067039833 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067165443 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074560719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071792651 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066915838 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07446815 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074916961 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074414876 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067310339 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067180314 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086872526 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06694457 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074676889 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067499606 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066776679 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066741456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066853264 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07199145 seconds)
  done (took 3.261291058 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06870814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065371433 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063427185 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063405023 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062909599 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063265878 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063192636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063258335 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065705673 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063320035 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065630443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065223514 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065307527 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065419123 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065538609 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065566273 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065777984 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063222981 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063546623 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063101434 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065342567 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065445121 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06557942 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063378187 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063234963 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065348414 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063055243 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062890981 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066204186 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06316226 seconds)
  done (took 3.193520636 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077990276 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072448431 seconds)
  done (took 1.410711987 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065494271 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080274092 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06325875 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07028005 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069527317 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065649938 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072723922 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06954756 seconds)
  done (took 1.810299269 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082421306 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077333444 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068012398 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080153904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07626349 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082374895 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131248936 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066513908 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072362802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064143184 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07915166 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065386004 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072056938 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065928938 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071434262 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071950995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063863856 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071792603 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068195031 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064456331 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066957837 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074310477 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068479762 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061489195 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067009031 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087686072 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076739711 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065714004 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068981731 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07345124 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071956293 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060748376 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066506189 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06637101 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063836005 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075407892 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080400848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069061822 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074152187 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067022396 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076206821 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061064527 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070410219 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072381815 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075700439 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066135719 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066489356 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061043061 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063629615 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068274069 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061173717 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066248041 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060773907 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075326939 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069473883 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07630321 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064409275 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067419075 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068698668 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06886269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073258198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068064997 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068479966 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065805407 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072331522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070458604 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075062251 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061240969 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060413996 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064066089 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075628858 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08903902 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072816432 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066471643 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06696762 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06360024 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069065504 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066752644 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071586351 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072359652 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065889862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071372837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072872054 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066292218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068476128 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074271941 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063965931 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069005201 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063854821 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08154481 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064688616 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064017887 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064471998 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076390479 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069324045 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065533822 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063833938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07308446 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059989357 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066123405 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066855716 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066916745 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075635644 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069285612 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06957407 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073606537 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072927222 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064982006 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067404079 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061357236 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065319032 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064082039 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071857006 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058961514 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067625587 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06527725 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065258433 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197557146 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065686938 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067228473 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074153217 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07246776 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065586406 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063664988 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06977515 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06666497 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069386298 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074148747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06557906 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061791732 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06236359 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070444435 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066510958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070407556 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071043892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069556638 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061233266 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064674881 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071554324 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074810024 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06695283 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06753066 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07251876 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068198595 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066386837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073019017 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069724145 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064935415 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072305583 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06760939 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061988274 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069978788 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069573517 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064986086 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070444003 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070240054 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068889082 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067711447 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065314011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074541285 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06746168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066412177 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066521916 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065124821 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07745119 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068540711 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061581413 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064123232 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075970407 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064453235 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066867246 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066357927 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068920908 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066979065 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065003854 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065915186 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068460799 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076922375 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071029206 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067496063 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071354847 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077337011 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066260717 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069525744 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065870437 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067546919 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067353014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074893069 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071789143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070577989 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068156307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063081897 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071697264 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073310451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0654219 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063913362 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06533754 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070195118 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07193198 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070158848 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067275433 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064757725 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066967572 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069432753 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068582902 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065771005 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065455022 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072389872 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064275984 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072619053 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066648954 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075971538 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06924854 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061201352 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068827777 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064442681 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071851107 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061177225 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063961866 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065107326 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066965756 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06470785 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068064279 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059862229 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072673695 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072804741 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06540286 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064052143 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064379078 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071548554 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066588359 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068048116 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068295718 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070758329 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075264681 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06394449 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068279648 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074397364 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064671753 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.186844411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07231119 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065339637 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065953594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066513415 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065214056 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06928551 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07519186 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072737112 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060725254 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068970239 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065362703 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06619144 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061990559 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071664237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069331045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068332203 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074093937 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066630574 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067315077 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070314011 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066359246 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067669178 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068379089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069789063 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067506841 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068768231 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066380778 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07018387 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066212223 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064634069 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068654118 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066247452 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067023702 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071253846 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066152437 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06692253 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06910435 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067116762 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067374512 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067087634 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065449695 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069103643 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067791149 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06727594 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068822144 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061604329 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073784328 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066501599 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073831707 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066530001 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063483946 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07359508 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069729852 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072562069 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067281793 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067300915 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06759676 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065789036 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070195092 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073641153 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064623278 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077119275 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074214024 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067221429 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069488421 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066869617 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068356168 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065970253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067636045 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067224563 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066895928 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066172561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070524083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068872591 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066648249 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067512791 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066782851 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066052858 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06691159 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0604737 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065443567 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065481196 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065590475 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07531906 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066463409 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065929987 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065069038 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067139329 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064979187 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062758722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074449255 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075366661 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066596773 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073408451 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065030739 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067345924 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076237066 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060342715 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064129192 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063828688 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063866787 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073117372 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066495569 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074965479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065954536 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065340449 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063318079 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066905425 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06466527 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059901543 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06328493 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068333996 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064358884 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064029663 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064797169 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06694743 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065501191 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073921109 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064204844 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065988388 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064947903 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062317997 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06372033 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063968876 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.198973722 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067895833 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064905222 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064346005 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066570357 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06764798 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067959056 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067148277 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068234411 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075318705 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065984816 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069031453 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069357903 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061647163 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069794339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066469117 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066245109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065600335 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071027088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069642752 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068379438 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07507507 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066664469 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068243216 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067193834 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06479942 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066487079 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065879034 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066284497 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066398956 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068269677 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074986191 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06477029 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069005731 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066659686 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067317288 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073369181 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068018489 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069666195 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073147145 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067114285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068311468 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074689827 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071299575 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069348606 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067946728 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068735759 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071803591 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066023622 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073352947 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067278601 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067385355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067656379 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064910394 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06632235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066082562 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065879177 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072611158 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067713315 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065548592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06624508 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064650193 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067550588 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070359381 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074018911 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069267455 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069713994 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061690259 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063584534 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067514109 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064853623 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067842061 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068594958 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072521863 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0678259 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066498757 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065299571 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075018673 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07147076 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069447405 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063994296 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069802469 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066582274 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068410853 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0668476 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066211727 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066980671 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06970112 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06769625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065996031 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072942066 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069356999 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067048831 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068395759 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067377309 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066987629 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06155645 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067079042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068362002 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071518252 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068691364 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066042002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07647485 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064251141 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066534209 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069174588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065152185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070611667 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.0614305 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067797425 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066755687 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0663433 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060718257 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06552093 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063334122 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066971492 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064027704 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060209957 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074780043 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073804837 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067441129 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063611881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063299187 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05990588 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06013047 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.194954782 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067922513 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068811467 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07707724 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065916213 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065879379 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061223184 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066889915 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069624914 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069956646 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063753477 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062245572 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066068823 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069480481 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072805766 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064959793 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066659626 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070487509 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068950603 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06449694 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069475698 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063501592 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071261598 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078882627 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067521133 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067332548 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072679093 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074406743 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067229561 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06248518 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067847725 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070198699 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067264358 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067825783 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067369654 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081158422 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069310271 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066078246 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065477426 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069245269 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065916096 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074888121 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06789665 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066566759 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071738951 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069740039 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075530917 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069283867 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074017073 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070206286 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069621084 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066048459 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067189045 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06522336 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065311453 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068057833 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067720482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071699388 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074456515 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066411492 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077259619 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075812197 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068161871 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063572274 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06572956 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066724881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061936831 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067764458 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065195272 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064688198 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064476315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064612995 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067160652 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071283069 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067416426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06686758 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065715032 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060402128 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067941966 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068128793 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067373431 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063039581 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065812796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066917311 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06992762 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069014906 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064344 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067910891 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067509916 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066669486 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061738751 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072412916 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065142647 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067934535 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065293252 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066509157 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066818545 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06962277 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071068835 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066986899 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068699608 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070057368 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068249628 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063552796 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063644416 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071607825 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06434238 seconds)
  done (took 42.461182355 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101420809 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063220851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061351469 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061928571 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073151034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062943623 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061661826 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063137023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06306053 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064966949 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061770443 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062237826 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070942803 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077562544 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07323395 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066488272 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061903788 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062617955 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061831754 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06279266 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070409715 seconds)
  done (took 2.759807654 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075084926 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070686296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072380896 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07589458 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067151536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070221201 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072161902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070216599 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075769754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066951509 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07552015 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070450364 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066913942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066625663 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066784763 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07072747 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075784943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067331801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070581516 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081402365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070540368 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07223115 seconds)
  done (took 2.899131143 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067254473 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065428087 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067335649 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06167871 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066270634 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061466287 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069330663 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063664086 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069490109 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064816104 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065036174 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064817696 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067263893 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061008173 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065521819 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063337449 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108013938 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069071737 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065673526 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066398277 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06144845 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067643051 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061383535 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061438957 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064628143 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06973382 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066182758 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063571153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065500357 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065005879 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065392637 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063457976 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067352046 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066433646 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064740661 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064884443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065521595 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065372612 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060970594 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063745729 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06648789 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061877145 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065638477 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066934349 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063824535 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063336158 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067247877 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065745693 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060896202 seconds)
  done (took 4.560481942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081847213 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108579967 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066774999 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087850954 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079762164 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075222225 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068739813 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089087702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063182398 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064310053 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081207557 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079409638 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065553484 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070339003 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072277769 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065422977 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066541072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064728118 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069394156 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064923696 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069243694 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071907945 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07927593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078422552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069598904 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064547529 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064704191 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070079105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077992925 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070159502 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070477594 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070958307 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080210328 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070639477 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064828286 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067624866 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081407209 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065784037 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067760287 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063094867 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067727588 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069699832 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072064566 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081481593 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06592963 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070573456 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065446597 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062688731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078457065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067885753 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073112971 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079577263 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069232447 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065879566 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069939919 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080370107 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065659793 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063866615 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068795988 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077744715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063035473 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069059068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078986404 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06783344 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072402598 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079268844 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071281594 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069275362 seconds)
  done (took 6.358231589 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077640026 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072675838 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080712101 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0802833 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072126026 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072076251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072340378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071817854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071719594 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077319393 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072419121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092900721 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067609373 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075057274 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07256173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072152514 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072186149 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072129289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072542463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072329167 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07252538 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080306905 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072680967 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080051437 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098580295 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067358223 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072122769 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071961791 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080282637 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072200392 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079659992 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072401384 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071901294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080436949 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079402678 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071692566 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065679079 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072141787 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072147522 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072236343 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067283986 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079999256 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07192907 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067467111 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072513786 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071984931 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079622993 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079229053 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074689577 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076541204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071916358 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079904675 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072037245 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072146408 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079770723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104822031 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079637987 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079801037 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072003355 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079785476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079478368 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086452991 seconds)
  done (took 6.049757092 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085655846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075468086 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076603493 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061559451 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064375169 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070194568 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064153337 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06424778 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074251956 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074950357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076756532 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06976572 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07279615 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076899656 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070064641 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072770886 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069603702 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06984469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074297719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070171569 seconds)
  done (took 2.791536146 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076457411 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083606715 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067421147 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072674638 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068666843 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071795167 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068448169 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069329554 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067232292 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069100549 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076232424 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076615185 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066738717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071735225 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075976184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071527502 seconds)
  done (took 2.501498509 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077588385 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072626919 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080148958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066695217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064380051 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062678844 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066706565 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061656753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062332999 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078094523 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066177079 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068673271 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065886204 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06472665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062912914 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068828836 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063045634 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063792042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065695646 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078232056 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076489772 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064615252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066677913 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066175865 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066300406 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070920004 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065332679 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063660757 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06341541 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066339943 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066523301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069220207 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063456835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064404779 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064307667 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06304668 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065497464 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066076195 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06847496 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065541793 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063510944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065222411 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065698731 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066334947 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062058121 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06584576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061752189 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067897849 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063689928 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065772148 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065229314 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06796362 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065938607 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071956321 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068425051 seconds)
  done (took 5.023611466 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081320416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069939627 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062144219 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064317225 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068577685 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068033719 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069217563 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06731487 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068007 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06433999 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067914053 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068737165 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067684937 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069646909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067768905 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069384247 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061972739 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067785917 seconds)
  done (took 2.586359467 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073387912 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06563319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073402807 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065810906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066807439 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068341003 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061868384 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064483866 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064743378 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06606122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065753332 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06810526 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064995453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068465912 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065741602 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065806073 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068035083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06481461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065576257 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062083876 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068170767 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064800234 seconds)
  done (took 2.817319492 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073592454 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092198857 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.139461395 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083807758 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082183976 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079000398 seconds)
  done (took 1.906902317 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092903534 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079276286 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066855505 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088472154 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073599801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067021608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067192055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067489674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075774408 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076072631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067133524 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076241954 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075747258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075480959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073224363 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073174809 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067214783 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06703315 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065625795 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083969832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06746923 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075717321 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067279735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066831499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06715916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075007091 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075871003 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076168703 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067388411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075886995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072698906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067037212 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075742413 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076063891 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068812941 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07585631 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067437462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083724623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072935686 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075360009 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068222722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07340976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076334643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072050384 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075554473 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067500276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071711657 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06711481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067551982 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085875845 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072970145 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074633813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073155252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075629873 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076377402 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085724828 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076059912 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074900214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072951688 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078339785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074969834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072776826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074860479 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075498356 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072839992 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074638217 seconds)
  done (took 6.218023882 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084348445 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086119419 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067519852 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076330291 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07527766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067702556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067112154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067626075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067276316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067081926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107046331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068196612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074917474 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075258107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067482727 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067287789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067106536 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07498635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066963832 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086026259 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067053293 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075192416 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075153324 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075304154 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075689001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072971077 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067717689 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067463757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067590086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067155039 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071994389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067510706 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075073353 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066954586 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075134222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068028938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067279788 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071672399 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06723473 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073022366 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075562413 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083627915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066958027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067404191 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075829625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067046517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066978665 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066770301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067229265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066529049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075401648 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075947392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076000714 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074759139 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067494136 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067217232 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067047439 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067306961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067201589 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072927398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074900565 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067033176 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08531697 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067312677 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067094105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074862026 seconds)
  done (took 6.122879672 seconds)
done (took 128.992196983 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186513104 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165148893 seconds)
  done (took 1.701490897 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071295504 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098065626 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076662648 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128670843 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066438122 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100475691 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099028856 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07759238 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065930627 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066000576 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066134914 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068402653 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131165227 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066157616 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066148454 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068778547 seconds)
  done (took 2.681750259 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09958786 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157325276 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099990878 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065363374 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096311251 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072910511 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064450132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074551627 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070629412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064990206 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07283383 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070025021 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064906317 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070499298 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070952083 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072400566 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064773937 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072594128 seconds)
  done (took 2.795213846 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104450325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091683381 seconds)
  done (took 1.564056097 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157824511 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105368974 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150625668 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348240603 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167082691 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229850905 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127577234 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126961195 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.124282097 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123305006 seconds)
  done (took 3.025242047 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100843007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1512415 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256518876 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115224683 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072411034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09500579 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116390955 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07794646 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080991678 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080419127 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080199166 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076409058 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098652775 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073916118 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073520354 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076254839 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102335172 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072545763 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074085157 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076746177 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099359971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065572287 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073577601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072422807 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077536519 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077641284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065683703 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06559489 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076582724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074227978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076997815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094199352 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077204945 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106891886 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070740341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107775464 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.0768165 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07416636 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074367159 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074334152 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08053921 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079075811 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072336383 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075959919 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065108235 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076608778 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065264148 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065032867 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07790906 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066942297 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07777357 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076962493 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107100406 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066837766 seconds)
  done (took 5.980181197 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103839158 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104948794 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071088939 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11238867 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100304775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071182184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10121695 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093450916 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102430688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070205512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068335447 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070649983 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082201388 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083185925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112493352 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105020359 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073236431 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071022501 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104141734 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103082645 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068807973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095840476 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09015302 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102623633 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067472398 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070779014 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068185458 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070432369 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077168493 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078551456 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070102957 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08121003 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084720356 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078726837 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06729792 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068017607 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068171481 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079430488 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079555949 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079578238 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078030521 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068030416 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068401292 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07005607 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070487646 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067712981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079612453 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080447953 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078613929 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069584377 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070476731 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068453148 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069749691 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080776222 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078103125 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08106936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080468778 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068496349 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068463883 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071625243 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081216853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079087866 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079095778 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06991039 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079505878 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068298392 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080470129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084834915 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068285038 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069678919 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068346641 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069499679 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069206641 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077865596 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077948252 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070285571 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069684145 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068390492 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08013742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079211117 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068244662 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077471706 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06716982 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068669533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069935328 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070236623 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077663005 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07969219 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070308834 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068352204 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06964332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06861403 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06711682 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076452528 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079432066 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077876721 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077643045 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068444392 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077255001 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077409299 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068639469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078013432 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067030885 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06887837 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19686104 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080733294 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079292808 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080651087 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069792925 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069691431 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078828613 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081764808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069710143 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079822724 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081981683 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08178089 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068652244 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082611882 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06927624 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080999056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07029413 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080609415 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069443162 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080452155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0691387 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068833102 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069669489 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080067001 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070146326 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069161662 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07082499 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070623978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080044067 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08377176 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071481159 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081968374 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079398205 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070198301 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078589228 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069713316 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080088431 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07028683 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070823044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067891266 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082770522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068680675 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069614795 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070176421 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080668888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06865419 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081035585 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078601455 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069021997 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0819675 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081341794 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078353711 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080604875 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070305354 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069635199 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069025165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069755273 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078289039 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080970156 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070836241 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069661766 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078564067 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080273367 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067479596 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080070563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078758551 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078552989 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068540202 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069825476 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080607222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081368521 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078935029 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078518147 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078453601 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068256677 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07768824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07892333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068235108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084750901 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068437831 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082664411 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079069713 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076838212 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079084646 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081055483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079838373 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080443639 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082939092 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068143896 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068098316 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079860808 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068066794 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069338199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07814997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069526318 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069384474 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082267152 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067658379 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077741535 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066526046 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07672185 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06614104 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068686629 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081453037 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067200931 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068498203 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211155337 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070849269 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078650274 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082809462 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079610317 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068386628 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070593167 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07999384 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080260303 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068339383 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06895639 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07095243 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079856356 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078318249 seconds)
  done (took 18.709031376 seconds)
done (took 37.834426646 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210270322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150694661 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180036038 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118533101 seconds)
  done (took 2.132787236 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.1235372 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101072775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095223992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065445476 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101796293 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065246835 seconds)
  done (took 1.961696361 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314030835 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211191809 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181970124 seconds)
  done (took 2.109547429 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198600555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187178074 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393300273 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25435584 seconds)
  done (took 2.55000663 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143029909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089841515 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066824924 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082966279 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13414717 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160629581 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101171509 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125923342 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077868096 seconds)
  done (took 2.442037005 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146890392 seconds)
done (took 12.75071003 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143628942 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.220403165 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144424634 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090465696 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110339339 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.233232982 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.219218014 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102407257 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.107979313 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077600943 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073497559 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.147542026 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07318057 seconds)
    (14/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075854615 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.163465993 seconds)
    (16/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189964096 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106345734 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152520887 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20541808 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091837071 seconds)
    (21/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201584757 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.158150963 seconds)
    (23/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088616366 seconds)
    (24/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.160858343 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147596178 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072947421 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13189422 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153744546 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.140022419 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075334735 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108309245 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.150570254 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091563163 seconds)
    (34/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108462975 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.194753942 seconds)
    (36/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072477885 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077140408 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141177118 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.194975597 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182913999 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097593603 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071709623 seconds)
    (43/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072163246 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195209246 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053418314 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071158866 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150002759 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112664021 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051063986 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074550136 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184970735 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076290582 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073002547 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136775672 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072976555 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072256432 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07257301 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089252003 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091056655 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.17837721 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05472392 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073255371 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194262753 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089427315 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067018468 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169844167 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072928155 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096596699 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064434864 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139352448 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079788466 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07107084 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075014141 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093793965 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072562805 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099030499 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107525474 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075107427 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149247231 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065328403 seconds)
    (81/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.133597624 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.222742206 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066874345 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195449976 seconds)
    (85/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071744094 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.067324473 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.062895776 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0954661 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175804689 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182855827 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066202441 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063826498 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071271447 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136554791 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150048015 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062065618 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150568322 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072755669 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090712834 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090456815 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.288395616 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094262505 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065706374 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07510357 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0995572 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072592703 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053668347 seconds)
    (108/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064318095 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08751595 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083123229 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140339418 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150991388 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156275004 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065336788 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.144792418 seconds)
    (116/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070541337 seconds)
    (117/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051940231 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096160401 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098419343 seconds)
    (120/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089090099 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072868155 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.13387919 seconds)
    (123/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.148766208 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074171541 seconds)
    (125/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067336238 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072321528 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100170522 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06778777 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071654947 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071668406 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074465468 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150029623 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051817002 seconds)
    (134/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060581495 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07183027 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051293792 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07199759 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172067233 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079572253 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07550354 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053674345 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119803452 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064527706 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073143862 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07533193 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064759143 seconds)
    (147/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051539195 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070212098 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071955618 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071769615 seconds)
    (151/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104674527 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137262992 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104732694 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074393018 seconds)
    (155/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05232187 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069992277 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064607692 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064849411 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066974532 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051865178 seconds)
    (161/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088011218 seconds)
    (162/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060875717 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051132729 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073122679 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051720077 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148892106 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135477596 seconds)
    (168/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.136587244 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109715039 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086380232 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086829706 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053019698 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136875901 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067657121 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193843453 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064695221 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050494307 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065352164 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05072739 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067616502 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110029362 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06440239 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068035788 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065919149 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172471789 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051813666 seconds)
    (187/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05075231 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071178705 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.137283055 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099522474 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067668546 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071858069 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.236340169 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.164760213 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053558272 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151719424 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065974302 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088236963 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068671939 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064285828 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052666647 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087969531 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079615353 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065763058 seconds)
    (205/309) benchmarking ("sort", Int8, false)...
    done (took 0.139881638 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151790804 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095985469 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051355293 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067236054 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151564656 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072299094 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075181538 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081594243 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092374605 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067062327 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078234975 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066967462 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051678898 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071426917 seconds)
    (220/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052231408 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052139721 seconds)
    (222/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072502489 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052298323 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064826457 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051976494 seconds)
    (226/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063752748 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051732832 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 0.127662368 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071787146 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13591931 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075392356 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079906916 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08001993 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159278142 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05199371 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065175993 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08678129 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079114012 seconds)
    (239/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069647729 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080027656 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052674901 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077071189 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066605127 seconds)
    (244/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053014797 seconds)
    (245/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073511544 seconds)
    (246/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051364144 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051283392 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088542642 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05175639 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051647549 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052482774 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064590262 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06645443 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064219473 seconds)
    (255/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06653696 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071565733 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069246544 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167891396 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06595243 seconds)
    (260/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051904943 seconds)
    (261/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09819892 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051026206 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086498725 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072935429 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064951934 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177034914 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064752165 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064771707 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067460981 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067555835 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051485626 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06575652 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061123518 seconds)
    (274/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051676799 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069877517 seconds)
    (276/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052383796 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051273481 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070600871 seconds)
    (279/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051507722 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 0.124256497 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060790095 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08710368 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051538553 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051020271 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061749704 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072222016 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098707048 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063954356 seconds)
    (289/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065631758 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063476662 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071425108 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072278754 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147882799 seconds)
    (294/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067298459 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071661649 seconds)
    (296/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07121439 seconds)
    (297/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067708299 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064172772 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07048921 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094520133 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085875067 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051209858 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052619137 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051954378 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051034736 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065878547 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07013447 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064333887 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050574922 seconds)
  done (took 30.473041385 seconds)
done (took 31.889048016 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086703983 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093125084 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075210437 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092561163 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08139141 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076709077 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072747557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07838209 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08009331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081736523 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078897078 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055091433 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074064316 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07455276 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07449015 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091604855 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078681336 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072926958 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073895725 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064903507 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073771579 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066511265 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067425616 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05531277 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078181129 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072110229 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072493825 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074664777 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065996756 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066604321 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069709777 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073423343 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06603618 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07852553 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072600232 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073614088 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074947753 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077197568 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067676471 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066528647 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074062865 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066178321 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07282692 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074385929 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072040107 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071849532 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073265671 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078301906 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091497389 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068233621 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074411474 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075883131 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076558292 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07263734 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069875985 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073231197 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070773149 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091391032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073594028 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068421152 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074119436 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073949314 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071403745 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073065877 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073031652 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075288145 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075170856 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071266268 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074857529 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071177152 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065978078 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072978115 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068974362 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065689219 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075543913 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076571516 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064895713 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070846527 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072982898 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071151227 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064483374 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067844397 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067163834 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07159516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067509567 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054723239 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069275083 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071581763 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064892525 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073065262 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071599334 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071983218 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067080854 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07521378 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064895941 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070894337 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065541143 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065692438 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066869044 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069510217 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065328282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067857339 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074579959 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067022739 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071489693 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07902154 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06542875 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071820132 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065066861 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064733933 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079837285 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074772927 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065834304 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067367821 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064396327 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07235115 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064370379 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06475523 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064651557 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065065288 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070575176 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06424173 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066555646 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070785205 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07623879 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06373016 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067353564 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066650707 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063881746 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069282218 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063867293 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064024151 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200609025 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062412566 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068395217 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066331275 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073154596 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067784505 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073602968 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06791207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074656474 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070389707 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071702373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071046369 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064911075 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058989063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068261284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068059602 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068044994 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065996362 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067327979 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066301007 seconds)
done (took 12.479750572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069206295 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143752675 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100221045 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09553575 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085966769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067188178 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076393243 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102755932 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067796945 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102541731 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087242425 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084987209 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113179102 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064956137 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066390057 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070145418 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06706676 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.0818457 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101321538 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086904355 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116242666 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06559091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09479138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090097669 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087792515 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101955831 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067372736 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070140486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069661926 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091153659 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08644819 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070259527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06698538 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100500298 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092503612 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083443645 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066752025 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082974381 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066516897 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06632157 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067820765 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09869965 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080016852 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08064282 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070263635 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06927241 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06743165 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084149208 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089553717 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078914878 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086908097 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102667971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068800692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065905814 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064592776 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08546219 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065496013 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069244789 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066912118 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06845578 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066266776 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069312884 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081177068 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082103249 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069697304 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080198307 seconds)
  done (took 6.824435685 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086700142 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091160402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083995887 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08491953 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066240884 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066986442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066999352 seconds)
  done (took 2.054530256 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069869399 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088661486 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089941425 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089729418 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085111837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087544853 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076349138 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066970609 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080952935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068013125 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087427121 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102580695 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067407109 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073768885 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090871053 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066655945 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090359087 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067134966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069780535 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090517438 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069138436 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082502758 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070117198 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067293591 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080804667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067030529 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113897573 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071055399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068403757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069181729 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064383248 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107771146 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080251945 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075568623 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066233486 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080798437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080788189 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065123786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082687039 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071394416 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079975716 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066446749 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067546358 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064671518 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070535438 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076395507 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066959805 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066799003 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068924403 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086101747 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067012164 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080157785 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070021108 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068969481 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068174859 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070554316 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076498752 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067279288 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086296773 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068155195 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083842366 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083121595 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0807381 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082562307 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068778099 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08000482 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080202651 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06923491 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067986615 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0700172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082714744 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064934654 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067919014 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076697341 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067809052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089227386 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089528 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067459002 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075359396 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067180203 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066649145 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066720322 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08925371 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068666488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066363433 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070557146 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069409236 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064801508 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065788457 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070046625 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064402109 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068516801 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069557165 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069564824 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069383577 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083269885 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068742169 seconds)
  done (took 8.783102044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072157836 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069324649 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070334837 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068433585 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068242692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06834123 seconds)
  done (took 1.945095961 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096423057 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069731907 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081205877 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073017152 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104980501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086982096 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087597424 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078982178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084057887 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079006389 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086763862 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088491838 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093075542 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072742061 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086649546 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07193978 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087232915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076111909 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078576333 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073313817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087390717 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072748783 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073096936 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081962268 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075738603 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073111068 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067674039 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079114644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078613778 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079315975 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072482321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076166208 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070474436 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078182012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087241838 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07081302 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071883538 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076998945 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072829705 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075908753 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088256182 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073084217 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074681944 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077503472 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078349462 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070452852 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077413654 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076174845 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086220882 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076976769 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076964705 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072314329 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074925106 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077179131 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071068428 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078355884 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076554666 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086537331 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07210295 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070315822 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06906067 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075237886 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078037498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075340555 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078802137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076825861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069814479 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072706612 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072930432 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072110196 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077047718 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069223979 seconds)
  done (took 7.106634101 seconds)
done (took 28.209881013 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.552822882 seconds)
  done (took 2.045934354 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604944827 seconds)
  done (took 2.12268982 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.580269147 seconds)
  done (took 8.10099581 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397425399 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474208382 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693194359 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132644458 seconds)
  done (took 3.258611724 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673754011 seconds)
  done (took 2.201832778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213892453 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197633213 seconds)
  done (took 1.951206438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380269544 seconds)
  done (took 1.895860464 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110267712 seconds)
  done (took 2.62592924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265782102 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163718212 seconds)
  done (took 1.956227855 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465123579 seconds)
  done (took 1.990310824 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.856252748 seconds)
  done (took 6.386050712 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214724637 seconds)
  done (took 1.779383097 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24279062 seconds)
  done (took 1.762923385 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.676176017 seconds)
  done (took 3.205407819 seconds)
done (took 42.807294721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082805477 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081820632 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080874271 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078488386 seconds)
  done (took 1.837413379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078800322 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07301367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076132986 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072892991 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077211864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072194035 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073957961 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077079639 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072567837 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072895684 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072409518 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072765863 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07487607 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074239586 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070891111 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075205612 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07612243 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072514238 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075498518 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072202924 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071176707 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074434181 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074552554 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072591357 seconds)
  done (took 3.308492252 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080243409 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073072236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074501924 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071715823 seconds)
  done (took 1.838060748 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0797128 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092364822 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089908315 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077178182 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091821251 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086285167 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069096234 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069016217 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073385805 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077221746 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068211839 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096208917 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087349011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076569359 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079203004 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065855872 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068482284 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086868879 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077456186 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077291277 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069845038 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076898222 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067589977 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088068849 seconds)
  done (took 3.429771569 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080614456 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103112381 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077931263 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088252792 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090255322 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065286073 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074545631 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089080783 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122677857 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065245362 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06967606 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065227645 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072498767 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065198135 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076228695 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104403657 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107986586 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068225135 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095635585 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065398016 seconds)
  done (took 3.193985445 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075395421 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070048416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065204614 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068909843 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077629051 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072817438 seconds)
  done (took 1.968257374 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070969874 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067062783 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067737615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067524159 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071989692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066985576 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066425717 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067098003 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06692347 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06797718 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066631818 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065679491 seconds)
  done (took 2.345895394 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.432180182 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068880709 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069188704 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065737001 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070737613 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065992404 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079746356 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068012148 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090791 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06627052 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066534143 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068683439 seconds)
  done (took 2.74852516 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20889912 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076251673 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236629734 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137097693 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11147923 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115263491 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103790847 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112950951 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143374836 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101526005 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167991825 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165373061 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107381704 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137427203 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089742644 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097762776 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155051874 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161919054 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103297862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165423983 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144139488 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124843209 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147306908 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101430008 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105874751 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12154927 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070739072 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079766817 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17039712 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132125176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146427964 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11084691 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093574367 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176484027 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171059856 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142930406 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134960948 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083588496 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101791838 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132534678 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198255997 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089461872 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169075895 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247374338 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082315711 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134514274 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1206959 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120375519 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107265034 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090851275 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145646048 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184531542 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138577123 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087827086 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112176949 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116325019 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116066333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104279013 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18207283 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162197179 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128075116 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071227372 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099819218 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152977153 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132123131 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109992922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127619834 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094927982 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134469908 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155608806 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118544348 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14460938 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128870216 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088435085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119403591 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139810433 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128754331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170366032 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125594295 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073396977 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12514562 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103584497 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081626759 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142939978 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075453721 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174783469 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098825526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10615633 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112777535 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108731886 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108668773 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159938652 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142232406 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243434943 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066066462 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104766435 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121882223 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14915063 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088649209 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109021917 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117846316 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078251722 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139355852 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074873081 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124515924 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076816305 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126151861 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132650042 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076817763 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122326499 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101344993 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10059664 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133849832 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160885684 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08897182 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082666087 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167857664 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121880102 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10484574 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145108989 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156088863 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099876667 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102942189 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150682748 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179536722 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089402684 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163722858 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107648588 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083947742 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087713205 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124128223 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112598106 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122590282 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082122589 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118964632 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168497725 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076061819 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09555449 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133759041 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079513118 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080918963 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102969149 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099835213 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094397768 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100096487 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103890148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136005389 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122554908 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104255569 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122324291 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096480117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163729447 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086694773 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098543293 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101200191 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068294514 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131810162 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077623066 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157590606 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119269998 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101489067 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115357279 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080365696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135206202 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076638552 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068321117 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138863812 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105423735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105105345 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142928231 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100060849 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119761109 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112417501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125929227 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124220285 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122921823 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101053074 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085337797 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106728808 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118341994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070302358 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086608743 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076765401 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099015791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090274985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079321684 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13306664 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116733869 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096443729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107226466 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092784169 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139618099 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072832558 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12109637 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112821135 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089762824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14350553 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143943148 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125264068 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095079448 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136553134 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067973305 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07113954 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085469728 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.379801829 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086401926 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086478243 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12072921 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150248162 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1330214 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141730263 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114007665 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124558275 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158341902 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071149082 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117984507 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150387124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124431557 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103878054 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092392885 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10124027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144618955 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110497713 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183709056 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115919322 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127683218 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154883216 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10064823 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086000843 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104311963 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136248986 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105287405 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145347503 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100610421 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088679804 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110809002 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074657403 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101223167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127878168 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120069726 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13609408 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115104051 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132992535 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077099164 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117525799 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120709108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122822896 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06424435 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120721545 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1608304 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093543463 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118199955 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152871476 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07895547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123465305 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.327717584 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14799441 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085067568 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109898725 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118937178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128941232 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121639464 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14120408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108875095 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136702557 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110380312 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085778928 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087856803 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097899507 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104875411 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094826379 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10757703 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114463982 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095012621 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131561126 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10271388 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109245262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117998479 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096726908 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089650647 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096623221 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174215495 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119508349 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171332828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09903046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145365038 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164029694 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07497657 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079569119 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078246499 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140239577 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083866394 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131090699 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097662923 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10592294 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124529977 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144660561 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095149367 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06845025 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108498616 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134369301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111951792 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098506545 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105060528 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162749184 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099643528 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078642529 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113518248 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104233045 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102147984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172102215 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061368581 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245845476 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076528285 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081630579 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128941817 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153712497 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081048285 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102839871 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119967369 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111234958 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128459495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101902666 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099944235 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114894738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150941126 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12891524 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090324807 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112790918 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129895242 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157041021 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105325265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095998042 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17195165 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152200254 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160770801 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088743123 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114617692 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131496765 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108405524 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139991032 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08417719 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164087704 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082267367 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136171522 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104032129 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090512595 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130094788 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09909431 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08843773 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148707444 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117793406 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082507097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078346915 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117818239 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1208798 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107158346 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075852728 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138065026 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072783737 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131773417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168270522 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081439628 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104156441 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242447041 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081095512 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109433511 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102900997 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090633794 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098043758 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174092248 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089304001 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150382449 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141565923 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113690688 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136928038 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100550557 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636149749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078099832 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151753232 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116224739 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17176317 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0979312 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117704366 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112428355 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123856683 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144036656 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105174636 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178285107 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132272449 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116486774 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079996454 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103022719 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103053611 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088772248 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10536598 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113666569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116351705 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093581038 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116592483 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124554054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082035466 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095202853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1560967 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116823906 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144922531 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140575086 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084949727 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11808431 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139296458 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079828178 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121682705 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151233012 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105682654 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097875419 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08009726 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248742065 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171512313 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073994489 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164196229 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120832987 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109924665 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114238215 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116092174 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132247941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108410609 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122726803 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094279749 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111122998 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112669372 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082249912 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076813327 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104826255 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111925815 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097431043 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09819537 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096603881 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151688396 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07146597 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095439284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103403127 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145118819 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174500131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088092118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082977141 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118966972 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112783905 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113577734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120852336 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079570251 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082372127 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08194673 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077360854 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1085455 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112814809 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104596541 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111625478 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164221314 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082700535 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224965531 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094889219 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105128043 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069650396 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078488581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097512776 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097276594 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10796684 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100946586 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171268843 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095050875 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089685906 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092271827 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073210291 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082600781 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12816027 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258395591 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120131014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098816452 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062758671 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108939352 seconds)
  done (took 58.76766513 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110839163 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082805565 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098275869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150001624 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122985739 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212035001 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157734033 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199977906 seconds)
  done (took 2.805311223 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069802866 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094588126 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099729004 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082995744 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067172069 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06866325 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226027229 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080975131 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066780092 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088950493 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079517237 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06907733 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422709838 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067811783 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067906492 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063593862 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067529197 seconds)
  done (took 3.446943183 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373908844 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362560568 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372618455 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07373179 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.827237641 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088973334 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080105124 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097019973 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072241778 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.27953445 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705738278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094423114 seconds)
  done (took 14.106891983 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078470057 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07068416 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084422309 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084279356 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072294759 seconds)
  done (took 2.068196936 seconds)
done (took 103.450903434 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082987047 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393702703 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053819114 seconds)
  done (took 2.156724272 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084752826 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084639006 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084614621 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084265981 seconds)
  done (took 2.022586547 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077294983 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076950905 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084756289 seconds)
  done (took 1.916503814 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2247938 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140172438 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086705876 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084507792 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077832796 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07849705 seconds)
  done (took 1.919267442 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074786356 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075213457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072743226 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076143359 seconds)
  done (took 1.971924007 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078334725 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05256958 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054847313 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055887134 seconds)
  done (took 1.916361022 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089588309 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079785942 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078708099 seconds)
  done (took 1.92338076 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109725304 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085894147 seconds)
  done (took 1.870134741 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084189981 seconds)
  done (took 1.759995245 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102003336 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113712179 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128501553 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10919825 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13706344 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109124355 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085968038 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08671097 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077203392 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087348562 seconds)
  done (took 2.712064431 seconds)
done (took 22.377559412 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080961548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366950887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360869666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090465732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668484997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.390485475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03467024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092184254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113566297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067901756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084158093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647822412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983058592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323744056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973611755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413984336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650497144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068476166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067902781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068178033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019530565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067808175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067814416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068890814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64944366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371565242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068188051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.410730673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067727922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069881691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354896062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068829407 seconds)
  done (took 16.494056397 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073823447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118054717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072760481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084074386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070538172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070616596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071207791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068967152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119341323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067784136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084581388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06779531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071934833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068870591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087040425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068580464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068879694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068734437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068040835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068590915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086493266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068202988 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06813263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06840178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068078812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079836285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068296286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067895124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068391394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070282977 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071193814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069398159 seconds)
  done (took 4.083693576 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117780575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125091224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075212712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103646353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114610305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070391259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144062356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092903261 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127964611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068442934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085010097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068367248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100849547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06907667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087488619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068658439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069371824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068853771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068675743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069006916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087169107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068110038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068936335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069244255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068623404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081572545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068889579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068902776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068926759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070533587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07170861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069145062 seconds)
  done (took 4.351152375 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074512151 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074851188 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083310959 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083641674 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07007703 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071948112 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073181479 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070196942 seconds)
  done (took 2.29329169 seconds)
done (took 28.904840359 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082212848 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069868789 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072883982 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080901449 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073418109 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078750088 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067586342 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074783041 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072328764 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073014299 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075478297 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067578677 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071288764 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067111972 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074891561 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067935588 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079579007 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071839564 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079789447 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079683178 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070091548 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072999745 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074342715 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079349129 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079258033 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079816315 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077491233 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073132813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06958888 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070536419 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076885947 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084184237 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068875516 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079243608 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068235701 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067972614 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071779037 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06837809 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079764352 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076917602 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069802727 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076404252 seconds)
  done (took 4.789479999 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09044929 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091576431 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084947805 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061413093 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067301793 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065538684 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088369277 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059746518 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059710128 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087895578 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055956436 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059717062 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062760119 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054379291 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059758578 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057042031 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062087927 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056270252 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059228972 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059633316 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058470092 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054676922 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060450675 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065452175 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056686422 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061989803 seconds)
  done (took 3.403061793 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076450418 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084742324 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089307388 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127586434 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10398547 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077820075 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078163183 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092493216 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085462227 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06715688 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071190811 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094134575 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088592246 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074043642 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067922971 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084974594 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082387202 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069509673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073606682 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091595598 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084538721 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08405336 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093062481 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081243911 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06722291 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06982534 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071571866 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081819893 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072459712 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076872284 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071783759 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071022961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069691085 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079137626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071704849 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069140511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090694805 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077449058 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078126749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068176569 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070915443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068681688 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089747956 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122742449 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067238058 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074024508 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075813915 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076604478 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067895564 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086147983 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078889653 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067450459 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070421437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066926255 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067495586 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080420468 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069182541 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06980441 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076437425 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070421853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085771823 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071473344 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08247863 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067156035 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075324993 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066460579 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068278267 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066538565 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092453746 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068803141 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108191828 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068453143 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06865627 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07619725 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07511007 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07354161 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068206882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082120658 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077924677 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07100062 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076026697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070945474 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070480762 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087989997 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069778248 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069036504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068407493 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073715631 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070389891 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068986438 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080337671 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067737256 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070278881 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083918414 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067866103 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068846193 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073836244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072179488 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067058093 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078765873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072539206 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068332361 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077109397 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067702968 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070592646 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07791736 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073633028 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066794611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072341469 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073557263 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068443446 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069615829 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070740064 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069469144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076035297 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073870736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072518605 seconds)
  done (took 10.625083949 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164208381 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154108531 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07071612 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145350438 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076429696 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079340996 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159247267 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094647818 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068296666 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068802631 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068904671 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109840298 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106137676 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115462749 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079024065 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068187805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084100595 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113943966 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14986849 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143047632 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084261458 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077585375 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070972218 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069419617 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070831632 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079011232 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085519434 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077111146 seconds)
  done (took 4.467303671 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08353547 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097266215 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074497045 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089327163 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091457071 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068006479 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070439758 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070129486 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080877101 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078961211 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068043132 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073732873 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074935563 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071534719 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069521042 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07543355 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075146184 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069492962 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071344621 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073081551 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078461262 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080741745 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072016965 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067509272 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074601042 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067723884 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064653423 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085449456 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068288777 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090515501 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066177297 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074926 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082017054 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06918904 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067871351 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067775576 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067681285 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067908068 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069562195 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066650989 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066441768 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058143422 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06750801 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080261289 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074188455 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057046417 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073188277 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073260297 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073479273 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065805867 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070795953 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070615798 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071118049 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075058345 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073428141 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073295186 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069058494 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065866389 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075539068 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067734401 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064735683 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066566396 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072209357 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066384252 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075915937 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072895321 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066776277 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067897406 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069865997 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073960983 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067782748 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071199549 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065651026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069704961 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072410199 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070088068 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069380675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066725598 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067828357 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068464821 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056239984 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068171663 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054142134 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070873671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06623649 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066883074 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067985328 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072757122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080106144 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069249788 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073928074 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068910042 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067317752 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070935671 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060878946 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070904282 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083075696 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082997384 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067803003 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066115278 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082908549 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072654938 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067206567 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056891322 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07524884 seconds)
  done (took 9.237540549 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096010332 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088429505 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069888493 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08382988 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091645122 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087032725 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075271484 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077353808 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069264147 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082267212 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073721764 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076969599 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068912434 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077597597 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093733188 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07716857 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069866543 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076900736 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072578621 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100684042 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083083765 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082249713 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074661206 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068266187 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076096495 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080169444 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089517496 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080611085 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078863489 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076492326 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080648969 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090129401 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074592472 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072481107 seconds)
  done (took 4.462732025 seconds)
done (took 38.675998867 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.786317075 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951506412 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777135071 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.12294203 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.855946907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.971072107 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929860071 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.77216322 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.117257728 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.810542173 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.020218675 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.829907348 seconds)
done (took 65.655784097 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.800421001 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.908818566 seconds)
    (2/2) benchmarking "String"...
    done (took 2.047728306 seconds)
  done (took 5.668983447 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.07266163 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.418467259 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.016070506 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.770131756 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.771427314 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.072047735 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.562100413 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.285462381 seconds)
  done (took 30.608744972 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.943434073 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.959752506 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434563576 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.465302572 seconds)
  done (took 15.552627514 seconds)
done (took 63.495608894 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.787715135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.808272744 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.774417896 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.745576376 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.817435448 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.7799919 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.928098451 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.764219592 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.759282917 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.744449201 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.759822351 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.195752284 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.763954733 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.247315898 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.761088827 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.76754895 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.766236011 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.297878788 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.91511191 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.7691166 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.761949856 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.772566709 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.758101169 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.766513791 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.800714078 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.75460059 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189597067 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.768982069 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.583915968 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.758090256 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.816638767 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.774631183 seconds)
  done (took 203.359859614 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752955797 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.607945477 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.717911998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.784958639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.081809142 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945844033 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.891068946 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.167556044 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.753553073 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.776126513 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.926848921 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.747573049 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.952610868 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.699378745 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.758020989 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.853403535 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.925379802 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.969844956 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.749312232 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.025661866 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759424864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.731301564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.679265298 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906947145 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.775727296 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.754317503 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.750256396 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769760463 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.934762866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.884380192 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.770378699 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.765708851 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952741736 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.616508245 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.761828099 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.756825447 seconds)
  done (took 168.350827272 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.894417024 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.746564562 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743398438 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74678474 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750431409 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.745625226 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.866421606 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8673188 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.201561613 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.336289093 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795901047 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571946817 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.742124567 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811985495 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.757311028 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.74156922 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.759129443 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.771503264 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743527772 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743934717 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869640737 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740338054 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.757819535 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747613072 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743422905 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754633763 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.115470919 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.959272161 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741913669 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748563349 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.98633829 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.746395946 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743857984 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.635460414 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.128102932 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.830084706 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741490486 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748538419 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742595635 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.963501225 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745558213 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.743605849 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.743821556 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.748459386 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919132633 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.738938644 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.868845322 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741525152 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.242969223 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.74116763 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74398503 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.486134513 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.417309719 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.739032597 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.746326634 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.740713304 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.743690029 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.740508041 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739417246 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.740556725 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.747446571 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.525926888 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.814698285 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.743323774 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.743972065 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743692048 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.741079731 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.848190779 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740756576 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.883355121 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.800849562 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.963047752 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861560107 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.742221999 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810224746 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831650011 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.739635889 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.740651743 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741248866 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.739873105 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.821278761 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.740348916 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.860444719 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746170227 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.74305673 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791081366 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810000395 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.740627847 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640247882 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.739639782 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.742467701 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053526954 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808890986 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.740630972 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.741833858 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743644523 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861300694 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86142168 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53981459 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.740763758 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.742235375 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.752823919 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.870560712 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.739346382 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.91932989 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.742381952 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822915081 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744640727 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.744770342 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.746454519 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776603697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.742886243 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.803664208 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.740071426 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.113034058 seconds)
  done (took 399.627978343 seconds)
done (took 774.989066755 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.422194182 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.37514047 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.480319754 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.39892381 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.385322426 seconds)
  done (took 13.74468243 seconds)
done (took 15.428282573 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.83059918 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.833683679 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.770852241 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.831446478 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76217719 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.829137674 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81157084 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772269318 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803680405 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.769392862 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.800436371 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76970907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756838915 seconds)
  done (took 25.025231117 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977819123 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.979576099 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815750712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.974690882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.789088375 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.979657211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913485316 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896674727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.896108535 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759951912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762562298 seconds)
  done (took 22.432595958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979818584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.984015241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8162538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980234618 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791524333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982002233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.904078603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.905067794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.897205885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754585432 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759500204 seconds)
  done (took 22.439737057 seconds)
done (took 71.584848702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.752289705 seconds)
  done (took 3.440082733 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.771753208 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.91353571 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.756125731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758871831 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754227993 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.751381187 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.757132473 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.755016396 seconds)
  done (took 15.904779115 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.756806711 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.754669217 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752135569 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.753843325 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.751829681 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.757748401 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.751968422 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.755470808 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.755698284 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.755567346 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.752958905 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.763923881 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753588039 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751301322 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.753288909 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750194953 seconds)
  done (took 29.754876394 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.759278949 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.752878258 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.751781919 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754637084 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75311005 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752618753 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75607694 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754884969 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.7519966 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.754546438 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.753528524 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757022339 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752042535 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.752587757 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.750775416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.750488826 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.750857572 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.755067355 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.755940712 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.752510821 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.751640912 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.751155072 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752241841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.75892479 seconds)
  done (took 43.776747455 seconds)
done (took 94.561821523 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.445716565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.181483798 seconds)
  done (took 8.311949737 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.755016186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755321491 seconds)
  done (took 5.231207761 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.75789555 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.754423803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.754557919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756638954 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.755960565 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.755668065 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.762367605 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.758342105 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756487044 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.756636593 seconds)
  done (took 19.25556105 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756560719 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.765823259 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.752832927 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.756563511 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.754396133 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75302841 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.755119976 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.761176062 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756569202 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.751221338 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.752551998 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.751988188 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.760739086 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.75288759 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.75718813 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.752221655 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.753250628 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.753728421 seconds)
  done (took 33.287075533 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.756993758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.756286463 seconds)
  done (took 5.207305844 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.753950346 seconds)
    (2/7) benchmarking "second"...
    done (took 1.754491167 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759018721 seconds)
    (4/7) benchmarking "year"...
    done (took 1.752506192 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.755374773 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.757588303 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.755660633 seconds)
  done (took 13.976556415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.760674461 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.921582112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995745843 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.442661945 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.757039543 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.762204489 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.683880946 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761006598 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.762331186 seconds)
  done (took 19.535058622 seconds)
done (took 106.492062738 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.564570772 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.753192493 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.137145202 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.80571919 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.770794802 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.052257347 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.782273086 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.97681551 seconds)
done (took 42.531485192 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.828295903 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.304116761 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.571660065 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.074427937 seconds)
  done (took 12.639424333 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.744432688 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.291045109 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.804594166 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.440680947 seconds)
  done (took 19.992121084 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.129840629 seconds)
    (2/2) benchmarking "read"...
    done (took 2.123732522 seconds)
  done (took 5.954619586 seconds)
done (took 47.105726061 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765335798 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765327571 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.763473661 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.766214441 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.762332491 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.765465491 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.76475585 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.763158981 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.766500421 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.765816154 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.76947416 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.765863948 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.765670838 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766231645 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763748155 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76319517 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.766908146 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765704744 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.76330585 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76350133 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763818627 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766530501 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.768196744 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.763506913 seconds)
  done (took 44.060955427 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.766504492 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.76406389 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.769233633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.766712404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.76301852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.768068818 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.766024175 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.762750995 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.768717756 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.76639064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76381489 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.765981381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.768475234 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.764900819 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768892355 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.763418262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.767018186 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763872358 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767253291 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.769295356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766744302 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765487049 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.765530062 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766114253 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.764632824 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765302613 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.767655226 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.765366079 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768848168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.765045158 seconds)
  done (took 54.685188615 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.774381235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.775944673 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.766191502 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.769730335 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.767581468 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.76917787 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.769115026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.768286169 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.767945185 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.768487248 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.768790251 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.768536874 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.768047573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.767908358 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.769368845 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.769812049 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.770024902 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.768674335 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.768247512 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.768868855 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.769855233 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.769503292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.76945461 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.769608796 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.768678592 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.770302526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.769349995 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770723972 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.769334345 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.769327735 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.769699729 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.770976206 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.768885416 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.768980763 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.771622043 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.76897371 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.77373104 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.777680283 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.771214199 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.770772847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.770348935 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.771436478 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.770015893 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.770542396 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.769479265 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.770234843 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.770723563 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.770426696 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.76937389 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.770813039 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770327742 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.770975315 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.770318638 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770388021 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.771429111 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.770251217 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.770766324 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770989414 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.770436272 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.772678897 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.770551174 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770587779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.772137166 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.77137959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.770535132 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.771852566 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770812878 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.770292388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.773331441 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.77241603 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.7721909 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773195642 seconds)
  done (took 129.166060072 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.774643052 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767473208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.768521387 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.768617928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769809062 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772061133 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770263677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771342803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770231815 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773240992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771967049 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771004734 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76964593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77351622 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774394033 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.768986239 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772284825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771987905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.773125714 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772990491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773552726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770967495 seconds)
  done (took 40.674339181 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773336828 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772883579 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.770450132 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774236127 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768656167 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.774177904 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771248696 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773807604 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772769794 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771109503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770821971 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777424299 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769991194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769613759 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769936921 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771204908 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772705436 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772943835 seconds)
  done (took 33.602504865 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.770071085 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.77127376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773549883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774619766 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.770481354 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774175483 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77245703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773133961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.772642235 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.772231815 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773707714 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773788988 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773683798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771824316 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774396729 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.773225522 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.774164677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771923474 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773007605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771996924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774056683 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774738048 seconds)
  done (took 40.709932556 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775644635 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.775818696 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772272673 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775349207 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.77182072 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.775390573 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.774857033 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.773523987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.774407246 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.778486675 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771269398 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774874841 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772650959 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772649351 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.776142148 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773167837 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.775119863 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77177718 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775027909 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771655757 seconds)
  done (took 37.188596458 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776889978 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776208448 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776250994 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778586208 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776705869 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778850476 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777857982 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778040597 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778240469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.778647761 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77803177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.777094812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776913418 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.776714068 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776925782 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776305833 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781001053 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778283685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777364254 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77792843 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.77986019 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778414823 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777451825 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.777324432 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779201126 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778842631 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777790908 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78208302 seconds)
  done (took 51.493972822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777359064 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777396468 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.774612924 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.774493451 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.77589805 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.774249526 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.775802679 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.775019866 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778273828 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779757147 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.778039739 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.777589481 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77866733 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.777350487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777850452 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.778709316 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777931003 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.77598077 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776339692 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77622035 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.77935855 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780496646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.778526738 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775839708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775765364 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.778847553 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777856248 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777102294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779350578 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776692914 seconds)
  done (took 55.026408395 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.796381631 seconds)
    (2/2) benchmarking "in"...
    done (took 1.799211545 seconds)
  done (took 5.304413022 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.77633007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777818073 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781208313 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776178477 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.778288964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77965608 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777656576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776914071 seconds)
  done (took 15.933729624 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.780949196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.77966577 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.780390012 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779558653 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.781681637 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.779942206 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790971137 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.780769213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.781927563 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780670088 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.786037192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.790669675 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.784664693 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78199564 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.782759625 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780676766 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.780279721 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.782137393 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.780889792 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.781158362 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783043873 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784500673 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784165311 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.780815029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.783700183 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.794489745 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.787440355 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.782014106 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783388624 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.786450621 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.782471837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.777252204 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.782789129 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.782279074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.786908646 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.783367333 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792147443 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782150307 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.790979025 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783050269 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7814533 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777755213 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.782669516 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788719288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784051743 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.786145693 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.781341072 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.781821171 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.782802065 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.78551927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.788154477 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784570216 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.779521604 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788755921 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.784473069 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789928205 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788176372 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.785371705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.792660519 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.794382346 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.799111421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.791006743 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789546047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.784459009 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792868762 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.807115541 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792001891 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.780468309 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.78024965 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.78328273 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.793963888 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798606133 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.794451586 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.787008104 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785073271 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783130054 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784604923 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784174686 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794287151 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.790814363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.785908308 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785260123 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794186227 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807283929 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.783970883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.785223741 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.784095617 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.785168158 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783675194 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797221892 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.787407277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.784306146 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.784708598 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.7874688 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.788232153 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.790141467 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.785868662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78617262 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.783152274 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.78624175 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785772635 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791037323 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.794973663 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786080899 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786537647 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.794207384 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.78495631 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788897027 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795488858 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.78466026 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785612326 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.787768902 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.796049248 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.783646158 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788778961 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.795527851 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.787560364 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.787404729 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.788095301 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.786241882 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79750951 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.814710443 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.788068741 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.788824848 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.792886441 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.799208801 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787520443 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.789955293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.786809841 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.786290089 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.783992505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.790221246 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.787193717 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.789059577 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789493705 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7918094 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78481742 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.786755576 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.789388901 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.78913567 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792066122 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.789728363 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.790202363 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.792116894 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.790190767 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.79045551 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.79834215 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.789022736 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.791308239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.790604307 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.785387781 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786064572 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.790710099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.789330268 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.789622565 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789904253 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.787935753 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.790777842 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78788601 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.789264914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789282597 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.789332783 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794324643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.79072221 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.793583505 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.789258058 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78700589 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.789272645 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.789028412 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.789469431 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.789057184 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.790236855 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.791799366 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.798162734 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.788650876 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.789345439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.793782237 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791042656 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789726369 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790551453 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.794729262 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.799524204 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.790878369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.798673544 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.79121202 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792048776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.790612986 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.792501961 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.790127816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791719068 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.794643597 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.798403947 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8056601 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800147702 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.7912049 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.793114977 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.793106777 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.795000599 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.796060349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.792689585 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.790852417 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792179635 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791120795 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792087206 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.794065843 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.792443274 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.789889932 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.794794874 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.790433699 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.791391637 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791239596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.794351659 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793858075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.789549779 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791982152 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791759381 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.790739482 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.788300438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.792204989 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.792422939 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.791584531 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.794557385 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.803073507 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.789044641 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792431219 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792125094 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.793230368 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.79120533 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.79372026 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7966093 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.793719163 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800697136 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.795105673 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.793533549 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801196509 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.793664501 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.793049232 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.796053482 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792532381 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.789526757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.795600161 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.799966457 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.791252942 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.794538175 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.793660404 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795884619 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795132721 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.802994415 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.789723248 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.792537915 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.792852242 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.79797408 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793958285 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.796801162 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.796298977 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.795753043 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797305777 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795900377 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.794428504 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795280436 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.794951118 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.795335794 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.794604287 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796770173 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.80315507 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.801112305 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.794202987 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.799659787 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.795527305 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.797590463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.794818533 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.794717399 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.792738496 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809901922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.803768622 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801672766 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.797450063 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.793563178 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80278922 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.797064651 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.801856258 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796599264 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796518366 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.795397653 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.795391128 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.793472037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796108798 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.795856736 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797635866 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.797423451 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.798918737 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.794640805 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.795015275 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.796638932 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.796595102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.796050155 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.796796015 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.796503441 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.800208673 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798527273 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.796051835 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.797204614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804880859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797057117 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.798616637 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.797708043 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.797456281 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799403185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.798169364 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.796363852 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.800116939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.806191586 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.800238987 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.808597395 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.799824381 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808180725 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.798579352 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.799632898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.805124384 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.794262831 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.796072748 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.798349761 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.798044738 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80634524 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.798035763 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.797998056 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.80256181 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797862736 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.798396128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.79648091 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.797045338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797452993 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.797873438 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808729776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.799287531 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.802519778 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799606239 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.794267092 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.798565854 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.796995453 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.796800474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807151149 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.798020838 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.800020983 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.797463734 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.798805108 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.799260742 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.799050172 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.798593116 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.795300115 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.799184219 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80714108 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.799716511 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803691494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.797798087 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.811081161 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.800542043 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809632953 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.8008715 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.802516396 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.800459313 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.798719087 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.802256672 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.801921103 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.802329977 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.800274374 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.801340493 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.803497325 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.802535824 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.804074371 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.800459191 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.802774275 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.801540076 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810453557 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825620946 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.802161636 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803660865 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.796536387 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.801034577 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.806142893 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.800710907 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.799430326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.803539138 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811776644 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807002539 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.802272836 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.801918968 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800501979 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801422878 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.799226219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.800838974 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.803466244 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799622512 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.803400803 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.802153706 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806017647 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.803620861 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.80333431 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803877419 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.803642857 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.81397377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.803493558 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.805669669 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.802351594 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.80120276 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.803570118 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.801980722 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.803272456 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803286261 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80184885 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.802984699 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808026821 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.808452367 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.806666394 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.803636566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.802923971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.804440394 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.804439855 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803510703 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.803543637 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803633294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.80484051 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.80369278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.805795373 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.804748354 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.802916338 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.805263725 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803852548 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806819046 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.812981875 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805076008 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.801824398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.803953869 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803906469 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.80229204 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807695521 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.815967887 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80580601 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.813689923 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.811948718 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.810617834 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.802823876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805535308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.812349778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.803335935 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.80565846 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.806018043 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809474244 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.805934712 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.808365893 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806480931 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.813017838 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.805823157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.80503599 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815649793 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.806699995 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807614056 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.806437443 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.809282861 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.804887611 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.802757305 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.804659616 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.804309293 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816681732 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.807841117 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807078519 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807516127 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80448028 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.805912109 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810853825 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805167105 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.80700902 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.803859687 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.805695986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807567262 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804529634 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.802302074 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.805225611 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.805379807 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.809037777 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.813077784 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.804234594 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80894349 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808888259 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.808303234 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807076836 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80528418 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.802725732 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.802635569 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.806848315 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80771542 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.807595547 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.809609722 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.806975092 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.807581841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.806896447 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808383868 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809367057 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.816685617 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.815313985 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.803480907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.80681361 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.808334853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.810871575 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807979518 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.809351994 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806819762 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.812430148 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.807475437 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808760534 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.808471377 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.810423383 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828040638 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.807604399 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808294303 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.807611014 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815450681 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.807385062 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.805276137 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.806850351 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.813368372 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.812867356 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.816897967 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.810720276 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816442853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810345782 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.808898075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.812105088 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.811587538 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.819133453 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.812743766 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808902251 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.808733888 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.814662107 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.828078151 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809091485 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820239696 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841058254 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.81133474 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.810502617 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.810953138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807646161 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.80926663 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.812089348 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.811509011 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.808513866 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809381829 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.809581478 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.810833027 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815964707 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.811330849 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.809911931 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.809993193 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.810027743 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.814537795 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.80749328 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.809994775 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.810023975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.809797427 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.810891646 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.811207701 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.809203256 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826068664 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.823198063 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808166841 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.810375793 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.806481417 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.816282857 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.814391448 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820349002 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.818593926 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.812300796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.81097403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.813127111 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811627252 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.807070059 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.812775428 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.810983272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810532612 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.809785004 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830122624 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822877519 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.817526197 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.812272185 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811601173 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.810915006 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813858063 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811414655 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812937623 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.815135001 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.813023783 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815975053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.81022295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.810826229 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.814200384 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.819316353 seconds)
  done (took 1073.755707383 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809792316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809523472 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807316137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808399394 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810323385 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80847035 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808675287 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.809319371 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.808550645 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809074098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.80980098 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809900283 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.810047048 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.810015085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809896791 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810764834 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81066482 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809464128 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809101741 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810095103 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810089271 seconds)
  done (took 39.741839711 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.812872939 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.809356647 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.810073333 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8123391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81022438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.812602067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.810929737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812418696 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811882721 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810331579 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.813955449 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812435461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.811948683 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.809457993 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8095907 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812740715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.812599332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810834585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.813026685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811229229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812792274 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.811846448 seconds)
  done (took 41.599412539 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81570693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.815952693 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.814764002 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.811960873 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.814091883 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.811759754 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.815386661 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.815158198 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.815196298 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.816511118 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.812858342 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.815716334 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.821773569 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.818670777 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.818329852 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.814433196 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.959483056 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.814818473 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.815618171 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.815744238 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.812058531 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.82333022 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.812609302 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.811860821 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.813989954 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81754829 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.814405666 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.814446654 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.81641387 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.815811929 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.820854498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.815731179 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.815011533 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.817754766 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.816334687 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.815800537 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.819935011 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.816763 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.811838641 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.815604621 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.826238093 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.835949671 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816737868 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.824025555 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.814897482 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.816463268 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.818468287 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.825859309 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.814198937 seconds)
  done (took 90.910542011 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.816236571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.8172653 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.814872737 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817046986 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.815120458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.816426119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.81762239 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815773462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.814037004 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.81336277 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.816673678 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.816573182 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814538741 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.81900168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.817208673 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813985613 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815014268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.815108425 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.814703656 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815656782 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.814664576 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818441594 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820052074 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.816479563 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81733541 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818075108 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.816726115 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.819223456 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.816889198 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.816635999 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.818021332 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.818945867 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.819544391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.816731194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.816940589 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.819348231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.81974017 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.819148447 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819773959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818322937 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.82109117 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81862133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.820326408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.818457207 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.816531774 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.816226078 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817425357 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.817692445 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.817054318 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.820236398 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82109576 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.818333249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820480237 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.817214206 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820709496 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821416689 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.817849655 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819066609 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.821427876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815251882 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.817340829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820980442 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.818323699 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.820120995 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.822480325 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.819167856 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.818823802 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8218175 seconds)
  done (took 125.360916624 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821843316 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.822293197 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820838237 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822841733 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822383622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.823364479 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823263307 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.822870899 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823498537 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823384067 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824238389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.820990237 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.821756666 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820535882 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82198806 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.821848645 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.822870786 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822415679 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.822926624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820071513 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.821973332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.822168512 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821828978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.821435229 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823397833 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.821623192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821603004 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823829681 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821671982 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.822411816 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.822737033 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.82290935 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.822627091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.822766946 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.822693486 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.82375781 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.823272299 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822864255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.823001014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.822364392 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822641347 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822719871 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.823755576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.825718321 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825764494 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823723697 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.82507522 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.825583526 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823040943 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824724663 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.824265277 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824382154 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823422978 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824103443 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.823769036 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.823242125 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82382395 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824572545 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824725127 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823702732 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824528114 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.823807555 seconds)
  done (took 114.78094161 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823275733 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.822589142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.821194379 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82108515 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823991584 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820015211 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.823952223 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.822965661 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820775963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.822345948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823101745 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820444468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819878575 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824306717 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820984961 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821012037 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821131323 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820341927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824210868 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820125655 seconds)
  done (took 38.19076763 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.822054222 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823605837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.820526545 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822652441 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.825333006 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820892285 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.824158615 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825239443 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821973161 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823195474 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82606353 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82500392 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821306231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821288426 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82581518 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824340528 seconds)
  done (took 30.928317543 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82328955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.824758475 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.825635788 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.825131503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.821463631 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.823019754 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824848434 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.821928215 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.823120196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.82543991 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.824583609 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.824682724 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.824773765 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.826306915 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.822376237 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.826129224 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.824221016 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.82265592 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.825113113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.827546374 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.823758207 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.823129412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.825820242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.827494069 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.82256688 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.824587318 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.822909788 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.824211315 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.822607534 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.826526533 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.823256358 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.824092092 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.823687638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.823371136 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.829136451 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.823495439 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.826400352 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.825965692 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.827378041 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.826310821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.826833186 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.824461805 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.82605101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.827199636 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.824403728 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.826855833 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.824049619 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.825945683 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.825587249 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.82488583 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.827271279 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.828758235 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.827643261 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.827240339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.828054038 seconds)
  done (took 102.134748269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826164994 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827740154 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.825022847 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.828294451 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827840372 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824485918 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827237232 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.826110735 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825599846 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.827598321 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.826899729 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828439145 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824384958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828858005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.826498457 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827344181 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.82588646 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.827603994 seconds)
  done (took 34.639726007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.825521713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826453191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.828391149 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.826190715 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.825333075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829581442 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825661626 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.828745226 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828653284 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.826729742 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825828574 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.828500853 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828300766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.830845424 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826878035 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826221266 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.829661453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828416671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.826607749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825908181 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829845271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829040006 seconds)
  done (took 41.967105081 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.829288509 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.829943504 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.847326462 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.876046142 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.865734702 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.83002944 seconds)
  done (took 12.837433984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828263756 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829995051 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828086725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832200223 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831293593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828896509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827467601 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827803986 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832561115 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827596819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828767602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831158511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831422075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829307797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830747929 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830731125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828054 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826823443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829555749 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831759104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827680414 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831747751 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82987465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828259934 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8296584 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829978115 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831251494 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829744026 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828582801 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831076451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830055822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830028308 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831455044 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830102344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832669549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831256074 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829189034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832073745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831329302 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829404141 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831428215 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832060523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832322013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83063523 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832220961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829349961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829889365 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830880743 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830340939 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833098683 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83142938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829729454 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832222783 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832023847 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832633016 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833798912 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831198112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829472267 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832743978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83105092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830722959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834149377 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830011608 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831871769 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832948511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830497134 seconds)
  done (took 122.579340944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829771018 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831426144 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831409848 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831896253 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829918299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829875406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830081524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831702761 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831562124 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832360765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834600267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831947654 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832915558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831814092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831143876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830977451 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831927562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83233821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832604478 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835385333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832244189 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830867559 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831439949 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831222339 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831015513 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835543662 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831913985 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831883146 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831956451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832167718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833094824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832703001 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83168245 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833669809 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834685493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8323047 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83115733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832466693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831164517 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835538203 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833457073 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836472334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83294323 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833129885 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834156639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83266999 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8337762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833492123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832634778 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833463334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83417976 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835906241 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834510467 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834059439 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833782435 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833909872 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834370585 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834543923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833552604 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83720639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833012037 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835032238 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837374064 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835572726 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834029985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833688185 seconds)
  done (took 122.739013234 seconds)
done (took 2501.708165931 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.899460755 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.829588824 seconds)
  done (took 15.4940007 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.996597796 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.952276368 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.836639037 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.842427965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.833840481 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.856109771 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.851958637 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.834691627 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.836086681 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.838031941 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.837153895 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.025667151 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.854341798 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.835647932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.836885412 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.931499585 seconds)
  done (took 51.774057659 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.841155726 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840398139 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.851938119 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.8423524 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.839183692 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.851846472 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.871375436 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.844043556 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.873909357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.84990202 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.912430739 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.847209777 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.839316589 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.888864259 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.850589658 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.853496865 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92666445 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.910911633 seconds)
  done (took 35.304216479 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.916812625 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.842396417 seconds)
  done (took 10.534014875 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.853530489 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.842396067 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.858392049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838883376 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.852509183 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.848831329 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.851237044 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.853603793 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.864838858 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.86793659 seconds)
  done (took 70.303108419 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.843351727 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.842463182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.845011804 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840266678 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834309058 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.834905987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.841230819 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.838436042 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515000955 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.873801484 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.846896408 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844568161 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838346935 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.842582499 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842493128 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.864496947 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.977063329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.837155265 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.835857016 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.844872647 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.840236289 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.90812117 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.85053518 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.840385994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.871698796 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.52007495 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.847792863 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.848106806 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.955460393 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.837913792 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.840668631 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.843855311 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.844129947 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.234535818 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.125973613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.835764503 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.8479726 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.849474344 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.839129362 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.974137174 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.844218183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847468644 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.834564168 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.114414829 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.917689588 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.881303549 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.175090468 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.840881059 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.844508307 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.873754182 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.844874975 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.843366034 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.859490951 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361986915 seconds)
  done (took 131.098456884 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836879797 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.127628842 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989949378 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837296552 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113162095 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040167375 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833001884 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888111201 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839033443 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.041433186 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053674787 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943228877 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839532463 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.838260998 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838962761 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835491821 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997245902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.904887151 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.83759776 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.836007312 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867140073 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045893262 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.95837055 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838452903 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.858758175 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04547639 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.955736651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.942295035 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.311881679 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.835996176 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902895004 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837272833 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.839760365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837448473 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995593452 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939536804 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9271237 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.839601716 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837733198 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840083161 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.501033703 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036818434 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935438624 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980105338 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.989783022 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.043933033 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.48930366 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.840861216 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.485752822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001084693 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.051954121 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.045440746 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.962768836 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.838257884 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.996068169 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.839805744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838961843 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075792822 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979507031 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937606579 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841294884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.83810036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838635815 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.084633842 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.8394599 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.933923983 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839661817 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836787736 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941036137 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944573454 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.978875274 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052802189 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.874016601 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.591745611 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.058987792 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056182949 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909434425 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075415248 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840627212 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836357909 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9263341 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.593672556 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.041468057 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087012572 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.061979427 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874640563 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.438919221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.840381735 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.037745278 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.026293295 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034008108 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988957164 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.990598999 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.157559486 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844752705 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.840647343 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.068220128 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978144835 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844919628 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201921951 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075000986 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.463716906 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86160842 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137832448 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974145906 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.158707491 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.466574877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840806464 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007823268 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884979738 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.846515019 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844453823 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.033061773 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.648930574 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839191583 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.567276126 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.907344841 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844528206 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043695774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843145918 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051484722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846763614 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078151969 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.032559403 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87802558 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.018651173 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.988419304 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.639139645 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092125932 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083999911 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960155995 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10912137 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.566752447 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842433384 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119017191 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841858422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.843969378 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009614038 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844356158 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990307955 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.844893116 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.070833258 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865833471 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999688824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84439421 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.077022858 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.877320289 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898528509 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847036399 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967003535 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849464224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.725467782 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998256212 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845174544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841534067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.248063658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.844199871 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990274283 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.072153391 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866029475 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912015703 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.368854538 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845387758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931995196 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867721765 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.451580408 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.844563557 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.053806623 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.788264673 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.273204441 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.845865608 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.083396107 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.075771367 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.846102347 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842324942 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.585827915 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.5499233 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845611318 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.004049117 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.22139832 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.495227099 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048354328 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845801295 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970819214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846718193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.921500066 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19536297 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84393215 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.843190685 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.846535935 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.844094608 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845933714 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052860961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879714287 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.346813676 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979291488 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065507734 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.156410535 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.069748731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888431156 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849797173 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093098846 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848925792 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.908154059 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.844791452 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86930373 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075778006 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845845101 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081909657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098972713 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.743247343 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897228458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.850833259 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84564184 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.844229807 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.992867881 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936738124 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.847515197 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.846942229 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956768103 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.968327517 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.039937345 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.442331511 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.968045907 seconds)
  done (took 892.294219409 seconds)
done (took 1208.567562139 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.84819695 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.846849911 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838840421 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.843861619 seconds)
  done (took 29.159634205 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851314857 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.84911263 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.850494223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.849380361 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85132017 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.848402368 seconds)
  done (took 12.87618743 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879543149 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84327595 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845313016 seconds)
  done (took 21.345668304 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.918300892 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.253819874 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.956733236 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.291326795 seconds)
  done (took 10.197547476 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.853320216 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.851099376 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.851160443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.853017019 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.850327183 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.851945837 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.85139181 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.850827533 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.852163782 seconds)
  done (took 18.445768238 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.98079582 seconds)
done (took 97.787802555 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.07771636 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.115662109 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.958900978 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.984250283 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.621914858 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213055853 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.830349013 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.554213064 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.849064134 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 4.164096948 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.879862882 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.845289263 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.208935897 seconds)
    (14/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.292410647 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.917735761 seconds)
    (16/309) benchmarking ("sort", BigInt, false)...
    done (took 6.849908048 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.173739152 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.849670564 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.833470248 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.045665545 seconds)
    (21/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.456461391 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.125589828 seconds)
    (23/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.859419205 seconds)
    (24/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.056311845 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85129849 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.877447453 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.871529746 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.441741635 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.01496437 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.858748516 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.493426699 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.984477825 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.630008185 seconds)
    (34/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.059238067 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.151105808 seconds)
    (36/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.85871822 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.872107072 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.846978568 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.835930618 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.688436371 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.538272856 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.065273644 seconds)
    (43/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.970885325 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.016982601 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.827920505 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.094966095 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.855530942 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.136900201 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.303300303 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.987768665 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.154377067 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.975597693 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.419921182 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.936901602 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.021675355 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.878915315 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.964910816 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.990204856 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.141579073 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.222094397 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.839765575 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.132848138 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.840786859 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.288499594 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.918089453 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.809959311 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.958698635 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.905867312 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.245059388 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.879685488 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.856242426 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.272583569 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.859123078 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 4.739517679 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.884869582 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.856524591 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.171391163 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.85518115 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.863184093 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.083327131 seconds)
    (81/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.105665742 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.860229337 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.517740751 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.294195291 seconds)
    (85/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.942351262 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.551659435 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.740426718 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.152633539 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.860784614 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.856126757 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195956388 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.845495488 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.141111712 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.84194238 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16562665 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.951515715 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.034906521 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.06295616 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.099928105 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.905338649 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.856546963 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.916420029 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.184294019 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.969060928 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.528104089 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.082021608 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.841743511 seconds)
    (108/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.137933521 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.874762883 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.689158298 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.859104872 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.117457647 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.369035507 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.454457142 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.09550224 seconds)
    (116/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.972956256 seconds)
    (117/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.993558958 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.18319363 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191272293 seconds)
    (120/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.88810796 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.885652635 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.29993906 seconds)
    (123/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.196364991 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.884529372 seconds)
    (125/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.939336488 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.113212787 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.998587145 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.846960522 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.085351938 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.128935704 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.941824372 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.478455636 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041712935 seconds)
    (134/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.047689859 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192304283 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964312811 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.990145954 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.855962864 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.030412054 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.149565357 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.845444793 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.858414071 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.266554946 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.883739476 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.858565897 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.117362821 seconds)
    (147/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.992918364 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8923741 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.882626694 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.883755719 seconds)
    (151/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.034676324 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.968428329 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.031789215 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.948260435 seconds)
    (155/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.458436806 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953507828 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080601159 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.24363645 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.863014421 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.462517141 seconds)
    (161/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.947748703 seconds)
    (162/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.358532731 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.229370111 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.882601531 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.988303244 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.092201856 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.971608739 seconds)
    (168/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.078106171 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.934788666 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877146765 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.847291215 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.135087862 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860681643 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.098809352 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.847486458 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.245225466 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.220631022 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.963278346 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.934434807 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.923267146 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.9820476 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.238847754 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.882295487 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860098174 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.296947038 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.398037418 seconds)
    (187/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.066282182 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.888608778 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.304083055 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.937080423 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.9221782 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.900921175 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.233212344 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.7237427 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.846317948 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.16338233 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.104810486 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.105188807 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926274835 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.917760472 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.846988885 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.783579463 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.431305379 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.118810398 seconds)
    (205/309) benchmarking ("sort", Int8, false)...
    done (took 4.893891754 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.140530961 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.806107252 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.920177054 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.248633194 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.934935328 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.077149266 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.581334568 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.765633679 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.880162538 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.867060942 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.951483663 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.918562256 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.061228969 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.884046169 seconds)
    (220/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.028796943 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.750979471 seconds)
    (222/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.870725197 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255451476 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.90728821 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848006906 seconds)
    (226/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.434774471 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.149375259 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 5.624058987 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.894611796 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.755061895 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.927235502 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.3707121 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.703336124 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.060078871 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.162024932 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.01071655 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.746214312 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.403134938 seconds)
    (239/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954382339 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.539226138 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.38457923 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.870336742 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.921685762 seconds)
    (244/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.860288965 seconds)
    (245/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.151565105 seconds)
    (246/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 4.622554668 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.06263227 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.50822711 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.999385843 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045454889 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.111836233 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.053334794 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.998092989 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.792702583 seconds)
    (255/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.976607863 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.895862307 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.4546343 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.870857608 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.110692398 seconds)
    (260/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.308486917 seconds)
    (261/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.216798769 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080298123 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.781662576 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.267006477 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.168355442 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87199049 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.167628991 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.017198593 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.981849819 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.054576411 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159799499 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.876508928 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.15854954 seconds)
    (274/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.004054015 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.889535019 seconds)
    (276/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.447253258 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.753655447 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.954980594 seconds)
    (279/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.011234728 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 5.654492732 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.383681905 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.870060386 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.179731646 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.174332266 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.206385898 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.95674304 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.947911845 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.956175154 seconds)
    (289/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.113139076 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.081513532 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140203281 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.044079338 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.054539221 seconds)
    (294/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.985969197 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.898784164 seconds)
    (296/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.899729067 seconds)
    (297/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.997593907 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.973339425 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915976077 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.860526512 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.858147989 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.974067382 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.239486753 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.39289519 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.965951638 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.874519609 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.939854651 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.210505772 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.950799502 seconds)
  done (took 1021.808968514 seconds)
done (took 1023.605499074 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.909515089 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903682855 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.886743888 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.908708404 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.997773418 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915493356 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.89678791 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889606816 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.934616712 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935286619 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.885069995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.914205081 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.887707241 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.884452559 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.885201944 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901005102 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191646133 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.906429685 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.902488219 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.896180876 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.90434642 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.886089697 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.937300333 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.914649427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.892701928 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.889315148 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.892951776 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.906964924 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996500208 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.889732749 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.896764297 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.897550159 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.194082695 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.907635667 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881232213 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.909780942 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898660843 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.898276255 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888763755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918721913 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.326898979 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.891878249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888567078 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.888215615 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.888803224 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.893985946 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89247058 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893505009 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902862539 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903306112 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.32569825 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.904221049 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.891605701 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.889298156 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.898081459 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886597717 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.897150016 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906949037 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.907993101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905251863 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182982036 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914514153 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888253263 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.906284418 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895788403 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.35912343 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887397046 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.89278885 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.326206592 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.896697497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.36281051 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899809934 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.88889278 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.903320604 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.919598652 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.191848126 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.906035875 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.887911125 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.895782067 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.886667057 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.900593967 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901037511 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.894047813 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.88909313 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905343298 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.917746567 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.900182419 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.89231323 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.899064302 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.907615225 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897583199 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.900476615 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.894616969 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.884859049 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.897948175 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.894127595 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.893659813 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.89413453 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.896846458 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.899245439 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.325084306 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909308356 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.886875504 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.88539416 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.890076497 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.903483395 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.324605025 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.892876336 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.912825856 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.937276809 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.891679142 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.185372225 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.917843368 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907456464 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.90191839 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.893254394 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.886182565 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185240262 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.349736867 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.911225816 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.891931191 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.890433896 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907047918 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.895600722 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.890952697 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.197004924 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.915943503 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905083492 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.014506385 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.902791411 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.925450211 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.889298478 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.89447264 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.920333148 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.909790799 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.924569779 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.897024762 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905951494 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.912177731 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.889834685 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.902625517 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.902353579 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.893366639 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.903489473 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.887614463 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.921462586 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90605293 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905269195 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.915797658 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.01353563 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.888448099 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.187970727 seconds)
done (took 296.8930039 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.961855004 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.888211828 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.988494542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888515525 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.973074344 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.972182751 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.886301486 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.888329902 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.885564839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.266726354 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884980748 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.887725853 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88404842 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.888381195 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.9735672 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.891076703 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.887185379 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.228730511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.892908586 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.960006084 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.891329538 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.888209888 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889923218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.280984814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.889552473 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.889182613 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.964352645 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.887968268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240512008 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887430208 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.888385505 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.238652302 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.978764764 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.910329599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.899357879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.895543765 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.973273528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.890910209 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972227406 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.970472535 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996128048 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.93220635 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.880931151 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.883996947 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.890846007 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.893079508 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.886678591 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.919326192 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.890703889 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.8885117 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229842481 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.901824917 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.898937911 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.888679943 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888037659 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.914901571 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.888847277 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.892758546 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.97773122 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892325255 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.953822398 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.272330342 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.266500862 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.890531847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.887035338 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888445759 seconds)
  done (took 185.717442719 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.959013995 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.966572767 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.959155916 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.893239236 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.939704979 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.961682227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.894199794 seconds)
  done (took 15.391442876 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.898092825 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894596632 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.942479169 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939437478 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.894107625 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.042449548 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890506504 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.904026384 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889451722 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.944820255 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892198159 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.89225645 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.897920852 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891730773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940488809 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.907192805 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.006980195 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.895469947 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894492253 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.049185303 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889438677 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.900342007 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94663473 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.90489572 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894113033 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.900537553 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.477499998 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893364612 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888435431 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.892469891 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891219186 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.936060469 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894212603 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.891024543 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891893753 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.01080559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.895884326 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889889731 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.891496058 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.891683531 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.893429999 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.893036529 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.894027349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.89219809 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.892390292 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.919034855 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.896870826 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.894783067 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.893300128 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.896545091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.94296653 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895542819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.889129286 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.891302052 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.949995684 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900255346 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897583931 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.888273104 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.328281497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893186414 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.050969163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943342205 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.893776801 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.942456085 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895648308 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894609054 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.895330526 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894866536 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.950285991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.894693864 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944792158 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892640437 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.053880729 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.919967819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897033107 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899595328 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899627873 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895421212 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.894811675 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.902794309 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.895229202 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.897411767 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.904523961 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892846989 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.894600935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.010510515 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006276669 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.895378761 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.911984964 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.902550518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.893713808 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948061282 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.894764152 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.894245405 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.948491809 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.010844571 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.952681052 seconds)
  done (took 208.654158365 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901865506 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.905690547 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898520763 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913099915 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.897651184 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.897919854 seconds)
  done (took 13.239078748 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.899244569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.898299917 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89888963 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896392296 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.898171162 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.898331852 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.899738241 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899280802 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.903779945 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.897159696 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.899405437 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.898311324 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.899049819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.899835591 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.900312927 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.897030583 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.900575281 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896192648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.897826612 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898813614 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.04021944 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.90001354 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.9001403 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.900168666 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.90407132 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.898153006 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.906886578 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.89890731 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.898216684 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.902629091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.905826189 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.900130593 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.897974458 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.904368492 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.905609352 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.901514145 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901702741 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.898769791 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897764481 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.897818129 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.900000047 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899009822 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.900136216 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.901472738 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.899796408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.904903871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.903676749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907218498 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.902392021 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.901134421 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.898669942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.898604392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.899710606 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.89931032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.903241982 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903537264 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.90363955 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.898436585 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.900738556 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.900801029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.903026936 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.901961195 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.900893853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.907204426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.9077231 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.902496196 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.902206964 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906291366 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900566787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.900305855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.90219725 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896733151 seconds)
  done (took 139.823574155 seconds)
done (took 564.654402431 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.170007788 seconds)
  done (took 8.999231635 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97248961 seconds)
  done (took 8.899263675 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.402220751 seconds)
  done (took 10.230319127 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.902999775 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.912414953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902600873 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.898308919 seconds)
  done (took 29.454130646 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.941825735 seconds)
  done (took 8.770284493 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909418726 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.893480314 seconds)
  done (took 15.667308412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.9928908 seconds)
  done (took 8.820317132 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.97263514 seconds)
  done (took 8.8060924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903866046 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.892402976 seconds)
  done (took 15.639459423 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.881170222 seconds)
  done (took 8.708441275 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.636617615 seconds)
  done (took 11.476140191 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904861115 seconds)
  done (took 8.7468756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.960612146 seconds)
  done (took 8.78780744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.055865138 seconds)
  done (took 9.884140425 seconds)
done (took 164.719625856 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.900021528 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.897305696 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894479718 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.896984694 seconds)
  done (took 29.416287549 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.935018911 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.934409178 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.937342443 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.944085758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.939308347 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.936220423 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.928025273 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.927267406 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.944419071 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.94028526 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.938081639 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.939633167 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.936391416 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.929915976 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.939546667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.936046405 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.947253269 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.937651861 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.927492716 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.938158888 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.904790304 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.947692951 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.939764174 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.903302949 seconds)
  done (took 48.262624543 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.101869393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.974062673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.055505081 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.954683026 seconds)
  done (took 9.915808839 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.953862316 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.955178361 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.967756072 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.00666869 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.047592619 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.96742048 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.92750432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.923045564 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.910975294 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.956091801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.030740286 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.974337427 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.039929144 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.905003882 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.090503163 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.90463187 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.902455357 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.956612104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.005635038 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.020454739 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.905359091 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.955289943 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.959153751 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.972564114 seconds)
  done (took 49.069980006 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.901333992 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.911655612 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.910139363 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.902759809 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.902820571 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.905023064 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.908966251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.904794506 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.924703196 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904502674 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.903347158 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.90291723 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.903246549 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.903986736 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.903490158 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.917026554 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.91615547 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.904214719 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.908999863 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.909417322 seconds)
  done (took 39.982354213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.89732032 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.842629353 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.248234631 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.153873605 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.900433657 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.898062147 seconds)
  done (took 32.771542952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.91610212 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.968495505 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.911058445 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.963219277 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040440294 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.918056822 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.903203382 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.968831159 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.011144682 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969714697 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.920961223 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.926529528 seconds)
  done (took 25.249814899 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.894357163 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.892928159 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.909112458 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.908735217 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.910673857 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.907271839 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.907361876 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.893473411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.916706775 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.913594008 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.905636473 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.909316965 seconds)
  done (took 44.701795018 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98473034 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.937887334 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.900370877 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583031835 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27819603 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109866225 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509260037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240161239 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.902420517 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175372398 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.923332741 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005001007 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157548278 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333360521 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930900715 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367294054 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201165898 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105706605 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926015834 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598342507 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964444701 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033901711 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.715914404 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961029786 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111544313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031894103 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.161320331 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901647461 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038978949 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937285774 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911253597 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901998477 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174387479 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283498529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007020567 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912520129 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522851693 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.614216985 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.896472167 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.682463725 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.670611244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.0315463 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914554617 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903848352 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83988562 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.004204964 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278042723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.910618416 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.613466977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906334976 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913436436 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00217492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.911129911 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.715957255 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821568663 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910187118 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.900441701 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908682268 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475906762 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04416786 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046261817 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.873808449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.002488097 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681328077 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309677667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.058168438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.915221675 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910418528 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846078565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.611881175 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967949919 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239423056 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.929916677 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56528521 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240130503 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.996848063 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849504091 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178605593 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379563413 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.879566879 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138412327 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911454611 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84911486 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.858459713 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849144981 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177599652 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950546862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.678687756 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955320959 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.249913092 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922428104 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928376286 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934977708 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13809779 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.796200002 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918294596 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.729913944 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053948178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935073393 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259899095 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853258762 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.916142944 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173488486 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.13154955 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.942386873 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410290209 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083469709 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425986678 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.971065035 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.02440742 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96306356 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.194091008 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979744264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.052773496 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979339301 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916796949 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218035473 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448837546 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.051719548 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.968034164 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046233889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.244106778 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949117445 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003767023 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931521973 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921102328 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.701744557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478639455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.920678854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.925454983 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945757692 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965236245 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.92403908 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86923909 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.550213695 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965281583 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.93817352 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14714237 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428918373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232838916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856587431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249160208 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978596569 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.14423694 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.570531469 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.00315649 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180071153 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951239216 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.971210648 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967988127 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943554781 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021874263 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946206376 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.024720657 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213585208 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.928137956 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.9283719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.744639298 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.959949427 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924453719 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.928160755 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673805099 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200458517 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950345165 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929409523 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.814676902 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.938493119 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987680541 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929484963 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934174711 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.463005348 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638057129 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.928617704 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.514908346 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145472884 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936849997 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.720768768 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042267981 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.014789404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203970404 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986724096 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.860210006 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.635976213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.62115575 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926424967 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860136765 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.926708531 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934534172 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937109899 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.12184106 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201405772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973351093 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.634721923 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.968664105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936022097 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.931013307 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926716058 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.436801026 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.083719121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.067318787 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967256262 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068848982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.94083316 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86208104 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.930675908 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930577724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926339343 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.928024116 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956252424 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.630543592 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305537392 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188792544 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.541335376 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941607685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.664849655 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.990813502 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.924000257 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.599258212 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191393561 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.988609062 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936870583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.936855588 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.638432105 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.623443854 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494247255 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252919215 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239013123 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363780253 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.0931934 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954073102 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266896608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862748013 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48438704 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98466443 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278325399 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875292161 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018241281 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.578773023 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274389021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941705137 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154684872 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319590731 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.669781952 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074178975 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14025435 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965393917 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.032532063 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888053069 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.217252438 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072374454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.671258326 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139887214 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269439466 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.623790498 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.058455235 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.928784984 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.609511564 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016710798 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.644436509 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102730168 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.070215155 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.849527254 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412336217 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935196194 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.156935708 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269698815 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.048289738 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.055304887 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868466255 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942459955 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940142433 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.932322401 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.924707467 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.814291409 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.185136403 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939425281 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8651808 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.994990549 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214919217 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.838928911 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.935527266 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93060283 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23492077 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414552957 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099820518 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.975807274 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.444399375 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940554705 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86573679 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865493691 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.62511545 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.938085896 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909802133 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14788781 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.034557578 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877335322 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957924736 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00943434 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188306768 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.947008336 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204709846 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208511697 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634082321 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956176578 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.031814199 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.61202407 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.045822228 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930888546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167788695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686831505 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15876698 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.958489499 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.891169047 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.932573783 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146954571 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932250771 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.825155267 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170427598 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.654442586 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.020896786 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25284828 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003182245 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.826775477 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.983990701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.0271148 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943423489 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011495318 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944002725 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.945017211 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94423234 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97986008 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839772607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.062585686 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.947869441 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026679402 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.081114848 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.459197256 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.93993686 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210796124 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316699296 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261427494 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997183874 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933276938 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935086067 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868095599 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083433602 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.160272401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207938752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066053737 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.049597374 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957681817 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624143977 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099232154 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171938768 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209077873 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.830119385 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385438302 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970871956 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.936668705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946913561 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.146187637 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154668783 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247809924 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116570771 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.97031457 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299349366 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212003399 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.936509895 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936469429 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527880798 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.037746152 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620192365 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.977489178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.840918273 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214755185 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945861509 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319421394 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959189761 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.092434903 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.710897926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.68050222 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229511573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928765004 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001044628 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214659309 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323954967 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254075807 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005835327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94881807 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.047945221 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086997033 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.819261232 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.937616178 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936266013 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988117109 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.647051016 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949633006 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213412883 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248535596 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.935842191 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.81753852 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9617709 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947603371 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16136474 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2037934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191277242 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948010924 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944592191 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.751968653 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213785262 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004096656 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874033247 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.942447091 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038661305 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186389489 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959062486 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.392579248 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.651500195 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205867664 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.939926408 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960326023 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046756098 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301279912 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266755396 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476147368 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147086499 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.526677789 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457609252 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238317182 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.94469909 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.052676322 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240974681 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.943098633 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97356778 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974503271 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.21400628 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252515361 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.02692168 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649581313 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.911393524 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.282851872 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502669289 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879675569 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949526962 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.002172768 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942992899 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.070277286 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952988669 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.816213315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048608272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.721973069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219343674 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.945295649 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.931929393 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.670984385 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17862718 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971394099 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082231239 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94401795 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.616468068 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.289182166 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199809117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.976847062 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.947480236 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.946540615 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942242488 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926348692 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.140301056 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.13875635 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233970643 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.008120702 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.976170303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946463496 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.158843138 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153648658 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.820343113 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08410645 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973568998 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982037686 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.848239852 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449784081 seconds)
  done (took 1700.213412606 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971033881 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.932546137 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.9663205 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.947224181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009803368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9831018 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.973279016 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.999085555 seconds)
  done (took 57.661652569 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.927766549 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.146556609 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.935753491 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.926856527 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.936416356 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.929387516 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.092575763 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.935624173 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.935931038 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.938341694 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.931450629 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923671245 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.230711958 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.945161858 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.941809074 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.909737404 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.930897753 seconds)
  done (took 75.381159381 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.92251775 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.125504754 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.945429427 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.934077771 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.927717991 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.925594927 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.699258537 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.925967881 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.912869381 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.033817329 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.545560419 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.91393239 seconds)
  done (took 87.670844246 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.92215346 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.918314235 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.91670747 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.917399156 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.916040537 seconds)
  done (took 11.434689074 seconds)
done (took 2213.586839485 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.164950493 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131453626 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151216206 seconds)
  done (took 6.123082166 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.066756999 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.109680303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.232399955 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.239503865 seconds)
  done (took 10.499145464 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.204277189 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.285424891 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.124906218 seconds)
  done (took 8.461701738 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.328807462 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.916878267 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.024841132 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.916712319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.91387434 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.918006879 seconds)
  done (took 22.59580167 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.920768264 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.920238357 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.916369045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.921138963 seconds)
  done (took 9.5244499 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.902049544 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.654816145 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.904356973 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.914556091 seconds)
  done (took 21.2211876 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.666458376 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.67913173 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.659921772 seconds)
  done (took 9.851268324 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.566187971 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.863189821 seconds)
  done (took 9.274952033 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.201159671 seconds)
  done (took 4.067495078 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.070897063 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.202578299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.40884866 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.444496401 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.500387362 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.80345901 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.246200655 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.180108869 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.334863314 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.375702789 seconds)
  done (took 25.436285278 seconds)
done (took 142.331549657 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.31727099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.175734351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.139181476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.317817092 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.157549485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.13958572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.372206445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.299658012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.779470161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.780462422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.271449662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.157791033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.096291327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.1754722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096789113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.300065908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.159104371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.323832655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.007492497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.171928491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.362004257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.912134452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.118537936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.924437261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.157309606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.091521575 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.488405627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.300297768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.16205259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.494943211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.090962655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.3194221 seconds)
  done (took 173.529459553 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.711621475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938452336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.938517065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937737486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.514982699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938875294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.939441003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.938343712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.19849221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.163143366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.938941565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.506863371 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.937677653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937521914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.940494782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.93833215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.30044611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.7577391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947537997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955941923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.963224057 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.474017824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.963363979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.53189191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.367209731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962791197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93814784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966747194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.943412337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.954191759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.954460758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.936989387 seconds)
  done (took 211.209211978 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932350895 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.955053884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.938330956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940076722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.94561177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.944964442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.942214397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.939544571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.496248558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.482756021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944040979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.945628765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943675122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.941620756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.942122655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.938984979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.964519089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.946908756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.941562779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949022396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.954765705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.739227296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945557656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.756035366 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.950809763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953381278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938818054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958840775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946738829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.439306577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956750183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944709233 seconds)
  done (took 223.353418699 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147435489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.948116583 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.947746191 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.905764196 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.950106275 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.951484492 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.947448912 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.149963094 seconds)
  done (took 19.83818492 seconds)
done (took 629.812271537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.499480848 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.275479359 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.135342111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.974314586 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.200605822 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.01216237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.973538931 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.040577868 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.703624145 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.039370588 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.667604197 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.991539284 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.731235452 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.996711663 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.095692261 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.023478052 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.519331065 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.608402576 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149738904 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.031577025 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.140982131 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.946693124 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.044030106 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.721743777 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.732694674 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.966840187 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.156453282 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.525316704 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.981520625 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.135971368 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.704325538 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.365927841 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.98488347 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.96900499 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.024469472 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006389907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.321282045 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.982853056 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.097772086 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.711925062 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.017777329 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.583435055 seconds)
  done (took 106.666634658 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.943974041 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.941784136 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.940605224 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.942457168 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.943989066 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.943256664 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.942838272 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.941594423 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.943239625 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.940314738 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.943263392 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.94597637 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.942982427 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.943559402 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.941838033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.943690748 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.945022799 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.945957484 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.942445626 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.944199941 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.943919471 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.942590342 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.944207785 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.944159834 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.946190192 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.946397697 seconds)
  done (took 52.419783352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.956434421 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.103450784 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.178939304 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.974757854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.959259754 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.961078942 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.977870503 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.959483346 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.960543906 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.960692054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.051942024 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962826003 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977347602 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.185050932 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.970923894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.956421692 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.957461128 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.957937621 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.107566838 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972331018 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.978204 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.959410502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.974541848 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.966821235 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.95834432 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955852138 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.960191239 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.391614812 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.965566467 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.050738111 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.029526839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.97822865 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.346741198 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.191401423 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.023000495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.96504396 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.958760554 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054218193 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.962909884 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.958816024 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977903322 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.962733512 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.182005023 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.454118468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.969186733 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.958452425 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.400306618 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063382939 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001646024 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968455435 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.18447297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.974390234 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.959441291 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.958471157 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.996714534 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.972650392 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.959262677 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.262793166 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.970417219 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.978042092 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.964134553 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.960125215 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115409656 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.965832747 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.105588607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.966616479 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.967688449 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.961418836 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184442676 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.976743496 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.462621302 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.971669979 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.963088333 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.054754213 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.110730556 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.430888859 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.97145222 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122780871 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.367142945 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.982715246 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.969843758 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.381515134 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.988932686 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.969261809 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.96422056 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.961247081 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.965963047 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.002875122 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.977326383 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.40267614 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.464489521 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.274962112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.985686882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.974989452 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.960116576 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.264016133 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.96740808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.961098774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.176657864 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.473523426 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.968483546 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.966201514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.447931242 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.973478379 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.980073851 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.968929164 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.186501455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.974009026 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.002827417 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.960117819 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.969093001 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.963378402 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.978520097 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.969392104 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.95953989 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.434199956 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.070248448 seconds)
  done (took 242.225614386 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.957442056 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.958416071 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.956560735 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.953658394 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.949993489 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.95711425 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.959571751 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.957142646 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.956767268 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.952307716 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.952307783 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.961486718 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.959127263 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.962965116 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.002424116 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.963520981 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.569320244 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.956509127 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.95687104 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.954181047 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.606150979 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959720399 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.955859209 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.973691984 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.953546385 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.957399155 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.956819915 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.990860648 seconds)
  done (took 170.039568052 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.955919769 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.072376678 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.970259321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978439592 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.957035905 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.947672942 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.975279563 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.964540482 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.94902184 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.941318719 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.940320601 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.004728129 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.95875205 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.045914027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.976273308 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.976007688 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050150722 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.956452902 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.938539884 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.943876366 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.974333515 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.940922467 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.007073496 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.069571673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.956610998 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.056983827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.946966618 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.941413709 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.940521988 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.057459106 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.955097075 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.998219391 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.967438109 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.955214188 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059546684 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055917929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.044355785 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.972921463 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.940226785 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.930615596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.930736981 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.921915253 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.050946997 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.945525932 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.92985646 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.036385542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.947879577 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.935101735 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.933708189 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.922745458 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.937530087 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.940426928 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.994456928 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052752849 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.956790565 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.947240323 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.951126376 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.209813976 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.931470737 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.015986002 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.913955314 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036817722 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.943966221 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.906879012 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.922001953 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.925607163 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.948142418 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.955297645 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0191213 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.921481345 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.01448677 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.948907546 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.915511241 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.917304554 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.913191524 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.026868514 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.028602328 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.94402415 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.950837181 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.936512576 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898829236 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.904947581 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.892846445 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.926172744 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.907952997 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.017764782 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020118299 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.909079217 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.908443838 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.90064024 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.90073154 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.92515027 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024352409 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.941853105 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.993224272 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.965089616 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.970763272 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.912682475 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913090473 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.895665487 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.95580266 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.908746301 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.90391762 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.220610385 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.962045793 seconds)
  done (took 208.424518875 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.986985901 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.36449599 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.950678633 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.939635426 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.182476765 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.31601788 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.662771179 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.932818881 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.932118848 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.955122579 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.092840648 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.993437569 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.947066523 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.917601523 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.345723094 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.919642483 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.928891996 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.950240588 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.935850183 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.479112254 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233934949 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.057800714 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.928528415 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.032643936 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.91344661 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224669597 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.258940841 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.311352335 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.967322455 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.274232904 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.277748407 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.621844242 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.133059113 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.180921117 seconds)
  done (took 74.97115226 seconds)
done (took 856.621444116 seconds)
SAVING RESULT...
DONE!
